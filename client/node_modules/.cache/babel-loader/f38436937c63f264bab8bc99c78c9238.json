{"ast":null,"code":"var _jsxFileName = \"D:\\\\final_2\\\\Hostel-Management\\\\client\\\\src\\\\components\\\\AddAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport validator from 'validator';\nimport Axios from 'axios';\nimport { PublicContex } from './PublicContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddAdmin() {\n  _s();\n\n  const [publicData, setPublicData] = useContext(PublicContex);\n  const [admin, setAdmin] = useState({\n    name: \"\",\n    password: \"\",\n    phone: \"\",\n    email: \"\",\n    hostel_id: \"\",\n    designation: \"\",\n    role_id: \"20\",\n    show: false\n  });\n  const [error, setError] = useState({\n    name: \"* field is required\",\n    pass: \"* field is required\",\n    phone: \"* field is required\",\n    mail: \"* field is required\",\n    hostel: \"* field is required\",\n    designation: \"* field is required\",\n    role: \"* field is required\"\n  });\n\n  const addAdmin = () => {\n    Axios.get(\"http://localhost:3001/getData/login\", {\n      params: {\n        mail: admin.email\n      }\n    }).then(response => {\n      console.log(response.data);\n\n      if (response.data === \"notRegistered\") {\n        let cnt = 0;\n        const isEmpty = Object.values(error).every(x => x === null || x === \"\");\n\n        if (isEmpty) {\n          Axios.post(\"http://localhost:3001/add/administration\", {\n            \"name\": admin.name,\n            \"phone\": admin.phone,\n            \"email\": admin.email,\n            \"hostel_id\": admin.hostel_id,\n            \"designation\": admin.designation,\n            \"role_id\": admin.role_id\n          }).then(() => {\n            console.log(\"look it works!!\");\n            cnt++;\n\n            if (cnt === 2) {\n              setAdmin({ ...admin,\n                show: true\n              });\n            }\n          }).catch(e => {\n            alert(\"Something went wrong, try again\");\n            console.log(e);\n          });\n          Axios.post(\"http://localhost:3001/add/login\", {\n            \"password\": admin.password,\n            \"role_id\": admin.role_id,\n            \"email\": admin.email\n          }).then(() => {\n            console.log(\"login added\");\n            cnt++;\n\n            if (cnt === 2) {\n              setAdmin({ ...admin,\n                show: true\n              });\n            }\n          });\n        } else alert(\"No field can remain empty\");\n      } else if (response.data === \"Registered\") {\n        alert(\"This registration number is in use!\");\n      } else {\n        alert(\"Something went wrong, try again!\");\n      }\n    }).catch(e => alert(e));\n    console.log(\"now in handlesubmit\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shadow p-4\",\n      style: {\n        width: \"60%\",\n        border: \"3px solid lightGray\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        marginTop: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        show: admin.show,\n        variant: \"success\",\n        children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: \"How's it going?!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Admin Added successfully...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setAdmin({ ...admin,\n                show: false\n              });\n              window.location.reload();\n            },\n            variant: \"outline-success\",\n            children: \"Close!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), !admin.show && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: addAdmin,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Name\",\n              onChange: event => {\n                const value = event.target.value;\n                setAdmin({ ...admin,\n                  name: value\n                });\n                let msg = \"\";\n                if (value.length === 0) msg = \"* field is required\";else if (value.length < 2) msg = \"Too short!\";\n                setError({ ...error,\n                  name: msg\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: error.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"tel\",\n              placeholder: \"Contact number: 01....\",\n              onChange: event => {\n                const value = event.target.value;\n                setAdmin({ ...admin,\n                  phone: value\n                });\n                let msg = \"\";\n                const regex = /^[0][1][0-9]{9}$/i;\n                if (value.length === 0) msg = \"* field is required\";else if (value.length !== 11) msg = \"Mobile Number must have to be 11 Digits\";else if (!regex.test(value)) msg = \"Invalid format!\";\n                setError({ ...error,\n                  phone: msg\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: error.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"example@something.com\",\n              onChange: event => {\n                const value = event.target.value;\n                setAdmin({ ...admin,\n                  email: value\n                });\n                let msg = \"\";\n                if (value.length === 0) msg = \"* field is required\";else if (!validator.isEmail(value)) msg = \"Invalid format!\";\n                setError({ ...error,\n                  mail: msg\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: error.mail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"password\",\n              onChange: event => {\n                const value = event.target.value;\n                setAdmin({ ...admin,\n                  password: value\n                });\n                let msg = \"\";\n                if (value.length === 0) msg = \"* field is required\";else if (value.length < 5) msg = \"Password should be at least 5 digit long!\";\n                setError({ ...error,\n                  pass: msg\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: error.pass\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Hostel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            onChange: event => {\n              const value = event.currentTarget.value;\n              setAdmin({ ...admin,\n                hostel_id: value\n              });\n              let msg = \"\";\n              if (value.length === 0) msg = \"* field is required\";\n              setError({ ...error,\n                hostel: msg\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select Hostel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 33\n            }, this), publicData.hostel.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.Hostel_ID,\n              children: option.Name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: error.hostel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Designation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            onChange: event => {\n              const value = event.currentTarget.value;\n              if (value === 1) setAdmin({ ...admin,\n                designation: value,\n                role_id: 20\n              });else setAdmin({ ...admin,\n                designation: value\n              });\n              let msg = \"\";\n              if (value.length === 0) msg = \"* field is required\";\n\n              if (value === \"1\") {\n                setError({ ...error,\n                  designation: msg,\n                  role: \"\"\n                });\n              } else {\n                setError({ ...error,\n                  designation: msg\n                });\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select designation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"Provost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"Assistant Provost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"Supervisor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: error.designation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this), admin.designation !== \"1\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              onChange: event => {\n                const value = event.currentTarget.value;\n                setAdmin({ ...admin,\n                  role_id: value\n                });\n                let msg = \"\";\n                if (value.length === 0) msg = \"* field is required\";\n                setError({ ...error,\n                  role: msg\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select designation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"14\",\n                children: \"Cleaning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"15\",\n                children: \"Seat Allocation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"16\",\n                children: \"Supervison\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: error.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: addAdmin,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddAdmin, \"p+oSBX4DgEPZ58BYkPyM287ezaA=\");\n\n_c = AddAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAdmin\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Form","Button","Alert","validator","Axios","PublicContex","AddAdmin","publicData","setPublicData","admin","setAdmin","name","password","phone","email","hostel_id","designation","role_id","show","error","setError","pass","mail","hostel","role","addAdmin","get","params","then","response","console","log","data","cnt","isEmpty","Object","values","every","x","post","catch","e","alert","width","border","marginLeft","marginRight","marginTop","window","location","reload","event","value","target","msg","length","regex","test","isEmail","currentTarget","map","option","index","Hostel_ID","Name"],"sources":["D:/final_2/Hostel-Management/client/src/components/AddAdmin.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport validator from 'validator';\r\nimport Axios from 'axios';\r\n\r\nimport { PublicContex } from './PublicContext';\r\nexport default function AddAdmin() {\r\n\r\n    const [publicData, setPublicData] = useContext(PublicContex);\r\n    const [admin, setAdmin] = useState({\r\n        name: \"\",\r\n        password: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        hostel_id: \"\",\r\n        designation: \"\",\r\n        role_id: \"20\",\r\n        show: false\r\n    });\r\n\r\n    const [error, setError] = useState({\r\n        name: \"* field is required\",\r\n        pass: \"* field is required\",\r\n        phone: \"* field is required\",\r\n        mail: \"* field is required\",\r\n        hostel: \"* field is required\",\r\n        designation: \"* field is required\",\r\n        role: \"* field is required\",\r\n    });\r\n\r\n    const addAdmin = () => {\r\n\r\n        Axios.get(\"http://localhost:3001/getData/login\", { params: { mail: admin.email } }).then((response) => {\r\n            console.log(response.data);\r\n            if (response.data === \"notRegistered\") {\r\n                let cnt = 0;\r\n                const isEmpty = Object.values(error).every(x => x === null || x === \"\");\r\n                if (isEmpty) {\r\n                    Axios.post(\"http://localhost:3001/add/administration\", {\r\n                        \"name\": admin.name,\r\n                        \"phone\": admin.phone,\r\n                        \"email\": admin.email,\r\n                        \"hostel_id\": admin.hostel_id,\r\n                        \"designation\": admin.designation,\r\n                        \"role_id\": admin.role_id,\r\n                    }).then(() => {\r\n                        console.log(\"look it works!!\");\r\n                        cnt++;\r\n                        if (cnt === 2) {\r\n                            setAdmin({ ...admin, show: true });\r\n                        }\r\n                    }).catch((e) => {\r\n                        alert(\"Something went wrong, try again\");\r\n                        console.log(e);\r\n                    });\r\n                    Axios.post(\"http://localhost:3001/add/login\", {\r\n                        \"password\": admin.password,\r\n                        \"role_id\": admin.role_id,\r\n                        \"email\": admin.email\r\n                    }).then(() => {\r\n                        console.log(\"login added\");\r\n                        cnt++;\r\n                        if (cnt === 2) {\r\n                            setAdmin({ ...admin, show: true });\r\n                        }\r\n                    });\r\n                }\r\n                else alert(\"No field can remain empty\");\r\n            }\r\n            else if (response.data === \"Registered\") {\r\n                alert(\"This registration number is in use!\");\r\n            }\r\n            else {\r\n                alert(\"Something went wrong, try again!\");\r\n            }\r\n        }).catch((e) => alert(e));\r\n        console.log(\"now in handlesubmit\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"shadow p-4\" style={{\r\n                width: \"60%\",\r\n                border: \"3px solid lightGray\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                marginTop: \"30px\",\r\n            }} >\r\n                <Alert show={admin.show} variant=\"success\">\r\n                    <Alert.Heading>How's it going?!</Alert.Heading>\r\n                    <p>\r\n                        Admin Added successfully...\r\n                    </p>\r\n                    <hr />\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <Button onClick={() => { setAdmin({ ...admin, show: false }); window.location.reload(); }} variant=\"outline-success\">\r\n                            Close!\r\n                        </Button>\r\n                    </div>\r\n                </Alert>\r\n\r\n                {!admin.show && (\r\n                    <>\r\n\r\n                        <Form onSubmit={addAdmin}>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Name\" onChange={(event) => {\r\n                                    const value = event.target.value;\r\n                                    setAdmin({ ...admin, name: value });\r\n                                    let msg = \"\";\r\n                                    if (value.length === 0)\r\n                                        msg = \"* field is required\";\r\n                                    else if (value.length < 2)\r\n                                        msg = \"Too short!\";\r\n                                    setError({ ...error, name: msg });\r\n                                }} />\r\n                                <span className=\"text-danger\">{error.name}</span>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Contact</Form.Label>\r\n                                <Form.Control type=\"tel\" placeholder=\"Contact number: 01....\" onChange={(event) => {\r\n                                    const value = event.target.value;\r\n                                    setAdmin({ ...admin, phone: value });\r\n                                    let msg = \"\";\r\n                                    const regex = /^[0][1][0-9]{9}$/i;\r\n                                    if (value.length === 0)\r\n                                        msg = \"* field is required\";\r\n                                    else if (value.length !== 11)\r\n                                        msg = \"Mobile Number must have to be 11 Digits\";\r\n                                    else if (!regex.test(value))\r\n                                        msg = \"Invalid format!\";\r\n                                    setError({ ...error, phone: msg });\r\n                                }} />\r\n                                <span className=\"text-danger\">{error.phone}</span>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"example@something.com\" onChange={(event) => {\r\n                                    const value = event.target.value;\r\n                                    setAdmin({ ...admin, email: value });\r\n                                    let msg = \"\";\r\n\r\n                                    if (value.length === 0)\r\n                                        msg = \"* field is required\";\r\n                                    else if (!validator.isEmail(value))\r\n                                        msg = \"Invalid format!\";\r\n                                    setError({ ...error, mail: msg });\r\n                                }} />\r\n                                <span className=\"text-danger\">{error.mail}</span>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"password\" onChange={(event) => {\r\n                                    const value = event.target.value;\r\n                                    setAdmin({ ...admin, password: value });\r\n                                    let msg = \"\";\r\n\r\n                                    if (value.length === 0)\r\n                                        msg = \"* field is required\";\r\n                                    else if (value.length < 5)\r\n                                        msg = \"Password should be at least 5 digit long!\";\r\n                                    setError({ ...error, pass: msg });\r\n                                }} />\r\n                                <span className=\"text-danger\">{error.pass}</span>\r\n                            </Form.Group>\r\n\r\n                        </Form>\r\n\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Hostel</Form.Label>\r\n                            <Form.Select onChange={(event) => {\r\n                                const value = event.currentTarget.value;\r\n                                setAdmin({ ...admin, hostel_id: value })\r\n                                let msg = \"\";\r\n                                if (value.length === 0)\r\n                                    msg = \"* field is required\";\r\n                                setError({ ...error, hostel: msg });\r\n                            }}>\r\n                                <option>Select Hostel</option>\r\n                                {publicData.hostel.map((option, index) => (\r\n                                    <option key={index} value={option.Hostel_ID}>\r\n                                        {option.Name}\r\n                                    </option>\r\n                                ))}\r\n                            </Form.Select>\r\n                            <span className=\"text-danger\">{error.hostel}</span>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Designation</Form.Label>\r\n                            <Form.Select onChange={(event) => {\r\n                                const value = event.currentTarget.value;\r\n                                if(value === 1) setAdmin({ ...admin, designation: value, role_id: 20 });\r\n                                else setAdmin({ ...admin, designation: value });\r\n\r\n                                \r\n                                let msg = \"\";\r\n                                if (value.length === 0)\r\n                                    msg = \"* field is required\";\r\n                                if(value === \"1\"){\r\n                                    setError({ ...error, designation: msg, role:\"\"});\r\n                                }else{\r\n                                    setError({ ...error, designation: msg });\r\n                                }\r\n\r\n                            }}>\r\n                                <option>Select designation</option>\r\n                                <option value=\"1\" >Provost</option>\r\n                                <option value=\"2\">Assistant Provost</option>\r\n                                <option value=\"3\">Supervisor</option>\r\n                            </Form.Select>\r\n                            <span className=\"text-danger\">{error.designation}</span>\r\n                        </Form.Group>\r\n                        {admin.designation !==\"1\" && (<>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Role</Form.Label>\r\n                            <Form.Select onChange={(event) => {\r\n                                const value = event.currentTarget.value;\r\n                                setAdmin({ ...admin, role_id: value })\r\n                                let msg = \"\";\r\n                                if (value.length === 0)\r\n                                    msg = \"* field is required\";\r\n                                setError({ ...error, role: msg });\r\n                            }}>\r\n                                <option>Select designation</option>\r\n                                <option value=\"14\" >Cleaning</option>\r\n                                <option value=\"15\">Seat Allocation</option>\r\n                                <option value=\"16\">Supervison</option>\r\n                            </Form.Select>\r\n                            <span className=\"text-danger\">{error.role}</span>\r\n                        </Form.Group>\r\n                            </>)}\r\n\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={addAdmin}>\r\n                            Submit\r\n                        </Button>\r\n\r\n                    </>)}\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}