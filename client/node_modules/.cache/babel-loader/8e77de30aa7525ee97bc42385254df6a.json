{"ast":null,"code":"var _jsxFileName = \"F:\\\\Preity\\\\Hostel-Management\\\\client\\\\src\\\\components\\\\AdminReg.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport validator from 'validator';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AdminReg() {\n  _s();\n\n  const [admin, setAdmin] = useState({\n    name: \"\",\n    password: \"\",\n    phone: \"\",\n    email: \"\",\n    hostel_id: \"\",\n    designation: \"\",\n    role_id: \"\"\n  });\n  const [error, setError] = useState({\n    name: \"* field is required\",\n    pass: \"* field is required\",\n    phone: \"* field is required\",\n    mail: \"* field is required\",\n    hostel: \"* field is required\",\n    designation: \"* field is required\",\n    role: \"* field is required\"\n  });\n  const [hostel, setHostel] = useState({\n    hostels: []\n  });\n\n  const getHostels = async () => {\n    const response = await Axios.get(\"http://localhost:3001/getData/\", {\n      params: {\n        table: \"hostel\"\n      }\n    }).then(response => {\n      let tmp = {\n        hostels: response.data\n      };\n      setHostel({\n        hostels: response.data\n      }, () => {\n        console.log(hostel.hostels);\n      });\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"hi\");\n    getHostels();\n  }, []);\n\n  const addAdmin = () => {\n    Axios.get(\"http://localhost:3001/getData/login\", {\n      params: {\n        mail: admin.email\n      }\n    }).then(response => {\n      console.log(\"Amar nam preity\");\n      console.log(response.data);\n\n      if (response.data === \"notRegistered\") {\n        const isEmpty = Object.values(error).every(x => x === null || x === \"\");\n\n        if (isEmpty) {\n          Axios.post(\"http://localhost:3001/add/administration\", {\n            \"name\": admin.name,\n            \"phone\": admin.phone,\n            \"email\": admin.email,\n            \"hostel_id\": admin.hostel_id,\n            \"designation\": admin.designation,\n            \"role_id\": admin.role_id\n          }).then(() => {\n            console.log(\"look it works!!\");\n          }).catch(e => {\n            alert(\"Something went wrong, try again\");\n            console.log(e);\n          });\n          Axios.post(\"http://localhost:3001/add/login\", {\n            \"password\": admin.password,\n            \"role_id\": admin.role_id,\n            \"email\": admin.email\n          }).then(() => {\n            console.log(\"login added\");\n          });\n        } else alert(\"No field can remain empty\");\n      } else if (response.data === \"Registered\") {\n        alert(\"This registration number is in use!\");\n      } else {\n        alert(\"Something went wrong, try again!\");\n      }\n    }).catch(e => alert(e));\n    console.log(\"now in handlesubmit\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [JSON.stringify(admin), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shadow p-4\",\n      style: {\n        width: \"60%\",\n        border: \"3px solid lightGray\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        marginTop: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: addAdmin,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Name\",\n            onChange: event => {\n              const value = event.target.value;\n              setAdmin({ ...admin,\n                name: value\n              });\n              let msg = \"\";\n              if (value.length === 0) msg = \"* field is required\";else if (value.length < 2) msg = \"Too short!\";\n              setError({ ...error,\n                name: msg\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: error.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"tel\",\n            placeholder: \"Contact number: 01....\",\n            onChange: event => {\n              const value = event.target.value;\n              setAdmin({ ...admin,\n                phone: value\n              });\n              let msg = \"\";\n              const regex = /^[0][1][0-9]{9}$/i;\n              if (value.length === 0) msg = \"* field is required\";else if (value.length !== 11) msg = \"Mobile Number must have to be 11 Digits\";else if (!regex.test(value)) msg = \"Invalid format!\";\n              setError({ ...error,\n                phone: msg\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: error.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"example@something.com\",\n            onChange: event => {\n              const value = event.target.value;\n              setAdmin({ ...admin,\n                email: value\n              });\n              let msg = \"\";\n              if (value.length === 0) msg = \"* field is required\";else if (!validator.isEmail(value)) msg = \"Invalid format!\";\n              setError({ ...error,\n                mail: msg\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: error.mail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"password\",\n            onChange: event => {\n              const value = event.target.value;\n              setAdmin({ ...admin,\n                password: value\n              });\n              let msg = \"\";\n              if (value.length === 0) msg = \"* field is required\";else if (value.length < 5) msg = \"Password should be at least 5 digit long!\";\n              setError({ ...error,\n                pass: msg\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: error.pass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Hostel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          onChange: event => {\n            const value = event.currentTarget.value;\n            setAdmin({ ...admin,\n              hostel_id: value\n            });\n            let msg = \"\";\n            if (value.length === 0) msg = \"* field is required\";\n            setError({ ...error,\n              hostel: msg\n            });\n          },\n          children: hostel.hostels.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.Hostel_ID,\n            children: option.Name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger\",\n          children: error.hostel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Designation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          onChange: event => {\n            const value = event.currentTarget.value;\n            setAdmin({ ...admin,\n              designation: value\n            });\n            let msg = \"\";\n            if (value.length === 0) msg = \"* field is required\";\n            setError({ ...error,\n              designation: msg\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select designation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Provost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Assistant Provost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"Supervisor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger\",\n          children: error.designation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          onChange: event => {\n            const value = event.currentTarget.value;\n            setAdmin({ ...admin,\n              role_id: value\n            });\n            let msg = \"\";\n            if (value.length === 0) msg = \"* field is required\";\n            setError({ ...error,\n              role: msg\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select designation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Cleaning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Seat Allocation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"Supervison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger\",\n          children: error.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: addAdmin,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-right my-4\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"http://localhost:3000/Signup\",\n          children: \"Not an admin??\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AdminReg, \"7rgPKHZEnZo1yKRDLfRidJzW0cQ=\");\n\n_c = AdminReg;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminReg\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Form","Button","Alert","validator","Axios","AdminReg","admin","setAdmin","name","password","phone","email","hostel_id","designation","role_id","error","setError","pass","mail","hostel","role","setHostel","hostels","getHostels","response","get","params","table","then","tmp","data","console","log","addAdmin","isEmpty","Object","values","every","x","post","catch","e","alert","JSON","stringify","width","border","marginLeft","marginRight","marginTop","event","value","target","msg","length","regex","test","isEmail","currentTarget","map","option","index","Hostel_ID","Name"],"sources":["F:/Preity/Hostel-Management/client/src/components/AdminReg.js"],"sourcesContent":["import React, { useState,useEffect, useContext } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport validator from 'validator';\nimport Axios from 'axios';\n\nexport default function AdminReg () {\n\n    const [admin, setAdmin] = useState({\n        name: \"\",\n        password:\"\",\n        phone:\"\",\n        email:\"\",\n        hostel_id:\"\",\n        designation:\"\",\n        role_id: \"\"\n    });\n\n    const [error, setError] = useState({\n        name: \"* field is required\",\n        pass: \"* field is required\",\n        phone: \"* field is required\",\n        mail: \"* field is required\",\n        hostel: \"* field is required\",\n        designation: \"* field is required\",\n        role: \"* field is required\",\n    });\n    const [hostel, setHostel] = useState({\n        hostels : []\n    })\n\n\n    const getHostels = async() => {\n        const response= await Axios.get(\"http://localhost:3001/getData/\", { params: { table: \"hostel\" } }).then((response) => {\n            let tmp = {hostels : response.data};\n            setHostel({hostels : response.data} , ()=>{\n                console.log(hostel.hostels);\n            });\n        });\n    };\n\n    useEffect( ()=>{\n        console.log(\"hi\");\n        getHostels();\n     }, [] );\n\n    const addAdmin =()=> {\n\n        Axios.get(\"http://localhost:3001/getData/login\", { params: { mail: admin.email } }).then((response) => {\n            console.log(\"Amar nam preity\");\n            console.log(response.data);\n            if(response.data === \"notRegistered\")\n            {\n                const isEmpty = Object.values(error).every(x => x === null || x === \"\");\n                if(isEmpty) {\n                Axios.post(\"http://localhost:3001/add/administration\", {\n                \"name\":admin.name,\n                \"phone\":admin.phone,\n                \"email\":admin.email,\n                \"hostel_id\":admin.hostel_id,\n                \"designation\":admin.designation,\n                \"role_id\":admin.role_id,\n            }).then( ()=> {\n                console.log(\"look it works!!\");\n            }).catch((e)=>{\n                alert(\"Something went wrong, try again\");\n                console.log(e);\n            });\n            Axios.post(\"http://localhost:3001/add/login\", {\n                \"password\":admin.password,\n                \"role_id\": admin.role_id,\n                \"email\": admin.email\n            }).then(()=> {\n                console.log(\"login added\")\n            } ); \n            }\n            else alert(\"No field can remain empty\");\n            }\n            else if(response.data === \"Registered\") {\n                alert(\"This registration number is in use!\");\n            }\n            else {\n                alert(\"Something went wrong, try again!\");\n            }\n        }).catch((e) => alert(e));\n        console.log(\"now in handlesubmit\");\n    };\n\n    return(\n        <>\n        {JSON.stringify(admin)}\n        <div className=\"shadow p-4\" style={{\n            width: \"60%\",\n            border: \"3px solid lightGray\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            marginTop: \"30px\",\n        }} >\n\n        \n\n        <Form onSubmit={addAdmin}>\n            <Form.Group className=\"mb-3\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Name\" onChange={(event) => {\n                const value = event.target.value;\n                setAdmin({ ...admin, name: value });\n                let msg = \"\";\n                if (value.length === 0)\n                    msg = \"* field is required\";\n                else if (value.length < 2)\n                    msg = \"Too short!\";\n                setError({...error, name: msg });\n            }} />\n            <span className=\"text-danger\">{error.name}</span>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n            <Form.Label>Contact</Form.Label>\n            <Form.Control type=\"tel\" placeholder=\"Contact number: 01....\" onChange={(event) => {\n            const value = event.target.value;\n            setAdmin({ ...admin, phone: value });\n            let msg = \"\";\n            const regex = /^[0][1][0-9]{9}$/i;\n            if (value.length === 0)\n                msg = \"* field is required\";\n            else if (value.length !== 11)\n                msg = \"Mobile Number must have to be 11 Digits\";\n            else if (!regex.test(value))\n                msg = \"Invalid format!\";\n                setError({ ...error, phone: msg });\n            }} />\n            <span className=\"text-danger\">{error.phone}</span>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"example@something.com\" onChange={(event) => {\n            const value = event.target.value;\n            setAdmin({ ...admin, email: value });\n            let msg = \"\";\n    \n            if (value.length === 0)\n                msg = \"* field is required\";\n            else if(!validator.isEmail(value))\n                msg = \"Invalid format!\";\n                setError({ ...error, mail: msg });\n            }} />\n            <span className=\"text-danger\">{error.mail}</span>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"password\" onChange={(event) => {\n                const value = event.target.value;\n                setAdmin({ ...admin, password: value });\n                let msg = \"\";\n        \n                if (value.length === 0)\n                    msg = \"* field is required\";\n                else if(value.length < 5)\n                    msg = \"Password should be at least 5 digit long!\";\n                    setError({ ...error, pass: msg });\n                }}/>\n            <span className=\"text-danger\">{error.pass}</span>\n            </Form.Group>\n        \n        </Form>\n\n        <Form.Group className=\"mb-3\">\n            <Form.Label>Hostel</Form.Label>\n            <Form.Select onChange={(event) => {\n            const value = event.currentTarget.value;\n            setAdmin({ ...admin, hostel_id: value })\n            let msg = \"\";\n            if (value.length === 0)\n            msg = \"* field is required\";\n            setError({ ...error, hostel: msg });\n            }}>\n            {hostel.hostels.map((option, index) => (\n                <option key={index} value={option.Hostel_ID}>\n                    {option.Name}\n                </option>\n            ))}\n            </Form.Select>\n            <span className=\"text-danger\">{error.hostel}</span>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n            <Form.Label>Designation</Form.Label>\n            <Form.Select onChange={(event) => {\n            const value = event.currentTarget.value;\n            setAdmin({ ...admin, designation: value })\n            let msg = \"\";\n            if (value.length === 0)\n            msg = \"* field is required\";\n            setError({ ...error, designation: msg });\n            }}>\n            <option>Select designation</option>\n                <option value=\"1\" >Provost</option>\n                <option value=\"2\">Assistant Provost</option>\n                <option value=\"3\">Supervisor</option>\n            </Form.Select>\n            <span className=\"text-danger\">{error.designation}</span>\n        </Form.Group>\n        <Form.Group className=\"mb-3\">\n            <Form.Label>Role</Form.Label>\n            <Form.Select onChange={(event) => {\n            const value = event.currentTarget.value;\n            setAdmin({ ...admin, role_id: value })\n            let msg = \"\";\n            if (value.length === 0)\n            msg = \"* field is required\";\n            setError({ ...error, role: msg });\n            }}>\n            <option>Select designation</option>\n                <option value=\"1\" >Cleaning</option>\n                <option value=\"2\">Seat Allocation</option>\n                <option value=\"3\">Supervison</option>\n            </Form.Select>\n            <span className=\"text-danger\">{error.role}</span>\n        </Form.Group>\n\n\n        <Button variant=\"primary\" type=\"submit\" onClick={addAdmin}>\n                        Submit\n                    </Button>\n                    <p className=\"text-right my-4\">\n                                <a href=\"http://localhost:3000/Signup\">Not an admin??</a>\n                            </p>\n\n        </div>\n\n        </>\n    )\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}