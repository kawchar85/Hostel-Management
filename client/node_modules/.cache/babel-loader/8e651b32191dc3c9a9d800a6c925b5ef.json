{"ast":null,"code":"var _jsxFileName = \"D:\\\\final_2\\\\Hostel-Management\\\\client\\\\src\\\\components\\\\GetStudentData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport Axios from 'axios';\nimport UpdateHostel from './UpdateHostel';\nimport UpdateStudent from './UpdateStudent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GetStudentData() {\n  _s();\n\n  const [update, setUpdate] = useState(false);\n  const [stdData, setStdData] = useState(null);\n  const [id, setId] = useState();\n  const [error, setError] = useState({\n    id: \"* field is required\"\n  });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isEmpty = Object.values(error).every(x => x === null || x === \"\");\n\n    if (isEmpty) {\n      Axios.get(\"http://localhost:3001/getData/student/info\", {\n        params: {\n          reg: id\n        }\n      }).then(response => {\n        if (response.data === \"error\") {\n          setError({ ...error,\n            id: \"Something error !!\"\n          });\n        } else if (response.data === \"notRegistered\") {\n          setError({ ...error,\n            id: \"This registration number is not registered!\"\n          });\n        } else {\n          let data = JSON.stringify(response.data[0]);\n          setStdData(data);\n          setUpdate(true);\n        }\n      }).catch(e => alert(e));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!update && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shadow p-4\",\n      style: {\n        width: \"60%\",\n        border: \"3px solid lightGray\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"reg\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Registration No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter registration number of student...\",\n            onChange: event => {\n              const value = event.target.value;\n              setId(value);\n              let msg = \"\";\n              if (value.length === 0) msg = \"* field is required\";else if (Number(value) <= 0 || !Number.isInteger(Number(value))) msg = \"Invalid registration number!\";\n              console.log(\"msg = \" + msg);\n              setError({ ...error,\n                id: msg\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: error.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Select Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), update && /*#__PURE__*/_jsxDEV(UpdateStudent, {\n      data: stdData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n}\n\n_s(GetStudentData, \"UnxcJZFD55RYl3LIPgIRx4XPBAE=\");\n\n_c = GetStudentData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetStudentData\");","map":{"version":3,"names":["React","useState","Form","Button","Axios","UpdateHostel","UpdateStudent","GetStudentData","update","setUpdate","stdData","setStdData","id","setId","error","setError","handleSubmit","event","preventDefault","isEmpty","Object","values","every","x","get","params","reg","then","response","data","JSON","stringify","catch","e","alert","width","border","marginLeft","marginRight","value","target","msg","length","Number","isInteger","console","log"],"sources":["D:/final_2/Hostel-Management/client/src/components/GetStudentData.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport Axios from 'axios';\r\n\r\nimport UpdateHostel from './UpdateHostel';\r\nimport UpdateStudent from './UpdateStudent';\r\n\r\nexport default function GetStudentData() {\r\n\r\n    const [update, setUpdate] = useState(false);\r\n    const [stdData, setStdData] = useState(null);\r\n    const [id, setId] = useState();\r\n\r\n    const [error, setError] = useState({\r\n        id: \"* field is required\",\r\n    })\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const isEmpty = Object.values(error).every(x => x === null || x === \"\");\r\n\r\n        if (isEmpty) {\r\n            Axios.get(\"http://localhost:3001/getData/student/info\", { params: { reg: id } }).then((response) => {\r\n                if(response.data === \"error\"){\r\n                    setError({ ...error, id: \"Something error !!\" });\r\n                } \r\n                else if(response.data === \"notRegistered\"){\r\n                    setError({ ...error, id: \"This registration number is not registered!\" });\r\n                } \r\n                else {\r\n                    let data = JSON.stringify(response.data[0]);\r\n                    setStdData(data);\r\n                    setUpdate(true);\r\n                }\r\n            }).catch((e) => alert(e));\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        {!update && (\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid lightGray\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        }} >\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"reg\">\r\n                        <Form.Label>Registration No</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"Enter registration number of student...\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            \r\n                            setId(value);\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (Number(value) <= 0 || !Number.isInteger(Number(value)))\r\n                                msg = \"Invalid registration number!\"\r\n                                console.log(\"msg = \"+msg);\r\n                            setError({ ...error, id: msg });\r\n                        }}  />\r\n                        <span className=\"text-danger\">{error.id}</span>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Select Student\r\n                    </Button>\r\n                </Form>\r\n\r\n        </div> )}\r\n        {update && (<UpdateStudent data={stdData} />)}\r\n        <br/><br/>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,eAAe,SAASC,cAAT,GAA0B;EAAA;;EAErC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACW,EAAD,EAAKC,KAAL,IAAcZ,QAAQ,EAA5B;EAEA,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC;IAC/BW,EAAE,EAAE;EAD2B,CAAD,CAAlC;;EAIA,MAAMI,YAAY,GAAIC,KAAD,IAAW;IAE5BA,KAAK,CAACC,cAAN;IAEA,MAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcP,KAAd,EAAqBQ,KAArB,CAA2BC,CAAC,IAAIA,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAK,EAApD,CAAhB;;IAEA,IAAIJ,OAAJ,EAAa;MACTf,KAAK,CAACoB,GAAN,CAAU,4CAAV,EAAwD;QAAEC,MAAM,EAAE;UAAEC,GAAG,EAAEd;QAAP;MAAV,CAAxD,EAAiFe,IAAjF,CAAuFC,QAAD,IAAc;QAChG,IAAGA,QAAQ,CAACC,IAAT,KAAkB,OAArB,EAA6B;UACzBd,QAAQ,CAAC,EAAE,GAAGD,KAAL;YAAYF,EAAE,EAAE;UAAhB,CAAD,CAAR;QACH,CAFD,MAGK,IAAGgB,QAAQ,CAACC,IAAT,KAAkB,eAArB,EAAqC;UACtCd,QAAQ,CAAC,EAAE,GAAGD,KAAL;YAAYF,EAAE,EAAE;UAAhB,CAAD,CAAR;QACH,CAFI,MAGA;UACD,IAAIiB,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAf,CAAX;UACAlB,UAAU,CAACkB,IAAD,CAAV;UACApB,SAAS,CAAC,IAAD,CAAT;QACH;MACJ,CAZD,EAYGuB,KAZH,CAYUC,CAAD,IAAOC,KAAK,CAACD,CAAD,CAZrB;IAaH;EACJ,CArBD;;EAwBA,oBACI;IAAA,WACC,CAACzB,MAAD,iBACD;MAAK,SAAS,EAAC,YAAf;MAA4B,KAAK,EAAE;QAC/B2B,KAAK,EAAE,KADwB;QAE/BC,MAAM,EAAE,qBAFuB;QAG/BC,UAAU,EAAE,MAHmB;QAI/BC,WAAW,EAAE;MAJkB,CAAnC;MAAA,uBAMQ,QAAC,IAAD;QAAM,QAAQ,EAAEtB,YAAhB;QAAA,wBACI,QAAC,IAAD,CAAM,KAAN;UAAY,SAAS,EAAC,MAAtB;UAA6B,SAAS,EAAC,KAAvC;UAAA,wBACI,QAAC,IAAD,CAAM,KAAN;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,IAAD,CAAM,OAAN;YAAc,IAAI,EAAC,QAAnB;YAA4B,WAAW,EAAC,yCAAxC;YAAkF,QAAQ,EAAGC,KAAD,IAAW;cACnG,MAAMsB,KAAK,GAAGtB,KAAK,CAACuB,MAAN,CAAaD,KAA3B;cAEA1B,KAAK,CAAC0B,KAAD,CAAL;cACA,IAAIE,GAAG,GAAG,EAAV;cACA,IAAIF,KAAK,CAACG,MAAN,KAAiB,CAArB,EACID,GAAG,GAAG,qBAAN,CADJ,KAEK,IAAIE,MAAM,CAACJ,KAAD,CAAN,IAAiB,CAAjB,IAAsB,CAACI,MAAM,CAACC,SAAP,CAAiBD,MAAM,CAACJ,KAAD,CAAvB,CAA3B,EACDE,GAAG,GAAG,8BAAN;cACAI,OAAO,CAACC,GAAR,CAAY,WAASL,GAArB;cACJ1B,QAAQ,CAAC,EAAE,GAAGD,KAAL;gBAAYF,EAAE,EAAE6B;cAAhB,CAAD,CAAR;YACH;UAXD;YAAA;YAAA;YAAA;UAAA,QAFJ,eAcI;YAAM,SAAS,EAAC,aAAhB;YAAA,UAA+B3B,KAAK,CAACF;UAArC;YAAA;YAAA;YAAA;UAAA,QAdJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAiBI,QAAC,MAAD;UAAQ,OAAO,EAAC,SAAhB;UAA0B,IAAI,EAAC,QAA/B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAjBJ;MAAA;QAAA;QAAA;QAAA;MAAA;IANR;MAAA;MAAA;MAAA;IAAA,QAFA,EA+BCJ,MAAM,iBAAK,QAAC,aAAD;MAAe,IAAI,EAAEE;IAArB;MAAA;MAAA;MAAA;IAAA,QA/BZ,eAgCA;MAAA;MAAA;MAAA;IAAA,QAhCA,eAgCK;MAAA;MAAA;MAAA;IAAA,QAhCL;EAAA,gBADJ;AAoCH;;GAtEuBH,c;;KAAAA,c"},"metadata":{},"sourceType":"module"}