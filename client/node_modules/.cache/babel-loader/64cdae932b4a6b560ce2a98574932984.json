{"ast":null,"code":"var _jsxFileName = \"F:\\\\tmp\\\\Hostel-Management\\\\client\\\\src\\\\components\\\\SwapManual.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport Axios from 'axios'; //import { PublicContex } from './PublicContext';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SawpManual() {\n  _s();\n\n  //const [publicData, setPublicData] = useContext(PublicContex);\n  const [show, setShow] = useState(false);\n  const [finalMsg, setFinalMsg] = useState(\"\");\n  const [reg, setReg] = useState({\n    reg1: 0,\n    reg2: 0\n  });\n  const [info, setInfo] = useState({\n    hostel1: null,\n    hostel2: null,\n    room1: null,\n    room2: null\n  });\n  const [user1, setUser1] = useState(null);\n  const [user2, setUser2] = useState(null);\n  const [error, setError] = useState({\n    reg1: \"* field is required\",\n    reg2: \"* field is required\"\n  });\n  useEffect(() => {\n    console.log(\"effect... loading\");\n    console.log(info);\n    console.log(\"user\");\n    console.log(user1);\n    console.log(user2);\n  }, [info, user1, user2]);\n\n  const setReg2 = async () => {\n    try {\n      await Axios.put(\"http://localhost:3001/update/students\", {\n        hostel_id: user1.Hostel_ID,\n        room_id: user1.Room_ID\n      }).then(response => {\n        if (response.data === \"error\") {\n          setFinalMsg(\"Something Error!!\");\n        } else {\n          setFinalMsg(\"Room Updated successfully...\\n\" + reg.reg1 + \" is assigned\");\n        }\n\n        setShow(true);\n      }).catch(e => alert(e));\n    } catch (err) {\n      console.log('err:  ' + err);\n    }\n  };\n\n  const setReg1 = async () => {\n    try {\n      await Axios.put(\"http://localhost:3001/update/students\", {\n        hostel_id: user2.Hostel_ID,\n        room_id: user2.Room_ID\n      }).then(response => {\n        if (response.data === \"error\") {\n          setFinalMsg(\"Something Error!!\");\n        } else {\n          setFinalMsg(\"Hostel Updated successfully...\");\n        }\n\n        setShow(true);\n      }).catch(e => alert(e));\n    } catch (err) {\n      console.log('err:  ' + err);\n    }\n  };\n\n  const checkReg2 = async reg2 => {\n    try {\n      await Axios.get(\"http://localhost:3001/getData/student\", {\n        params: {\n          reg: reg2\n        }\n      }).then(response => {\n        if (response.data === \"error\") {\n          alert(\"Something error!!\");\n        } else if (response.data === \"notRegistered\") {\n          setError({ ...error,\n            reg2: \"Reg2 is not registered!!\"\n          });\n        } else {\n          //let data = JSON.stringify(response.data[0]);\n          let data = response.data[0];\n          console.log(\"res2 data\");\n          console.log(data);\n          setInfo({ ...info,\n            hostel2: data.Hostel_ID\n          });\n          setInfo({ ...info,\n            room2: data.Room_ID\n          });\n          setUser2(data);\n          const isEmpty = Object.values(info).every(x => x === null || x === \"\");\n          console.log(isEmpty);\n          console.log(info);\n\n          if (!isEmpty) {\n            console.log(\"helllooooo\");\n          }\n        }\n      });\n    } catch (err) {\n      console.log('err:  ' + err);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); //check erro?\n\n    const isEmpty = Object.values(error).every(x => x === null || x === \"\");\n    console.log(isEmpty);\n    console.log(error);\n\n    if (isEmpty) {\n      try {\n        Axios.get(\"http://localhost:3001/getData/student\", {\n          params: {\n            reg: reg.reg1\n          }\n        }).then(response => {\n          if (response.data === \"error\") {\n            alert(\"Something error!!\");\n          } else if (response.data === \"notRegistered\") {\n            setError({ ...error,\n              reg1: \"Reg1 is not registered!!\"\n            });\n          } else {\n            //let data = JSON.stringify(response.data[0]);\n            let data = response.data[0];\n            console.log(\"res1 data\");\n            console.log(data);\n            setInfo({ ...info,\n              room1: data.Room_ID\n            });\n            setInfo({ ...info,\n              hostel1: data.Hostel_ID\n            });\n            setUser1(data);\n            checkReg2(reg.reg2);\n          }\n        });\n      } catch (err) {\n        console.log('err:  ' + err);\n      } //     try {\n      //         const response = await Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg1 } });\n      //         if(response.data === \"error\"){\n      //             alert(\"Something error!!\");\n      //         } else if (response.data === \"notRegistered\"){\n      //             setError({ ...error, reg1: \"Reg1 is not registered!!\" });\n      //         } else {\n      //             //let data = JSON.stringify(response.data[0]);\n      //             let data = response.data[0];\n      //             console.log(\"res data\");\n      //             console.log(data);\n      //             console.log(\"baaal: \"+ JSON.stringify(data.Hostel_ID) + \" ?? \"+ data.Room_ID);\n      //             console.log(typeof data);\n      //             console.log(typeof JSON.stringify(data.Hostel_ID));\n      //             console.log(typeof data.Room_ID);\n      //             console.log(typeof info.hostel1);\n      //             setInfo({ ...info, hostel1: JSON.stringify(data.Hostel_ID) });\n      //             setInfo({ ...info, room1: data.Room_ID });\n      //             hostel1 = data.Hostel_ID;\n      //             room1 = data.Room_ID;\n      //             console.log(\"check: \"+hostel1+\" --- \"+room1);\n      //             console.log(\"here \"+ info);\n      //             setOkReg1(true);\n      //         }\n      //    } catch(err) {\n      //         console.log('err:  '+ err );\n      //    }\n      // Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg1 } }).then((response) => {\n      //     if(response.data === \"error\"){\n      //         alert(\"Something error!!\");\n      //     } else if (response.data === \"notRegistered\"){\n      //         setError({ ...error, reg1: \"Reg1 is not registered!!\" });\n      //     } else {\n      //         //let data = JSON.stringify(response.data[0]);\n      //         let data = response.data[0];\n      //         console.log(\"res data\");\n      //         console.log(data);\n      //         console.log(\"baaal: \"+ JSON.stringify(data.Hostel_ID) + \" ?? \"+ data.Room_ID);\n      //         console.log(typeof data);\n      //         console.log(typeof JSON.stringify(data.Hostel_ID));\n      //         console.log(typeof data.Room_ID);\n      //         console.log(typeof info.hostel1);\n      //         setInfo({ ...info, hostel1: JSON.stringify(data.Hostel_ID) });\n      //         setInfo({ ...info, room1: data.Room_ID });\n      //         hostel1 = data.Hostel_ID;\n      //         room1 = data.Room_ID;\n      //         console.log(\"check: \"+hostel1+\" --- \"+room1);\n      //         console.log(\"here \"+ info);\n      //         setOkReg1(true);\n      //     }\n      // }).catch((e) => alert(e));\n      // console.log(OkReg1 + \" ... \"+ OkReg2);\n      // //if(OkReg1){\n      //     const response2 = await Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg2 } });\n      //     if(response2.data === \"error\"){\n      //         alert(\"Something error!!\");\n      //     } else if (response2.data === \"notRegistered\"){\n      //         setError({ ...error, reg2: \"Reg2 is not registered!!\" });\n      //     } else {\n      //         let data = response2.data[0];\n      //         hostel2 = data.Hostel_ID;\n      //         room2 = data.Room_ID;\n      //         console.log(\"check2: \"+hostel2+\" --- \"+room2);\n      //         setOkReg2(true);\n      //         setShow(true);\n      //     }\n      // Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg2 } }).then((response) => {\n      //     if(response.data === \"error\"){\n      //         alert(\"Something error!!\");\n      //     } else if (response.data === \"notRegistered\"){\n      //         setError({ ...error, reg2: \"Reg2 is not registered!!\" });\n      //     } else {\n      //         let data = response.data[0];\n      //         hostel2 = data.Hostel_ID;\n      //         room2 = data.Room_ID;\n      //         console.log(\"check2: \"+hostel2+\" --- \"+room2);\n      //         setOkReg2(true);\n      //         setShow(true);\n      //     }\n      // }).catch((e) => alert(e));\n      //}\n      // Axios.put(\"http://localhost:3001/update/hostel\", {\n      //     hostel_id: hostel.id,\n      //     type: hostel.type,\n      //     name: hostel.name,\n      //     address: hostel.address,\n      //     contact: hostel.contact,\n      //     occupied_seats: hostel.occupied_seats,\n      //     total_seats: hostel.total_seats,\n      // }).then((response) => {\n      //     if(response.data === \"error\"){\n      //         console.log(\"baaal error\");\n      //         setFinalMsg(\"Something Error!!\");\n      //     } else {\n      //         setFinalMsg(\"Hostel Updated successfully...\");\n      //     }\n      //     setShow(true);\n      // }).catch((e) => alert(e));\n\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shadow p-4\",\n      style: {\n        width: \"60%\",\n        border: \"3px solid lightGray\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        show: show,\n        variant: \"success\",\n        children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: \"How's it going?!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: finalMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setShow(false);\n              window.location.reload();\n            },\n            variant: \"outline-success\",\n            children: \"Close!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }, this), !show && /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"hostelName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Reg of std 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Registration number of std 1\",\n            onChange: event => {\n              const value = event.target.value;\n              setReg({ ...reg,\n                reg1: value\n              });\n              let msg = \"\";\n              if (value.length === 0) msg = \"* field is required\";else if (value.length < 10) msg = \"Too short! Registration number must be 10 digits.\";else if (value.length > 10) msg = \"Too long!\";\n              setError({ ...error,\n                reg1: msg\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: error.reg1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"hostelName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Reg of std 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Registration number of std 2\",\n            onChange: event => {\n              const value = event.target.value;\n              setReg({ ...reg,\n                reg2: value\n              });\n              let msg = \"\";\n              if (value.length === 0) msg = \"* field is required\";else if (value.length < 10) msg = \"Too short! Registration number must be 10 digits.\";else if (value.length > 10) msg = \"Too long!\";\n              setError({ ...error,\n                reg2: msg\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: error.reg2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Swap Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SawpManual, \"TvbqKOj0RC1PFiigTl6EySAavBE=\");\n\n_c = SawpManual;\n\nvar _c;\n\n$RefreshReg$(_c, \"SawpManual\");","map":{"version":3,"names":["React","useEffect","useState","Form","Button","Alert","Axios","SawpManual","show","setShow","finalMsg","setFinalMsg","reg","setReg","reg1","reg2","info","setInfo","hostel1","hostel2","room1","room2","user1","setUser1","user2","setUser2","error","setError","console","log","setReg2","put","hostel_id","Hostel_ID","room_id","Room_ID","then","response","data","catch","e","alert","err","setReg1","checkReg2","get","params","isEmpty","Object","values","every","x","handleSubmit","event","preventDefault","width","border","marginLeft","marginRight","window","location","reload","value","target","msg","length"],"sources":["F:/tmp/Hostel-Management/client/src/components/SwapManual.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport Axios from 'axios';\r\n\r\n//import { PublicContex } from './PublicContext';\r\n\r\nexport default function SawpManual() {\r\n    //const [publicData, setPublicData] = useContext(PublicContex);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [finalMsg, setFinalMsg] = useState(\"\");\r\n\r\n    const [reg, setReg] = useState({\r\n        reg1: 0,\r\n        reg2: 0,\r\n    })\r\n\r\n    const [info, setInfo] = useState({\r\n        hostel1: null,\r\n        hostel2: null,\r\n        room1: null,\r\n        room2: null,\r\n    })\r\n\r\n    const [user1, setUser1] = useState(null);\r\n    const [user2, setUser2] = useState(null);\r\n\r\n    const [error, setError] = useState({\r\n        reg1: \"* field is required\",\r\n        reg2: \"* field is required\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log(\"effect... loading\");\r\n        console.log(info);\r\n        console.log(\"user\");\r\n        console.log(user1);\r\n        console.log(user2);\r\n    }, [info, user1, user2]);\r\n\r\n    const setReg2 = async () => {\r\n        try{\r\n                await Axios.put(\"http://localhost:3001/update/students\", {\r\n                    hostel_id: user1.Hostel_ID,\r\n                    room_id: user1.Room_ID,\r\n\r\n                }).then((response) => {\r\n                    if(response.data === \"error\"){\r\n                        setFinalMsg(\"Something Error!!\");\r\n                    } else {\r\n                        setFinalMsg(\"Room Updated successfully...\\n\"+reg.reg1+\" is assigned\");\r\n                    }\r\n                    setShow(true);\r\n                }).catch((e) => alert(e));\r\n        } \r\n        catch(err) {\r\n            console.log('err:  '+ err );\r\n        }\r\n    }\r\n\r\n    const setReg1 = async () => {\r\n        try{\r\n                await Axios.put(\"http://localhost:3001/update/students\", {\r\n                    hostel_id: user2.Hostel_ID,\r\n                    room_id: user2.Room_ID,\r\n\r\n                }).then((response) => {\r\n                    if(response.data === \"error\"){\r\n                        setFinalMsg(\"Something Error!!\");\r\n                    } else {\r\n                        setFinalMsg(\"Hostel Updated successfully...\");\r\n                    }\r\n                    setShow(true);\r\n                }).catch((e) => alert(e));\r\n        } catch(err) {\r\n            console.log('err:  '+ err );\r\n       }\r\n    }\r\n    \r\n    const checkReg2 = async (reg2) => {\r\n        try {\r\n                await Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg2 } }).then( (response)=>{\r\n\r\n                    if(response.data === \"error\"){\r\n                        alert(\"Something error!!\");\r\n                    } else if (response.data === \"notRegistered\"){\r\n                        setError({ ...error, reg2: \"Reg2 is not registered!!\" });\r\n                    } else {\r\n                        //let data = JSON.stringify(response.data[0]);\r\n                        let data = response.data[0];\r\n                        console.log(\"res2 data\");\r\n                        console.log(data);\r\n                        \r\n                        setInfo({ ...info, hostel2: data.Hostel_ID});\r\n                        setInfo({ ...info, room2: data.Room_ID});\r\n                        setUser2(data);\r\n\r\n                        const isEmpty = Object.values(info).every(x => x === null || x === \"\");\r\n                        console.log(isEmpty);\r\n                        console.log(info);\r\n                        \r\n                        if (!isEmpty) {\r\n                            console.log(\"helllooooo\");\r\n                        }\r\n                    }\r\n\r\n                });\r\n                \r\n       } catch(err) {\r\n            console.log('err:  '+ err );\r\n       }\r\n    }\r\n\r\n\r\n    const handleSubmit =  (event) => {\r\n\r\n        event.preventDefault();\r\n        //check erro?\r\n        const isEmpty = Object.values(error).every(x => x === null || x === \"\");\r\n        console.log(isEmpty);\r\n        console.log(error);\r\n        \r\n        if (isEmpty) {\r\n\r\n            try {\r\n                Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg1 } }).then((response) =>{\r\n                    if(response.data === \"error\"){\r\n                        alert(\"Something error!!\");\r\n                    } else if (response.data === \"notRegistered\"){\r\n                        setError({ ...error, reg1: \"Reg1 is not registered!!\" });\r\n                    } else {\r\n                        //let data = JSON.stringify(response.data[0]);\r\n                        let data = response.data[0];\r\n                        console.log(\"res1 data\");\r\n                        console.log(data);\r\n                        setInfo({ ...info, room1: data.Room_ID});\r\n                        setInfo({ ...info, hostel1: data.Hostel_ID});\r\n                        \r\n                        setUser1(data);\r\n\r\n                        checkReg2(reg.reg2);\r\n                    }\r\n                });\r\n\r\n\r\n                \r\n       } catch(err) {\r\n            console.log('err:  '+ err );\r\n       }\r\n\r\n        //     try {\r\n        //         const response = await Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg1 } });\r\n        //         if(response.data === \"error\"){\r\n        //             alert(\"Something error!!\");\r\n        //         } else if (response.data === \"notRegistered\"){\r\n        //             setError({ ...error, reg1: \"Reg1 is not registered!!\" });\r\n        //         } else {\r\n        //             //let data = JSON.stringify(response.data[0]);\r\n        //             let data = response.data[0];\r\n        //             console.log(\"res data\");\r\n        //             console.log(data);\r\n        //             console.log(\"baaal: \"+ JSON.stringify(data.Hostel_ID) + \" ?? \"+ data.Room_ID);\r\n        //             console.log(typeof data);\r\n        //             console.log(typeof JSON.stringify(data.Hostel_ID));\r\n        //             console.log(typeof data.Room_ID);\r\n        //             console.log(typeof info.hostel1);\r\n        //             setInfo({ ...info, hostel1: JSON.stringify(data.Hostel_ID) });\r\n        //             setInfo({ ...info, room1: data.Room_ID });\r\n\r\n        //             hostel1 = data.Hostel_ID;\r\n        //             room1 = data.Room_ID;\r\n\r\n        //             console.log(\"check: \"+hostel1+\" --- \"+room1);\r\n\r\n        //             console.log(\"here \"+ info);\r\n\r\n        //             setOkReg1(true);\r\n        //         }\r\n        //    } catch(err) {\r\n        //         console.log('err:  '+ err );\r\n        //    }\r\n\r\n\r\n            // Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg1 } }).then((response) => {\r\n            //     if(response.data === \"error\"){\r\n            //         alert(\"Something error!!\");\r\n            //     } else if (response.data === \"notRegistered\"){\r\n            //         setError({ ...error, reg1: \"Reg1 is not registered!!\" });\r\n            //     } else {\r\n            //         //let data = JSON.stringify(response.data[0]);\r\n            //         let data = response.data[0];\r\n            //         console.log(\"res data\");\r\n            //         console.log(data);\r\n            //         console.log(\"baaal: \"+ JSON.stringify(data.Hostel_ID) + \" ?? \"+ data.Room_ID);\r\n            //         console.log(typeof data);\r\n            //         console.log(typeof JSON.stringify(data.Hostel_ID));\r\n            //         console.log(typeof data.Room_ID);\r\n            //         console.log(typeof info.hostel1);\r\n            //         setInfo({ ...info, hostel1: JSON.stringify(data.Hostel_ID) });\r\n            //         setInfo({ ...info, room1: data.Room_ID });\r\n\r\n            //         hostel1 = data.Hostel_ID;\r\n            //         room1 = data.Room_ID;\r\n\r\n            //         console.log(\"check: \"+hostel1+\" --- \"+room1);\r\n\r\n            //         console.log(\"here \"+ info);\r\n\r\n            //         setOkReg1(true);\r\n            //     }\r\n            // }).catch((e) => alert(e));\r\n\r\n\r\n            // console.log(OkReg1 + \" ... \"+ OkReg2);\r\n            // //if(OkReg1){\r\n            //     const response2 = await Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg2 } });\r\n            //     if(response2.data === \"error\"){\r\n            //         alert(\"Something error!!\");\r\n            //     } else if (response2.data === \"notRegistered\"){\r\n            //         setError({ ...error, reg2: \"Reg2 is not registered!!\" });\r\n            //     } else {\r\n            //         let data = response2.data[0];\r\n            //         hostel2 = data.Hostel_ID;\r\n            //         room2 = data.Room_ID;\r\n\r\n            //         console.log(\"check2: \"+hostel2+\" --- \"+room2);\r\n\r\n            //         setOkReg2(true);\r\n            //         setShow(true);\r\n            //     }\r\n                \r\n                // Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg2 } }).then((response) => {\r\n                //     if(response.data === \"error\"){\r\n                //         alert(\"Something error!!\");\r\n                //     } else if (response.data === \"notRegistered\"){\r\n                //         setError({ ...error, reg2: \"Reg2 is not registered!!\" });\r\n                //     } else {\r\n                //         let data = response.data[0];\r\n                //         hostel2 = data.Hostel_ID;\r\n                //         room2 = data.Room_ID;\r\n\r\n                //         console.log(\"check2: \"+hostel2+\" --- \"+room2);\r\n\r\n                //         setOkReg2(true);\r\n                //         setShow(true);\r\n                //     }\r\n                // }).catch((e) => alert(e));\r\n            //}\r\n\r\n\r\n                // Axios.put(\"http://localhost:3001/update/hostel\", {\r\n                //     hostel_id: hostel.id,\r\n                //     type: hostel.type,\r\n                //     name: hostel.name,\r\n                //     address: hostel.address,\r\n                //     contact: hostel.contact,\r\n                //     occupied_seats: hostel.occupied_seats,\r\n                //     total_seats: hostel.total_seats,\r\n        \r\n                // }).then((response) => {\r\n                //     if(response.data === \"error\"){\r\n                //         console.log(\"baaal error\");\r\n                //         setFinalMsg(\"Something Error!!\");\r\n                //     } else {\r\n                //         setFinalMsg(\"Hostel Updated successfully...\");\r\n                //     }\r\n                //     setShow(true);\r\n                // }).catch((e) => alert(e));\r\n                \r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid lightGray\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        }} >\r\n            <Alert show={show} variant=\"success\">\r\n                <Alert.Heading>How's it going?!</Alert.Heading>\r\n                <p>\r\n                    {finalMsg}\r\n                </p>\r\n                <hr />\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button onClick={() => { setShow(false); window.location.reload(); }} variant=\"outline-success\">\r\n                        Close!\r\n                    </Button>\r\n                </div>\r\n            </Alert>\r\n\r\n            {!show && (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelName\">\r\n                        <Form.Label>Reg of std 1</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"Registration number of std 1\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setReg({ ...reg, reg1: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length < 10)\r\n                                msg = \"Too short! Registration number must be 10 digits.\";\r\n                            else if (value.length > 10)\r\n                                msg = \"Too long!\";\r\n                            setError({ ...error, reg1: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.reg1}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelName\">\r\n                        <Form.Label>Reg of std 2</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"Registration number of std 2\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setReg({ ...reg, reg2: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length < 10)\r\n                                msg = \"Too short! Registration number must be 10 digits.\";\r\n                            else if (value.length > 10)\r\n                                msg = \"Too long!\";\r\n                            setError({ ...error, reg2: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.reg2}</span>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Swap Room\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n        </div>\r\n        <br/><br/>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,iBAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;;AAEA,eAAe,SAASC,UAAT,GAAsB;EAAA;;EACjC;EAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;EAEA,MAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC;IAC3BY,IAAI,EAAE,CADqB;IAE3BC,IAAI,EAAE;EAFqB,CAAD,CAA9B;EAKA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC;IAC7BgB,OAAO,EAAE,IADoB;IAE7BC,OAAO,EAAE,IAFoB;IAG7BC,KAAK,EAAE,IAHsB;IAI7BC,KAAK,EAAE;EAJsB,CAAD,CAAhC;EAOA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,IAAD,CAAlC;EAEA,MAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC;IAC/BY,IAAI,EAAE,qBADyB;IAE/BC,IAAI,EAAE;EAFyB,CAAD,CAAlC;EAKAd,SAAS,CAAC,MAAM;IACZ2B,OAAO,CAACC,GAAR,CAAY,mBAAZ;IACAD,OAAO,CAACC,GAAR,CAAYb,IAAZ;IACAY,OAAO,CAACC,GAAR,CAAY,MAAZ;IACAD,OAAO,CAACC,GAAR,CAAYP,KAAZ;IACAM,OAAO,CAACC,GAAR,CAAYL,KAAZ;EACH,CANQ,EAMN,CAACR,IAAD,EAAOM,KAAP,EAAcE,KAAd,CANM,CAAT;;EAQA,MAAMM,OAAO,GAAG,YAAY;IACxB,IAAG;MACK,MAAMxB,KAAK,CAACyB,GAAN,CAAU,uCAAV,EAAmD;QACrDC,SAAS,EAAEV,KAAK,CAACW,SADoC;QAErDC,OAAO,EAAEZ,KAAK,CAACa;MAFsC,CAAnD,EAIHC,IAJG,CAIGC,QAAD,IAAc;QAClB,IAAGA,QAAQ,CAACC,IAAT,KAAkB,OAArB,EAA6B;UACzB3B,WAAW,CAAC,mBAAD,CAAX;QACH,CAFD,MAEO;UACHA,WAAW,CAAC,mCAAiCC,GAAG,CAACE,IAArC,GAA0C,cAA3C,CAAX;QACH;;QACDL,OAAO,CAAC,IAAD,CAAP;MACH,CAXK,EAWH8B,KAXG,CAWIC,CAAD,IAAOC,KAAK,CAACD,CAAD,CAXf,CAAN;IAYP,CAbD,CAcA,OAAME,GAAN,EAAW;MACPd,OAAO,CAACC,GAAR,CAAY,WAAUa,GAAtB;IACH;EACJ,CAlBD;;EAoBA,MAAMC,OAAO,GAAG,YAAY;IACxB,IAAG;MACK,MAAMrC,KAAK,CAACyB,GAAN,CAAU,uCAAV,EAAmD;QACrDC,SAAS,EAAER,KAAK,CAACS,SADoC;QAErDC,OAAO,EAAEV,KAAK,CAACW;MAFsC,CAAnD,EAIHC,IAJG,CAIGC,QAAD,IAAc;QAClB,IAAGA,QAAQ,CAACC,IAAT,KAAkB,OAArB,EAA6B;UACzB3B,WAAW,CAAC,mBAAD,CAAX;QACH,CAFD,MAEO;UACHA,WAAW,CAAC,gCAAD,CAAX;QACH;;QACDF,OAAO,CAAC,IAAD,CAAP;MACH,CAXK,EAWH8B,KAXG,CAWIC,CAAD,IAAOC,KAAK,CAACD,CAAD,CAXf,CAAN;IAYP,CAbD,CAaE,OAAME,GAAN,EAAW;MACTd,OAAO,CAACC,GAAR,CAAY,WAAUa,GAAtB;IACJ;EACH,CAjBD;;EAmBA,MAAME,SAAS,GAAG,MAAO7B,IAAP,IAAgB;IAC9B,IAAI;MACI,MAAMT,KAAK,CAACuC,GAAN,CAAU,uCAAV,EAAmD;QAAEC,MAAM,EAAE;UAAElC,GAAG,EAAEG;QAAP;MAAV,CAAnD,EAA8EqB,IAA9E,CAAqFC,QAAD,IAAY;QAElG,IAAGA,QAAQ,CAACC,IAAT,KAAkB,OAArB,EAA6B;UACzBG,KAAK,CAAC,mBAAD,CAAL;QACH,CAFD,MAEO,IAAIJ,QAAQ,CAACC,IAAT,KAAkB,eAAtB,EAAsC;UACzCX,QAAQ,CAAC,EAAE,GAAGD,KAAL;YAAYX,IAAI,EAAE;UAAlB,CAAD,CAAR;QACH,CAFM,MAEA;UACH;UACA,IAAIuB,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAX;UACAV,OAAO,CAACC,GAAR,CAAY,WAAZ;UACAD,OAAO,CAACC,GAAR,CAAYS,IAAZ;UAEArB,OAAO,CAAC,EAAE,GAAGD,IAAL;YAAWG,OAAO,EAAEmB,IAAI,CAACL;UAAzB,CAAD,CAAP;UACAhB,OAAO,CAAC,EAAE,GAAGD,IAAL;YAAWK,KAAK,EAAEiB,IAAI,CAACH;UAAvB,CAAD,CAAP;UACAV,QAAQ,CAACa,IAAD,CAAR;UAEA,MAAMS,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcjC,IAAd,EAAoBkC,KAApB,CAA0BC,CAAC,IAAIA,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAK,EAAnD,CAAhB;UACAvB,OAAO,CAACC,GAAR,CAAYkB,OAAZ;UACAnB,OAAO,CAACC,GAAR,CAAYb,IAAZ;;UAEA,IAAI,CAAC+B,OAAL,EAAc;YACVnB,OAAO,CAACC,GAAR,CAAY,YAAZ;UACH;QACJ;MAEJ,CAzBK,CAAN;IA2BR,CA5BA,CA4BC,OAAMa,GAAN,EAAW;MACRd,OAAO,CAACC,GAAR,CAAY,WAAUa,GAAtB;IACJ;EACH,CAhCD;;EAmCA,MAAMU,YAAY,GAAKC,KAAD,IAAW;IAE7BA,KAAK,CAACC,cAAN,GAF6B,CAG7B;;IACA,MAAMP,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcvB,KAAd,EAAqBwB,KAArB,CAA2BC,CAAC,IAAIA,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAK,EAApD,CAAhB;IACAvB,OAAO,CAACC,GAAR,CAAYkB,OAAZ;IACAnB,OAAO,CAACC,GAAR,CAAYH,KAAZ;;IAEA,IAAIqB,OAAJ,EAAa;MAET,IAAI;QACAzC,KAAK,CAACuC,GAAN,CAAU,uCAAV,EAAmD;UAAEC,MAAM,EAAE;YAAElC,GAAG,EAAEA,GAAG,CAACE;UAAX;QAAV,CAAnD,EAAkFsB,IAAlF,CAAwFC,QAAD,IAAa;UAChG,IAAGA,QAAQ,CAACC,IAAT,KAAkB,OAArB,EAA6B;YACzBG,KAAK,CAAC,mBAAD,CAAL;UACH,CAFD,MAEO,IAAIJ,QAAQ,CAACC,IAAT,KAAkB,eAAtB,EAAsC;YACzCX,QAAQ,CAAC,EAAE,GAAGD,KAAL;cAAYZ,IAAI,EAAE;YAAlB,CAAD,CAAR;UACH,CAFM,MAEA;YACH;YACA,IAAIwB,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAX;YACAV,OAAO,CAACC,GAAR,CAAY,WAAZ;YACAD,OAAO,CAACC,GAAR,CAAYS,IAAZ;YACArB,OAAO,CAAC,EAAE,GAAGD,IAAL;cAAWI,KAAK,EAAEkB,IAAI,CAACH;YAAvB,CAAD,CAAP;YACAlB,OAAO,CAAC,EAAE,GAAGD,IAAL;cAAWE,OAAO,EAAEoB,IAAI,CAACL;YAAzB,CAAD,CAAP;YAEAV,QAAQ,CAACe,IAAD,CAAR;YAEAM,SAAS,CAAChC,GAAG,CAACG,IAAL,CAAT;UACH;QACJ,CAjBD;MAqBR,CAtBI,CAsBH,OAAM2B,GAAN,EAAW;QACRd,OAAO,CAACC,GAAR,CAAY,WAAUa,GAAtB;MACJ,CA1Ba,CA4Bb;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MAEA;MAEA;MAEA;MACA;MACA;MACA;MACA;MAGI;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MAEA;MAEA;MAEA;MACA;MACA;MAGA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MAEA;MACA;MACA;MAEI;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MAEA;MACA;MACA;MACA;MACJ;MAGI;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;IAEP;EAEJ,CA7JD;;EA+JA,oBACI;IAAA,wBACA;MAAK,SAAS,EAAC,YAAf;MAA4B,KAAK,EAAE;QAC/Ba,KAAK,EAAE,KADwB;QAE/BC,MAAM,EAAE,qBAFuB;QAG/BC,UAAU,EAAE,MAHmB;QAI/BC,WAAW,EAAE;MAJkB,CAAnC;MAAA,wBAMI,QAAC,KAAD;QAAO,IAAI,EAAElD,IAAb;QAAmB,OAAO,EAAC,SAA3B;QAAA,wBACI,QAAC,KAAD,CAAO,OAAP;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA,UACKE;QADL;UAAA;UAAA;UAAA;QAAA,QAFJ,eAKI;UAAA;UAAA;UAAA;QAAA,QALJ,eAMI;UAAK,SAAS,EAAC,4BAAf;UAAA,uBACI,QAAC,MAAD;YAAQ,OAAO,EAAE,MAAM;cAAED,OAAO,CAAC,KAAD,CAAP;cAAgBkD,MAAM,CAACC,QAAP,CAAgBC,MAAhB;YAA2B,CAApE;YAAsE,OAAO,EAAC,iBAA9E;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA;QAAA;QAAA;QAAA;MAAA,QANJ,EAmBK,CAACrD,IAAD,iBACG,QAAC,IAAD;QAAM,QAAQ,EAAE4C,YAAhB;QAAA,wBACI,QAAC,IAAD,CAAM,KAAN;UAAY,SAAS,EAAC,MAAtB;UAA6B,SAAS,EAAC,YAAvC;UAAA,wBACI,QAAC,IAAD,CAAM,KAAN;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,IAAD,CAAM,OAAN;YAAc,IAAI,EAAC,QAAnB;YAA4B,WAAW,EAAC,8BAAxC;YAAuE,QAAQ,EAAGC,KAAD,IAAW;cACxF,MAAMS,KAAK,GAAGT,KAAK,CAACU,MAAN,CAAaD,KAA3B;cACAjD,MAAM,CAAC,EAAE,GAAGD,GAAL;gBAAUE,IAAI,EAAEgD;cAAhB,CAAD,CAAN;cACA,IAAIE,GAAG,GAAG,EAAV;cACA,IAAIF,KAAK,CAACG,MAAN,KAAiB,CAArB,EACID,GAAG,GAAG,qBAAN,CADJ,KAEK,IAAIF,KAAK,CAACG,MAAN,GAAe,EAAnB,EACDD,GAAG,GAAG,mDAAN,CADC,KAEA,IAAIF,KAAK,CAACG,MAAN,GAAe,EAAnB,EACDD,GAAG,GAAG,WAAN;cACJrC,QAAQ,CAAC,EAAE,GAAGD,KAAL;gBAAYZ,IAAI,EAAEkD;cAAlB,CAAD,CAAR;YACH;UAXD;YAAA;YAAA;YAAA;UAAA,QAFJ,eAcI;YAAM,SAAS,EAAC,aAAhB;YAAA,UAA+BtC,KAAK,CAACZ;UAArC;YAAA;YAAA;YAAA;UAAA,QAdJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAiBI,QAAC,IAAD,CAAM,KAAN;UAAY,SAAS,EAAC,MAAtB;UAA6B,SAAS,EAAC,YAAvC;UAAA,wBACI,QAAC,IAAD,CAAM,KAAN;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,IAAD,CAAM,OAAN;YAAc,IAAI,EAAC,QAAnB;YAA4B,WAAW,EAAC,8BAAxC;YAAuE,QAAQ,EAAGuC,KAAD,IAAW;cACxF,MAAMS,KAAK,GAAGT,KAAK,CAACU,MAAN,CAAaD,KAA3B;cACAjD,MAAM,CAAC,EAAE,GAAGD,GAAL;gBAAUG,IAAI,EAAE+C;cAAhB,CAAD,CAAN;cACA,IAAIE,GAAG,GAAG,EAAV;cACA,IAAIF,KAAK,CAACG,MAAN,KAAiB,CAArB,EACID,GAAG,GAAG,qBAAN,CADJ,KAEK,IAAIF,KAAK,CAACG,MAAN,GAAe,EAAnB,EACDD,GAAG,GAAG,mDAAN,CADC,KAEA,IAAIF,KAAK,CAACG,MAAN,GAAe,EAAnB,EACDD,GAAG,GAAG,WAAN;cACJrC,QAAQ,CAAC,EAAE,GAAGD,KAAL;gBAAYX,IAAI,EAAEiD;cAAlB,CAAD,CAAR;YACH;UAXD;YAAA;YAAA;YAAA;UAAA,QAFJ,eAcI;YAAM,SAAS,EAAC,aAAhB;YAAA,UAA+BtC,KAAK,CAACX;UAArC;YAAA;YAAA;YAAA;UAAA,QAdJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAjBJ,eAkCI,QAAC,MAAD;UAAQ,OAAO,EAAC,SAAhB;UAA0B,IAAI,EAAC,QAA/B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAlCJ;MAAA;QAAA;QAAA;QAAA;MAAA,QApBR;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eA6DA;MAAA;MAAA;MAAA;IAAA,QA7DA,eA6DK;MAAA;MAAA;MAAA;IAAA,QA7DL;EAAA,gBADJ;AAiEH;;GA5UuBR,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}