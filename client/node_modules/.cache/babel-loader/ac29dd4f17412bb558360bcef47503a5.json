{"ast":null,"code":"var _jsxFileName = \"D:\\\\final_2\\\\Hostel-Management\\\\client\\\\src\\\\components\\\\GetAdminData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport Axios from 'axios';\nimport validator from 'validator';\nimport UpdateHostel from './UpdateHostel';\nimport UpdateStudent from './UpdateStudent';\nimport UpdateAdmin from './UpdateAdmin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GetAdminData() {\n  _s();\n\n  const [update, setUpdate] = useState(false);\n  const [adminData, setAdminData] = useState(null);\n  const [id, setId] = useState();\n  const [error, setError] = useState({\n    id: \"* field is required\"\n  });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isEmpty = Object.values(error).every(x => x === null || x === \"\");\n\n    if (isEmpty) {\n      Axios.get(\"http://localhost:3001/getData/admin\", {\n        params: {\n          mail: id\n        }\n      }).then(response => {\n        if (response.data === \"error\") {\n          setError({ ...error,\n            id: \"Something error !!\"\n          });\n        } else if (response.data.length === 0) {\n          setError({ ...error,\n            id: \"This email is not registered!\"\n          });\n        } else {\n          let data = JSON(response.data[0]);\n          setAdminData(data);\n          setUpdate(true);\n          console.log(data);\n        }\n      }).catch(e => alert(e));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!update && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shadow p-4\",\n      style: {\n        width: \"60%\",\n        border: \"3px solid lightGray\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Mail address\",\n            onChange: event => {\n              const value = event.target.value;\n              let msg = \"\";\n\n              if (validator.isEmail(value)) {\n                try {\n                  setId(value);\n                  setError({ ...error,\n                    id: \"\"\n                  });\n                } catch (e) {\n                  console.log(e);\n                }\n              } else {\n                if (value.length === 0) msg = \"* field is required\";else msg = \"Invalid Mail!!\";\n                setError({ ...error,\n                  id: msg\n                });\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: error.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Select Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), update && /*#__PURE__*/_jsxDEV(UpdateAdmin, {\n      data: adminData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n}\n\n_s(GetAdminData, \"TjBPvzqyo5VtTHIqJZ6rsQzdTt0=\");\n\n_c = GetAdminData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAdminData\");","map":{"version":3,"names":["React","useState","Form","Button","Axios","validator","UpdateHostel","UpdateStudent","UpdateAdmin","GetAdminData","update","setUpdate","adminData","setAdminData","id","setId","error","setError","handleSubmit","event","preventDefault","isEmpty","Object","values","every","x","get","params","mail","then","response","data","length","JSON","console","log","catch","e","alert","width","border","marginLeft","marginRight","value","target","msg","isEmail"],"sources":["D:/final_2/Hostel-Management/client/src/components/GetAdminData.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport Axios from 'axios';\r\nimport validator from 'validator';\r\n\r\nimport UpdateHostel from './UpdateHostel';\r\nimport UpdateStudent from './UpdateStudent';\r\nimport UpdateAdmin from './UpdateAdmin';\r\n\r\nexport default function GetAdminData() {\r\n\r\n    const [update, setUpdate] = useState(false);\r\n    const [adminData, setAdminData] = useState(null);\r\n    const [id, setId] = useState();\r\n\r\n    const [error, setError] = useState({\r\n        id: \"* field is required\",\r\n    })\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const isEmpty = Object.values(error).every(x => x === null || x === \"\");\r\n\r\n        if (isEmpty) {\r\n            Axios.get(\"http://localhost:3001/getData/admin\", { params: { mail: id } }).then((response) => {\r\n                if (response.data === \"error\") {\r\n                    setError({ ...error, id: \"Something error !!\" });\r\n                }\r\n                else if (response.data.length === 0) {\r\n                    setError({ ...error, id: \"This email is not registered!\" });\r\n                }\r\n                else {\r\n                    let data = JSON(response.data[0]);\r\n                    setAdminData(data);\r\n                    setUpdate(true);\r\n                    console.log(data);\r\n                }\r\n            }).catch((e) => alert(e));\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {!update && (\r\n                <div className=\"shadow p-4\" style={{\r\n                    width: \"60%\",\r\n                    border: \"3px solid lightGray\",\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\",\r\n                }} >\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"Mail address\" onChange={(event) => {\r\n                                const value = event.target.value;\r\n\r\n                                let msg = \"\";\r\n                                if (validator.isEmail(value)) {\r\n                                    try {\r\n                                        setId(value);\r\n                                        setError({ ...error, id: \"\" })\r\n                                    }\r\n                                    catch (e) {\r\n                                        console.log(e);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    if (value.length === 0)\r\n                                        msg = \"* field is required\";\r\n                                    else\r\n                                        msg = \"Invalid Mail!!\"\r\n                                    setError({ ...error, id: msg });\r\n                                }\r\n                            }} />\r\n                            <span className=\"text-danger\">{error.id}</span>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Select Admin\r\n                        </Button>\r\n                    </Form>\r\n\r\n                </div>)}\r\n            {update && (<UpdateAdmin data={adminData} />)}\r\n            <br /><br />\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}