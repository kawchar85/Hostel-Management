[{"D:\\React Project\\Hostel-Management\\client\\src\\index.js":"1","D:\\React Project\\Hostel-Management\\client\\src\\App.js":"2","D:\\React Project\\Hostel-Management\\client\\src\\components\\Home.js":"3","D:\\React Project\\Hostel-Management\\client\\src\\components\\Hostel.js":"4","D:\\React Project\\Hostel-Management\\client\\src\\components\\NavBar.js":"5","D:\\React Project\\Hostel-Management\\client\\src\\components\\Profile.js":"6","D:\\React Project\\Hostel-Management\\client\\src\\components\\Logout.js":"7","D:\\React Project\\Hostel-Management\\client\\src\\components\\Error.js":"8","D:\\React Project\\Hostel-Management\\client\\src\\components\\Login.js":"9","D:\\React Project\\Hostel-Management\\client\\src\\components\\Signup.js":"10","D:\\React Project\\Hostel-Management\\client\\src\\components\\Room.js":"11","D:\\React Project\\Hostel-Management\\client\\src\\pages\\Login.js":"12","D:\\React Project\\Hostel-Management\\client\\src\\pages\\Register.js":"13","D:\\React Project\\Hostel-Management\\client\\src\\components\\Administration.js":"14","D:\\React Project\\Hostel-Management\\client\\src\\components\\SingleHostel.js":"15"},{"size":247,"mtime":1651179223683,"results":"16","hashOfConfig":"17"},{"size":1502,"mtime":1651349774799,"results":"18","hashOfConfig":"17"},{"size":1867,"mtime":1651220739763,"results":"19","hashOfConfig":"17"},{"size":193,"mtime":1651179223677,"results":"20","hashOfConfig":"17"},{"size":3511,"mtime":1651349774801,"results":"21","hashOfConfig":"17"},{"size":110,"mtime":1651179223681,"results":"22","hashOfConfig":"17"},{"size":108,"mtime":1651179223679,"results":"23","hashOfConfig":"17"},{"size":144,"mtime":1651179223676,"results":"24","hashOfConfig":"17"},{"size":173,"mtime":1651221404079,"results":"25","hashOfConfig":"17"},{"size":144,"mtime":1651222104630,"results":"26","hashOfConfig":"17"},{"size":268,"mtime":1651179223682,"results":"27","hashOfConfig":"17"},{"size":3433,"mtime":1651221459652,"results":"28","hashOfConfig":"17"},{"size":10940,"mtime":1651900837769,"results":"29","hashOfConfig":"17"},{"size":4770,"mtime":1651349774800,"results":"30","hashOfConfig":"17"},{"size":268,"mtime":1651349774802,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"12f24qa",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"35"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"35"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"D:\\React Project\\Hostel-Management\\client\\src\\index.js",[],[],[],"D:\\React Project\\Hostel-Management\\client\\src\\App.js",["83"],[],"import { useState } from \"react\";\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\n\r\nimport NavBar from \"./components/NavBar\";\r\nimport Home from \"./components/Home\";\r\nimport Profile from \"./components/Profile\";\r\nimport Hostel from './components/Hostel';\r\nimport Login from './pages/Login';\r\nimport Logout from \"./components/Logout\";\r\nimport Signup from \"./components/Signup\";\r\nimport Error from \"./components/Error\";\r\nimport Room from \"./components/Room\";\r\nimport Administration from \"./components/Administration\";\r\n\r\n\r\nfunction App() {\r\n\r\n  const [msg, setMsg] = useState(\"Hello World!\");\r\n\r\n  //getting info from NavBar.js\r\n  const getData = (info) => {\r\n    setMsg(info);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar info={getData} />\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/home\" element={<Home />} />\r\n          <Route path=\"/profile\" element={<Profile />} />\r\n          <Route path=\"/hostel/:id\" element={<Hostel />} />\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/logout\" element={<Logout />} />\r\n          <Route path=\"/signup\" element={<Signup />} />\r\n          <Route path=\"/hostel/:hostelId/room/:roomId\" element={<Room />} />\r\n          <Route path=\"/administration\" element={<Administration />} />\r\n\r\n\r\n          <Route path=\"*\" element={<Error />} />\r\n\r\n        </Routes>\r\n      </BrowserRouter>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\React Project\\Hostel-Management\\client\\src\\components\\Home.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\Hostel.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\NavBar.js",["84"],[],"import React, { useEffect, useState } from 'react'\r\nimport { Navbar, Nav, Container, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\nimport SingleHostel from './SingleHostel';\r\n\r\nexport default function NavBar(props) {\r\n\r\n    const handleClick = (selectedKey) => {\r\n        //alert(`selected ${selectedKey}`);\r\n        const msg = \"You are in \" + selectedKey;\r\n        props.info(msg); //passing data to App.js\r\n    }\r\n\r\n    function isLogged() {\r\n        return false;\r\n    }\r\n    function isAdministration() {\r\n        return true;\r\n    }\r\n\r\n    const [hostelList, setHostelList] = useState([]);\r\n    //get Hostel list from Database\r\n    const getHostels = () => {\r\n        Axios.get(\"http://localhost:3001/getData/\", { params: { table: \"hostel\" } }).then((response) => {\r\n            //Axios.get(\"http://localhost:3001/hostel\").then((response) => {\r\n            setHostelList(response.data);\r\n            console.log(\"list\");\r\n            console.log(hostelList);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"effect...\");\r\n        getHostels();\r\n\r\n        //hostel table change er track rakhte hobe.\r\n        //apadoto ignoring\r\n    }, []);\r\n\r\n    let page1, page2;\r\n    if (isLogged()) {\r\n        page1 = \"Profile\";\r\n        page2 = \"Logout\";\r\n    }\r\n    else {\r\n        page1 = \"Login\";\r\n        page2 = \"Signup\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\">\r\n                <Container fluid>\r\n                    <Navbar.Brand ><b>Hostel Management</b></Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n                    <Navbar.Collapse id=\"navbarScroll\">\r\n                        <Nav\r\n                            className=\"me-auto my-2 my-lg-0\"\r\n                            style={{ maxHeight: '100px' }}\r\n                            navbarScroll\r\n                            onSelect={handleClick}\r\n                        >\r\n                            <Nav.Link href=\"/home\">Home</Nav.Link>\r\n\r\n                            <NavDropdown title=\"Hostels\" id=\"navbarScrollingDropdown\">\r\n                                {hostelList.map((val) => {\r\n                                    return <SingleHostel Hostel_ID={val.Hostel_ID} Name={val.Name} />\r\n                                }\r\n                                )}\r\n\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item href=\"/hostel/420\">Custom Test</NavDropdown.Item>\r\n\r\n                            </NavDropdown>\r\n\r\n\r\n                            <Nav.Link href={\"/\" + page1}>{page1}</Nav.Link>\r\n                            <Nav.Link href={\"/\" + page2}>{page2}</Nav.Link>\r\n                            {isAdministration()&&(<Nav.Link href=\"/administration\">Administration</Nav.Link>)}                            \r\n\r\n                        </Nav>\r\n                        <Form className=\"d-flex\">\r\n                            <FormControl\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                className=\"me-2\"\r\n                                aria-label=\"Search\"\r\n                            />\r\n                            <Button variant=\"outline-success\">Search</Button>\r\n                        </Form>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n            <br />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","D:\\React Project\\Hostel-Management\\client\\src\\components\\Profile.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\Logout.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\Error.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\Login.js",[],[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\Signup.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\Room.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\pages\\Login.js",["85"],[],"\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport React from \"react\";\r\nimport {useState} from \"react\";\r\nimport { Container } from 'react-bootstrap';\r\n\r\nfunction Login() {\r\n    const [LoginState, setLoginState] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        ck: false,\r\n\r\n    })\r\n    return(\r\n        <Container className=\"my-5\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center align-items-center\">\r\n                    <h4>Login</h4>\r\n                    \r\n                    <div className=\"my-4 w-50\">\r\n                        <div className=\"form-floating my-3\">\r\n                            <input \r\n                                type=\"email\" \r\n                                className=\"form-control\"  \r\n                                id=\"mailId\"\r\n                                onChange={(event)=> {\r\n                                    const value = event.target.value;\r\n                                    setLoginState({...LoginState,email:value})\r\n                                } }\r\n                            />\r\n                            <label for=\"mailId\">Email address</label>\r\n                        </div>\r\n                        <div className=\"form-floating my-3\">\r\n                            <input \r\n                                type=\"password\"\r\n                                className=\"form-control\" \r\n                                id=\"pass\" \r\n                                onChange={(event)=> {\r\n                                    const value = event.target.value;\r\n                                    setLoginState({...LoginState,password:value})\r\n                                } }\r\n                            />\r\n                            <label for=\"pass\">Password</label>\r\n                        </div>\r\n                        <div className=\"my-4\">\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"ckbox\"\r\n                                    onChange={(event)=> {\r\n                                        const value = event.target.checked;\r\n                                        setLoginState({...LoginState,ck:value})\r\n                                    } }\r\n                                />\r\n                                <label className=\"custom-control-label\" for=\"ckbox\">\r\n                                    Remember me\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-grid\">\r\n                            <button \r\n                                type=\"submit\" \r\n                                className=\"btn btn-primary\"\r\n                                disabled= {!LoginState.email || !LoginState.password}\r\n                            >\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                        <p className=\"forgot-password text-right my-4\">\r\n                            <a href=\"#\">Forgot password?</a>\r\n                        </p>    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Login;","D:\\React Project\\Hostel-Management\\client\\src\\pages\\Register.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\Administration.js",["86","87","88","89","90","91","92","93","94"],[],"//for test \r\n\r\n\r\nimport React, { useState } from 'react'\r\nimport { Form, Collapse, Button } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\n\r\nexport default function Administration() {\r\n\r\n    const [reg, setReg] = useState(0);\r\n    const [name, setName] = useState(\"\");\r\n    const [dept, setDept] = useState(\"\");\r\n    const [merit, setMerit] = useState(0);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [hostel_id, setHostel_ID] = useState(-1);\r\n    const [room_id, setRoom_ID] = useState(-1);\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [role_id, setRole_ID] = useState(2);\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n\r\n    const addStudentInfo = () => {\r\n        Axios.post(\"http://localhost:3001/add/students\", {\r\n            name: name,\r\n            reg: reg,\r\n            dept: dept,\r\n            merit: merit,\r\n            email: email,\r\n            phone: phone,\r\n            hostel_id: hostel_id,\r\n            room_id: room_id,\r\n            role_id: 2,\r\n\r\n        }).then(() => {\r\n            alert(\"student added\");\r\n            console.log(\"std added\");\r\n        });\r\n\r\n        Axios.post(\"http://localhost:3001/add/login\", {\r\n            email: email,\r\n            role_id: 2,\r\n            password: password,\r\n\r\n        }).then(() => {\r\n            alert(\"login info added\");\r\n            console.log(\"login added\");\r\n\r\n        });\r\n    }\r\n\r\n    const updateStudentInfo = () => {\r\n        Axios.put(\"http://localhost:3001/update/students\", {\r\n            reg: \"2018331099\",\r\n            hostel_id: \"55\",\r\n            room_id: \"605\",\r\n\r\n        }).then(() => {\r\n            console.log(\"std updated\");\r\n        });\r\n    }\r\n\r\n    const deleteStudent = (reg) => {\r\n        Axios.delete(`http://localhost:3001/delete/students/${reg}`).then(() => {\r\n            console.log(\"std deleted\");\r\n        });\r\n};\r\n\r\nreturn (\r\n    <div className='m-2' >\r\n        \r\n        Add Student?\r\n        <div>\r\n            <form >\r\n                <div>\r\n                    <label>Reg:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        onChange={(event) => {\r\n                            setReg(event.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <label>Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={(event) => {\r\n                            setName(event.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <br />\r\n                <div>\r\n                    <label>Dept:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={(event) => {\r\n                            setDept(event.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <br />\r\n                <div>\r\n                    <label>Merit:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        onChange={(event) => {\r\n                            setMerit(event.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <br />\r\n                <div>\r\n                    <label>Email:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        onChange={(event) => {\r\n                            setEmail(event.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <label>Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        onChange={(event) => {\r\n                            setPassword(event.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <br />\r\n                <div>\r\n                    <label>Phone:</label>\r\n                    <input\r\n                        type=\"phone\"\r\n                        onChange={(event) => {\r\n                            setPhone(event.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n                <br />\r\n                <div>\r\n\r\n                    <button type=\"submit\" onClick={addStudentInfo}>Add</button>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n\r\n    </div>\r\n);\r\n}\r\n","D:\\React Project\\Hostel-Management\\client\\src\\components\\SingleHostel.js",[],[],{"ruleId":"95","severity":1,"message":"96","line":18,"column":10,"nodeType":"97","messageId":"98","endLine":18,"endColumn":13},{"ruleId":"99","severity":1,"message":"100","line":38,"column":8,"nodeType":"101","endLine":38,"endColumn":10,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":71,"column":29,"nodeType":"105","endLine":71,"endColumn":41},{"ruleId":"95","severity":1,"message":"106","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":14},{"ruleId":"95","severity":1,"message":"107","line":5,"column":16,"nodeType":"97","messageId":"98","endLine":5,"endColumn":24},{"ruleId":"95","severity":1,"message":"108","line":5,"column":26,"nodeType":"97","messageId":"98","endLine":5,"endColumn":32},{"ruleId":"95","severity":1,"message":"109","line":15,"column":23,"nodeType":"97","messageId":"98","endLine":15,"endColumn":35},{"ruleId":"95","severity":1,"message":"110","line":16,"column":21,"nodeType":"97","messageId":"98","endLine":16,"endColumn":31},{"ruleId":"95","severity":1,"message":"111","line":18,"column":12,"nodeType":"97","messageId":"98","endLine":18,"endColumn":19},{"ruleId":"95","severity":1,"message":"112","line":18,"column":21,"nodeType":"97","messageId":"98","endLine":18,"endColumn":31},{"ruleId":"95","severity":1,"message":"113","line":51,"column":11,"nodeType":"97","messageId":"98","endLine":51,"endColumn":28},{"ruleId":"95","severity":1,"message":"114","line":62,"column":11,"nodeType":"97","messageId":"98","endLine":62,"endColumn":24},"no-unused-vars","'msg' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getHostels'. Either include it or remove the dependency array.","ArrayExpression",["115"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Form' is defined but never used.","'Collapse' is defined but never used.","'Button' is defined but never used.","'setHostel_ID' is assigned a value but never used.","'setRoom_ID' is assigned a value but never used.","'role_id' is assigned a value but never used.","'setRole_ID' is assigned a value but never used.","'updateStudentInfo' is assigned a value but never used.","'deleteStudent' is assigned a value but never used.",{"desc":"116","fix":"117"},"Update the dependencies array to be: [getHostels]",{"range":"118","text":"119"},[1208,1210],"[getHostels]"]