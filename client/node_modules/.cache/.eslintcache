[{"D:\\React Project\\Hostel-Management\\client\\src\\index.js":"1","D:\\React Project\\Hostel-Management\\client\\src\\App.js":"2","D:\\React Project\\Hostel-Management\\client\\src\\components\\Home.js":"3","D:\\React Project\\Hostel-Management\\client\\src\\components\\Hostel.js":"4","D:\\React Project\\Hostel-Management\\client\\src\\components\\NavBar.js":"5","D:\\React Project\\Hostel-Management\\client\\src\\components\\Profile.js":"6","D:\\React Project\\Hostel-Management\\client\\src\\components\\Logout.js":"7","D:\\React Project\\Hostel-Management\\client\\src\\components\\Error.js":"8","D:\\React Project\\Hostel-Management\\client\\src\\components\\Login.js":"9","D:\\React Project\\Hostel-Management\\client\\src\\components\\Signup.js":"10","D:\\React Project\\Hostel-Management\\client\\src\\components\\Room.js":"11","D:\\React Project\\Hostel-Management\\client\\src\\pages\\Login.js":"12","D:\\React Project\\Hostel-Management\\client\\src\\pages\\Register.js":"13","D:\\React Project\\Hostel-Management\\client\\src\\components\\Administration.js":"14","D:\\React Project\\Hostel-Management\\client\\src\\components\\SingleHostel.js":"15","D:\\React Project\\Hostel-Management\\client\\src\\components\\AdministrationSidebar.js":"16","D:\\React Project\\Hostel-Management\\client\\src\\components\\AddHostel.js":"17","D:\\React Project\\Hostel-Management\\client\\src\\components\\SidebarItem.js":"18"},{"size":299,"mtime":1652081496815,"results":"19","hashOfConfig":"20"},{"size":1502,"mtime":1651349774799,"results":"21","hashOfConfig":"20"},{"size":1867,"mtime":1651220739763,"results":"22","hashOfConfig":"20"},{"size":193,"mtime":1651179223677,"results":"23","hashOfConfig":"20"},{"size":3491,"mtime":1652113401827,"results":"24","hashOfConfig":"20"},{"size":110,"mtime":1651179223681,"results":"25","hashOfConfig":"20"},{"size":108,"mtime":1651179223679,"results":"26","hashOfConfig":"20"},{"size":144,"mtime":1651179223676,"results":"27","hashOfConfig":"20"},{"size":173,"mtime":1651221404079,"results":"28","hashOfConfig":"20"},{"size":144,"mtime":1651222104630,"results":"29","hashOfConfig":"20"},{"size":268,"mtime":1651179223682,"results":"30","hashOfConfig":"20"},{"size":4403,"mtime":1652205866096,"results":"31","hashOfConfig":"20"},{"size":11490,"mtime":1652113361847,"results":"32","hashOfConfig":"20"},{"size":2614,"mtime":1652086728211,"results":"33","hashOfConfig":"20"},{"size":268,"mtime":1651349774802,"results":"34","hashOfConfig":"20"},{"size":315,"mtime":1652081496803,"results":"35","hashOfConfig":"20"},{"size":7954,"mtime":1652081496798,"results":"36","hashOfConfig":"20"},{"size":904,"mtime":1652081496808,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"12f24qa",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"41"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"D:\\React Project\\Hostel-Management\\client\\src\\index.js",[],[],[],"D:\\React Project\\Hostel-Management\\client\\src\\App.js",["96"],[],"import { useState } from \"react\";\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\n\r\nimport NavBar from \"./components/NavBar\";\r\nimport Home from \"./components/Home\";\r\nimport Profile from \"./components/Profile\";\r\nimport Hostel from './components/Hostel';\r\nimport Login from './pages/Login';\r\nimport Logout from \"./components/Logout\";\r\nimport Signup from \"./components/Signup\";\r\nimport Error from \"./components/Error\";\r\nimport Room from \"./components/Room\";\r\nimport Administration from \"./components/Administration\";\r\n\r\n\r\nfunction App() {\r\n\r\n  const [msg, setMsg] = useState(\"Hello World!\");\r\n\r\n  //getting info from NavBar.js\r\n  const getData = (info) => {\r\n    setMsg(info);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar info={getData} />\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/home\" element={<Home />} />\r\n          <Route path=\"/profile\" element={<Profile />} />\r\n          <Route path=\"/hostel/:id\" element={<Hostel />} />\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/logout\" element={<Logout />} />\r\n          <Route path=\"/signup\" element={<Signup />} />\r\n          <Route path=\"/hostel/:hostelId/room/:roomId\" element={<Room />} />\r\n          <Route path=\"/administration\" element={<Administration />} />\r\n\r\n\r\n          <Route path=\"*\" element={<Error />} />\r\n\r\n        </Routes>\r\n      </BrowserRouter>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\React Project\\Hostel-Management\\client\\src\\components\\Home.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\Hostel.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\NavBar.js",["97"],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\Profile.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\Logout.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\Error.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\Login.js",[],[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\Signup.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\Room.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\pages\\Login.js",["98","99","100","101","102"],[],"D:\\React Project\\Hostel-Management\\client\\src\\pages\\Register.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\Administration.js",["103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\SingleHostel.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\AdministrationSidebar.js",[],[],"D:\\React Project\\Hostel-Management\\client\\src\\components\\AddHostel.js",["118"],[],"import React, { useState, useContext } from 'react'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport Axios from 'axios';\r\n\r\n//import { PublicContex } from './PublicContext';\r\n\r\nexport default function AddHostel() {\r\n    //const [publicData, setPublicData] = useContext(PublicContex);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [hostel, setHostel] = useState({\r\n        id: \"-1\",\r\n        type: \"\",\r\n        name: \"\",\r\n        address: \"\",\r\n        contact: \"\",\r\n        total_seats: 0,\r\n    })\r\n\r\n    const [error, setError] = useState({\r\n        id: \"\",\r\n        type: \"* field is required\",\r\n        name: \"* field is required\",\r\n        address: \"* field is required\",\r\n        contact: \"* field is required\",\r\n        total_seats: \"* field is required\",\r\n    })\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        console.log(\"now in handlesubmit\");\r\n        event.preventDefault();\r\n//         const value = 1 + publicData.hostel.length;\r\n//         setHostel({ ...hostel, id: value });\r\n\r\n        //check erro?\r\n        const isEmpty = Object.values(error).every(x => x === null || x === \"\");\r\n        console.log(isEmpty);\r\n        if (isEmpty) {\r\n            Axios.post(\"http://localhost:3001/add/hostel\", {\r\n                hostel_id: hostel.id,\r\n                name: hostel.name,\r\n                type: hostel.type,\r\n                address: hostel.address,\r\n                contact: hostel.contact,\r\n                total_seats: hostel.total_seats,\r\n                occupied_seats: 0,\r\n            }).then(() => {\r\n                setShow(true);\r\n                //alert(\"hostel added\");\r\n                console.log(\"hostel added\");\r\n            }).catch((e) => alert(e));\r\n        }\r\n        console.log(hostel);\r\n\r\n    };\r\n\r\n    //hostel ID auto increment hobe.\r\n    //1+hostelListArray readOnly dewa takbe\r\n    return (\r\n        <>\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid lightGray\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        }} >\r\n            <Alert show={show} variant=\"success\">\r\n                <Alert.Heading>How's it going?!</Alert.Heading>\r\n                <p>\r\n                    Hostel Added successfully...\r\n                </p>\r\n                <hr />\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button onClick={() => { setShow(false); window.location.reload(); }} variant=\"outline-success\">\r\n                        Close!\r\n                    </Button>\r\n                </div>\r\n            </Alert>\r\n\r\n            {!show && (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelID\">\r\n                        <Form.Label>Hostel ID</Form.Label>\r\n                        <Form.Control type=\"number\" value={420} onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, id: value });\r\n                        }} readOnly />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelName\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Hostel Name\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, name: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length < 2)\r\n                                msg = \"Too short!\";\r\n                            setError({ ...error, name: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.name}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelType\">\r\n                        <Form.Label>Type</Form.Label>\r\n                        <Form.Select onChange={(event) => {\r\n                            const value = event.currentTarget.value;\r\n                            setHostel({ ...hostel, type: value })\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            setError({ ...error, type: msg });\r\n                        }}>\r\n                            <option>Select Type</option>\r\n                            <option value=\"male\" >Male</option>\r\n                            <option value=\"female\">Female</option>\r\n                        </Form.Select>\r\n                        <span className=\"text-danger\">{error.type}</span>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelSeats\">\r\n                        <Form.Label>Total Seats</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder='Total number of seats' onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, total_seats: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (Number(value) <= 0)\r\n                                msg = \"Total number of seats must be greater than zero!\";\r\n                            else if (!Number.isInteger(Number(value)))\r\n                                msg = \"Invalid number!\"\r\n                            setError({ ...error, total_seats: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.total_seats}</span>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelAddress\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} placeholder=\"Address...\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, address: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            setError({ ...error, address: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.address}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelContact\">\r\n                        <Form.Label>Contact</Form.Label>\r\n                        <Form.Control type=\"tel\" placeholder=\"Office contact number: 01....\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, contact: value });\r\n                            let msg = \"\";\r\n\r\n                            const regex = /^[0][1][0-9]{9}$/i;\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length !== 11)\r\n                                msg = \"Mobile Number must have to be 11 Digits\";\r\n                            else if (!regex.test(value))\r\n                                msg = \"Invalid format!\";\r\n\r\n                            setError({ ...error, contact: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.contact}</span>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Add Hostel\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n\r\n        </div>\r\n        <br/><br/>\r\n        </>\r\n    )\r\n}\r\n","D:\\React Project\\Hostel-Management\\client\\src\\components\\SidebarItem.js",[],[],{"ruleId":"119","severity":1,"message":"120","line":18,"column":10,"nodeType":"121","messageId":"122","endLine":18,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":38,"column":8,"nodeType":"125","endLine":38,"endColumn":10,"suggestions":"126"},{"ruleId":"119","severity":1,"message":"127","line":6,"column":10,"nodeType":"121","messageId":"122","endLine":6,"endColumn":15},{"ruleId":"128","severity":1,"message":"129","line":24,"column":19,"nodeType":"130","messageId":"131","endLine":24,"endColumn":21},{"ruleId":"119","severity":1,"message":"132","line":30,"column":30,"nodeType":"121","messageId":"122","endLine":30,"endColumn":36},{"ruleId":"128","severity":1,"message":"129","line":32,"column":40,"nodeType":"130","messageId":"131","endLine":32,"endColumn":42},{"ruleId":"133","severity":1,"message":"134","line":102,"column":29,"nodeType":"135","endLine":102,"endColumn":41},{"ruleId":"119","severity":1,"message":"136","line":14,"column":17,"nodeType":"121","messageId":"122","endLine":14,"endColumn":23},{"ruleId":"119","severity":1,"message":"137","line":15,"column":18,"nodeType":"121","messageId":"122","endLine":15,"endColumn":25},{"ruleId":"119","severity":1,"message":"138","line":16,"column":18,"nodeType":"121","messageId":"122","endLine":16,"endColumn":25},{"ruleId":"119","severity":1,"message":"139","line":17,"column":19,"nodeType":"121","messageId":"122","endLine":17,"endColumn":27},{"ruleId":"119","severity":1,"message":"140","line":18,"column":19,"nodeType":"121","messageId":"122","endLine":18,"endColumn":27},{"ruleId":"119","severity":1,"message":"141","line":19,"column":23,"nodeType":"121","messageId":"122","endLine":19,"endColumn":35},{"ruleId":"119","severity":1,"message":"142","line":20,"column":21,"nodeType":"121","messageId":"122","endLine":20,"endColumn":31},{"ruleId":"119","severity":1,"message":"143","line":21,"column":19,"nodeType":"121","messageId":"122","endLine":21,"endColumn":27},{"ruleId":"119","severity":1,"message":"144","line":22,"column":12,"nodeType":"121","messageId":"122","endLine":22,"endColumn":19},{"ruleId":"119","severity":1,"message":"145","line":22,"column":21,"nodeType":"121","messageId":"122","endLine":22,"endColumn":31},{"ruleId":"119","severity":1,"message":"146","line":23,"column":22,"nodeType":"121","messageId":"122","endLine":23,"endColumn":33},{"ruleId":"119","severity":1,"message":"147","line":26,"column":19,"nodeType":"121","messageId":"122","endLine":26,"endColumn":27},{"ruleId":"119","severity":1,"message":"148","line":28,"column":14,"nodeType":"121","messageId":"122","endLine":28,"endColumn":28},{"ruleId":"119","severity":1,"message":"149","line":55,"column":11,"nodeType":"121","messageId":"122","endLine":55,"endColumn":28},{"ruleId":"119","severity":1,"message":"150","line":66,"column":11,"nodeType":"121","messageId":"122","endLine":66,"endColumn":24},{"ruleId":"119","severity":1,"message":"151","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":37},"no-unused-vars","'msg' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getHostels'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'Alert' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'RoleID' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setReg' is assigned a value but never used.","'setName' is assigned a value but never used.","'setDept' is assigned a value but never used.","'setMerit' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setHostel_ID' is assigned a value but never used.","'setRoom_ID' is assigned a value but never used.","'setPhone' is assigned a value but never used.","'role_id' is assigned a value but never used.","'setRole_ID' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'addStudentInfo' is defined but never used.","'updateStudentInfo' is assigned a value but never used.","'deleteStudent' is assigned a value but never used.","'useContext' is defined but never used.",{"desc":"153","fix":"154"},"Update the dependencies array to be: [getHostels]",{"range":"155","text":"156"},[1208,1210],"[getHostels]"]