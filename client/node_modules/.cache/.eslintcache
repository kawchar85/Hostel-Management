[{"D:\\final\\Hostel-Management\\client\\src\\index.js":"1","D:\\final\\Hostel-Management\\client\\src\\App.js":"2","D:\\final\\Hostel-Management\\client\\src\\components\\Profile.js":"3","D:\\final\\Hostel-Management\\client\\src\\components\\NavBar.js":"4","D:\\final\\Hostel-Management\\client\\src\\components\\Home.js":"5","D:\\final\\Hostel-Management\\client\\src\\components\\Hostel.js":"6","D:\\final\\Hostel-Management\\client\\src\\components\\Signup.js":"7","D:\\final\\Hostel-Management\\client\\src\\components\\Logout.js":"8","D:\\final\\Hostel-Management\\client\\src\\components\\Room.js":"9","D:\\final\\Hostel-Management\\client\\src\\components\\Error.js":"10","D:\\final\\Hostel-Management\\client\\src\\components\\StudentHome.js":"11","D:\\final\\Hostel-Management\\client\\src\\components\\Administration.js":"12","D:\\final\\Hostel-Management\\client\\src\\components\\AdminReg.js":"13","D:\\final\\Hostel-Management\\client\\src\\components\\ForgotPass.js":"14","D:\\final\\Hostel-Management\\client\\src\\components\\Complain.js":"15","D:\\final\\Hostel-Management\\client\\src\\pages\\Login.js":"16","D:\\final\\Hostel-Management\\client\\src\\components\\AddHostel.js":"17","D:\\final\\Hostel-Management\\client\\src\\components\\RoomDetails.js":"18","D:\\final\\Hostel-Management\\client\\src\\components\\SingleHostel.js":"19","D:\\final\\Hostel-Management\\client\\src\\components\\StudentSidebar.js":"20","D:\\final\\Hostel-Management\\client\\src\\components\\AdministrationSidebar.js":"21","D:\\final\\Hostel-Management\\client\\src\\pages\\Register.js":"22","D:\\final\\Hostel-Management\\client\\src\\components\\GetHostelData.js":"23","D:\\final\\Hostel-Management\\client\\src\\components\\SwapManual.js":"24","D:\\final\\Hostel-Management\\client\\src\\components\\firebase.js":"25","D:\\final\\Hostel-Management\\client\\src\\components\\SidebarItem.js":"26","D:\\final\\Hostel-Management\\client\\src\\components\\UpdateHostel.js":"27"},{"size":299,"mtime":1660031992676,"results":"28","hashOfConfig":"29"},{"size":1953,"mtime":1660031992670,"results":"30","hashOfConfig":"29"},{"size":110,"mtime":1660031992673,"results":"31","hashOfConfig":"29"},{"size":3491,"mtime":1660031992673,"results":"32","hashOfConfig":"29"},{"size":1867,"mtime":1660031992672,"results":"33","hashOfConfig":"29"},{"size":5354,"mtime":1660031992672,"results":"34","hashOfConfig":"29"},{"size":144,"mtime":1660031992674,"results":"35","hashOfConfig":"29"},{"size":108,"mtime":1660031992673,"results":"36","hashOfConfig":"29"},{"size":268,"mtime":1660031992673,"results":"37","hashOfConfig":"29"},{"size":1223,"mtime":1660031992671,"results":"38","hashOfConfig":"29"},{"size":899,"mtime":1660031992674,"results":"39","hashOfConfig":"29"},{"size":2700,"mtime":1660031992671,"results":"40","hashOfConfig":"29"},{"size":8663,"mtime":1660110005471,"results":"41","hashOfConfig":"29"},{"size":143,"mtime":1660031992672,"results":"42","hashOfConfig":"29"},{"size":4311,"mtime":1660031992671,"results":"43","hashOfConfig":"29"},{"size":7187,"mtime":1660043696203,"results":"44","hashOfConfig":"29"},{"size":7954,"mtime":1660031992670,"results":"45","hashOfConfig":"29"},{"size":1030,"mtime":1660031992673,"results":"46","hashOfConfig":"29"},{"size":268,"mtime":1660031992674,"results":"47","hashOfConfig":"29"},{"size":300,"mtime":1660031992674,"results":"48","hashOfConfig":"29"},{"size":315,"mtime":1660031992671,"results":"49","hashOfConfig":"29"},{"size":16703,"mtime":1660040024413,"results":"50","hashOfConfig":"29"},{"size":3071,"mtime":1660031992672,"results":"51","hashOfConfig":"29"},{"size":14411,"mtime":1660031992675,"results":"52","hashOfConfig":"29"},{"size":707,"mtime":1660031992675,"results":"53","hashOfConfig":"29"},{"size":904,"mtime":1660031992674,"results":"54","hashOfConfig":"29"},{"size":9902,"mtime":1660031992675,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g62r68",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},"D:\\final\\Hostel-Management\\client\\src\\index.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\App.js",["148"],[],"import { useState } from \"react\";\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\n\r\nimport NavBar from \"./components/NavBar\";\r\nimport Home from \"./components/Home\";\r\nimport Profile from \"./components/Profile\";\r\nimport Hostel from './components/Hostel';\r\nimport Login from './pages/Login';\r\nimport Logout from \"./components/Logout\";\r\nimport Signup from \"./components/Signup\";\r\nimport Error from \"./components/Error\";\r\nimport Room from \"./components/Room\";\r\nimport Administration from \"./components/Administration\";\r\nimport StudentHome from \"./components/StudentHome\";\r\nimport AdminReg from \"./components/AdminReg\";\r\nimport ForgotPass from \"./components/ForgotPass\";\r\nimport Complain from \"./components/Complain\";\r\n\r\n\r\nfunction App() {\r\n\r\n  const [msg, setMsg] = useState(\"Hello World!\");\r\n\r\n  //getting info from NavBar.js\r\n  const getData = (info) => {\r\n    setMsg(info);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar info={getData} />\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/home\" element={<Home />} />\r\n          <Route path=\"/profile\" element={<Profile />} />\r\n          <Route path=\"/hostel/:id\" element={<Hostel />} />\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/logout\" element={<Logout />} />\r\n          <Route path=\"/signup\" element={<Signup />} />\r\n          <Route path=\"/complain\" element={<Complain />} />\r\n          <Route path=\"/adminreg\" element={<AdminReg />} />\r\n          <Route path=\"/forgotpass\" element={<ForgotPass/>} />\r\n          <Route path=\"/hostel/:hostelId/room/:roomId\" element={<Room />} />\r\n          <Route path=\"/administration\" element={<Administration />} />\r\n          <Route path=\"/studenthome\" element={<StudentHome />} />\r\n\r\n\r\n          <Route path=\"*\" element={<Error />} />\r\n\r\n        </Routes>\r\n      </BrowserRouter>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\Profile.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\NavBar.js",["149"],[],"import React, { useEffect, useState } from 'react'\r\nimport { Navbar, Nav, Container, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\nimport SingleHostel from './SingleHostel';\r\n\r\nexport default function NavBar(props) {\r\n\r\n    const handleClick = (selectedKey) => {\r\n        //alert(`selected ${selectedKey}`);\r\n        const msg = \"You are in \" + selectedKey;\r\n        props.info(msg); //passing data to App.js\r\n    }\r\n\r\n    function isLogged() {\r\n        return false;\r\n    }\r\n    function isAdministration() {\r\n        return true;\r\n    }\r\n\r\n    const [hostelList, setHostelList] = useState([]);\r\n    //get Hostel list from Database\r\n    const getHostels = () => {\r\n        Axios.get(\"http://localhost:3001/getData/\", { params: { table: \"hostel\" } }).then((response) => {\r\n            //Axios.get(\"http://localhost:3001/hostel\").then((response) => {\r\n            setHostelList(response.data);\r\n            console.log(\"list\");\r\n            console.log(hostelList);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"effect...\");\r\n        getHostels();\r\n\r\n        //hostel table change er track rakhte hobe.\r\n        //apadoto ignoring\r\n    }, []);\r\n\r\n    let page1, page2;\r\n    if (isLogged()) {\r\n        page1 = \"Profile\";\r\n        page2 = \"Logout\";\r\n    }\r\n    else {\r\n        page1 = \"Login\";\r\n        page2 = \"Signup\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\">\r\n                <Container fluid>\r\n                    <Navbar.Brand ><b>Hostel Management</b></Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n                    <Navbar.Collapse id=\"navbarScroll\">\r\n                        <Nav\r\n                            className=\"me-auto my-2 my-lg-0\"\r\n                            style={{ maxHeight: '100px' }}\r\n                            navbarScroll\r\n                            onSelect={handleClick}\r\n                        >\r\n                            <Nav.Link href=\"/home\">Home</Nav.Link>\r\n\r\n                            <NavDropdown title=\"Hostels\" id=\"navbarScrollingDropdown\">\r\n                                {hostelList.map((val) => {\r\n                                    return <SingleHostel Hostel_ID={val.Hostel_ID} Name={val.Name} />\r\n                                }\r\n                                )}\r\n\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item href=\"/hostel/420\">Custom Test</NavDropdown.Item>\r\n\r\n                            </NavDropdown>\r\n\r\n\r\n                            <Nav.Link href={\"/\" + page1}>{page1}</Nav.Link>\r\n                            <Nav.Link href={\"/\" + page2}>{page2}</Nav.Link>\r\n                            {isAdministration()&&(<Nav.Link href=\"/administration\">Administration</Nav.Link>)}                            \r\n\r\n                        </Nav>\r\n                        <Form className=\"d-flex\">\r\n                            <FormControl\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                className=\"me-2\"\r\n                                aria-label=\"Search\"\r\n                            />\r\n                            <Button variant=\"outline-success\">Search</Button>\r\n                        </Form>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\Home.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\Hostel.js",["150"],[],"import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios';\r\nimport { useParams } from 'react-router-dom'\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport RoomDetails from './RoomDetails';\r\n\r\n\r\nexport default function Hostel() {\r\n\r\n  const {id} = useParams();\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [hostelData, setHostelData] = useState(null);\r\n\r\n  const getData = async () => {\r\n\r\n     await Axios.get(\"http://localhost:3001/getData/hostel\", { params: { hostel_id: id } }).then((response) => {\r\n        if(response.data === \"error\"){\r\n            alert(\"Something Error!!\");\r\n        } else {\r\n            let data = JSON.stringify(response.data[0]);\r\n            console.log(\"res data\");\r\n            console.log(data);\r\n            setHostelData(data);\r\n            console.log(\"hostel data\");\r\n            console.log(hostelData);\r\n        }\r\n    }).catch((e) => alert(e));\r\n  };\r\n  \r\n  useEffect(() => {\r\n    console.log(\"data loading\");\r\n    getData();\r\n\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Loaded data\");\r\n    console.log(hostelData);\r\n  }, [hostelData]);\r\n\r\n  const handleClick = e => {\r\n    e.preventDefault();\r\n    console.log(e.target.id);\r\n    setModalShow(true);\r\n    \r\n  };\r\n  return (\r\n    <>\r\n    <div>Hostel {id} </div>\r\n\r\n    <div style={{\r\n            textShadow: \"#f9fafb 0px 1px 0px, #0d6efd 3px 3px 3px\",\r\n            textAlign: \"center\",\r\n            color: \"#666\",\r\n            margin: \"0 0 30px 0\",\r\n            letterSpacing: \"4px\",\r\n            font: \"normal 30px/2 Segoe Print,Verdana, Helvetica\",\r\n            position: \"relative\",\r\n        }} >\r\n          {JSON.parse(hostelData)}\r\n          \r\n        </div>\r\n\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid #d3e5ff\",\r\n            borderRadius: \"10px\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginBottom: \"50px\",\r\n        }} > \r\n\r\n            <div style={{\r\n                color: \"#666\",\r\n                letterSpacing: \"4px\",\r\n                font: \"normal 30px/1 Gabriola,Verdana, Helvetica\",\r\n                fontWeight: 'bold',\r\n            }}>\r\n                <Spinner animation=\"grow\" variant=\"info\" />\r\n                Summary \r\n            </div>\r\n\r\n            <hr style={{ backgroundColor: 'green', height: 2.2, }} />\r\n            \r\n            <div style={{\r\n                color: \"#666\",\r\n                letterSpacing: \"4px\",\r\n                font: \"normal 20px/1 Comic Sans MS,Verdana, Helvetica\",\r\n            }}>\r\n              Total Seats : {JSON.parse(hostelData).Total_Seats} <br/>\r\n              Occupied Seats : {JSON.parse(hostelData).Occupied_Seats} <br/>\r\n              Type : {JSON.parse(hostelData).Type} <br/>\r\n              Provost : ???(different card?)<br/> \r\n              Office : {JSON.parse(hostelData).Address} <br/>\r\n              Contact : {JSON.parse(hostelData).Contact}\r\n            </div>\r\n        \r\n        </div>\r\n\r\n\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid #d3e5ff\",\r\n            borderRadius: \"10px\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginBottom: \"50px\",\r\n        }} > \r\n\r\n            <div style={{\r\n                color: \"#666\",\r\n                letterSpacing: \"4px\",\r\n                font: \"normal 30px/1 Gabriola,Verdana, Helvetica\",\r\n                fontWeight: 'bold',\r\n            }}>\r\n                <Spinner animation=\"grow\" variant=\"primary\" />\r\n                Rooms \r\n            </div>\r\n\r\n            <hr style={{ backgroundColor: '#16d59a', height: 2.2, }} />\r\n            \r\n            <div style={{\r\n                color: \"#666\",\r\n                letterSpacing: \"4px\",\r\n                font: \"normal 20px/1 Comic Sans MS,Verdana, Helvetica\",\r\n            }}>\r\n              <Button id={1} variant=\"link\" onClick={e => handleClick(e)} >1</Button>, 2, 3, 4, 5, 6 <br/>\r\n              7, 8, 9, 10, 11, 12<br/>\r\n\r\n              <RoomDetails \r\n                    show={modalShow}\r\n                    onHide={() => setModalShow(false)}\r\n                    id={12}\r\n              />\r\n              \r\n            </div>\r\n        \r\n        </div>\r\n\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid #d3e5ff\",\r\n            borderRadius: \"10px\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginBottom: \"50px\",\r\n        }} > \r\n            <div style={{\r\n                color: \"#666\",\r\n                letterSpacing: \"4px\",\r\n                font: \"normal 30px/1 Gabriola,Verdana, Helvetica\",\r\n                fontWeight: 'bold',\r\n            }}>\r\n                <Spinner animation=\"grow\" variant=\"warning\" />\r\n                Seat Available in Room(s) \r\n            </div>\r\n\r\n            <hr style={{ backgroundColor: '#786017', height: 2.2, }} />\r\n            \r\n            <div style={{\r\n                color: \"#666\",\r\n                letterSpacing: \"4px\",\r\n                font: \"normal 20px/1 Comic Sans MS,Verdana, Helvetica\",\r\n            }}>\r\n              1, 2, 4, 6 <br/>\r\n              8, 10, 12<br/>\r\n              \r\n            </div>\r\n\r\n        </div>\r\n    </>\r\n\r\n\r\n  )\r\n}\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\Signup.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\Logout.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\Room.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\Error.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\StudentHome.js",["151","152","153","154","155"],[],"import React, { useState } from 'react'\r\nimport Axios from 'axios';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nimport '../index.css';\r\nimport AddHostel from './AddHostel';\r\nimport StudentSidebar from './StudentSidebar';\r\n\r\nexport default function StudentHome() {\r\n    const [query, setQuery] = useSearchParams();\r\n    const myStyle = {\r\n        align: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\"\r\n    }\r\n    return(\r\n        <div id= \"side\">\r\n            <div className='main'>\r\n                <StudentSidebar/>\r\n                <div className=\"container\">\r\n                    <div style={myStyle} >\r\n                    <h2>{query.get(\"action\")}  {query.get(\"section\")}</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\final\\Hostel-Management\\client\\src\\components\\Administration.js",["156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172"],[],"//for test \r\n\r\n\r\nimport React, { useState } from 'react'\r\nimport Axios from 'axios';\r\nimport AdministrationSidebar from './AdministrationSidebar';\r\n\r\nimport '../index.css';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport AddHostel from './AddHostel';\r\nimport GetHostelData from './GetHostelData';\r\nimport SwapManual from './SwapManual';\r\n\r\nexport default function Administration() {\r\n\r\n    const [reg, setReg] = useState(0);\r\n    const [name, setName] = useState(\"\");\r\n    const [dept, setDept] = useState(\"\");\r\n    const [merit, setMerit] = useState(0);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [hostel_id, setHostel_ID] = useState(-1);\r\n    const [room_id, setRoom_ID] = useState(-1);\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [role_id, setRole_ID] = useState(2);\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n\r\n    const [query, setQuery] = useSearchParams();\r\n\r\n    function addStudentInfo() {\r\n        Axios.post(\"http://localhost:3001/add/students\", {\r\n            name: name,\r\n            reg: reg,\r\n            dept: dept,\r\n            merit: merit,\r\n            email: email,\r\n            phone: phone,\r\n            hostel_id: hostel_id,\r\n            room_id: room_id,\r\n            role_id: 2,\r\n        }).then(() => {\r\n            alert(\"student added\");\r\n            console.log(\"std added\");\r\n        });\r\n\r\n        Axios.post(\"http://localhost:3001/add/login\", {\r\n            email: email,\r\n            role_id: 2,\r\n            password: password,\r\n        }).then(() => {\r\n            alert(\"login info added\");\r\n            console.log(\"login added\");\r\n\r\n        });\r\n    }\r\n\r\n    const updateStudentInfo = () => {\r\n        Axios.put(\"http://localhost:3001/update/students\", {\r\n            reg: \"2018331099\",\r\n            hostel_id: \"55\",\r\n            room_id: \"605\",\r\n\r\n        }).then(() => {\r\n            console.log(\"std updated\");\r\n        });\r\n    }\r\n\r\n    const deleteStudent = (reg) => {\r\n        Axios.delete(`http://localhost:3001/delete/students/${reg}`).then(() => {\r\n            console.log(\"std deleted\");\r\n        });\r\n    };\r\n\r\n    const myStyle = {\r\n        align: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\"\r\n    }\r\n\r\n    //will send current users' role id in sidebar\r\n    return (\r\n        <div id=\"side\">\r\n            <div className=\"main\">\r\n                <AdministrationSidebar />\r\n                <div className=\"container\">\r\n                    <div style={myStyle} >\r\n                    <h2>{query.get(\"action\")}  {query.get(\"section\")}</h2>\r\n                    </div>\r\n\r\n                    <SwapManual />\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\AdminReg.js",["173","174","175","176","177"],[],"D:\\final\\Hostel-Management\\client\\src\\components\\ForgotPass.js",["178","179"],[],"import React, { useState, useContext } from 'react';\r\n\r\nexport default function ForgotPass() {\r\n    return(\r\n        <div>hello</div>\r\n    )\r\n}","D:\\final\\Hostel-Management\\client\\src\\components\\Complain.js",["180","181","182","183"],[],"import React, { useState, useContext } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport validator from 'validator';\r\nimport Axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../index.css';\r\nimport StudentSidebar from './StudentSidebar'\r\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\r\nimport { storage } from './firebase';\r\n\r\n\r\nexport default function Complain() {\r\n\r\n    const [error, setError] = useState({\r\n        tag: \"* field is required\",\r\n        description: \"* field is required\",\r\n        image: \"* field is required\",\r\n        contact: \"* field is required\",\r\n        total_seats: \"* field is required\",\r\n    });\r\n    const [complain, setComplain] = useState({\r\n        tag:0,\r\n        description:\"\",\r\n        timestamp:\"\",\r\n        photo:\"\",\r\n        std_reg:\"2018331008\"\r\n\r\n    });\r\n    const [files, setFiles] = useState([]);\r\n\r\n\r\n    const uploadImage = () => {\r\n        if (files.length !== 0) {\r\n          const imageRef = ref(storage, `banner/${Date.now()}`);\r\n          uploadBytes(imageRef, files).then((snapshot) => {\r\n            getDownloadURL(snapshot.ref).then(async (url) => {\r\n            console.log(url);\r\n            complain.photo=url;\r\n            console.log(complain.photo);\r\n    \r\n             \r\n            });\r\n          });\r\n        } else return;\r\n\r\n        console.log(\"kaj korche\");\r\n        const tm= Date.now();\r\n        console.log(tm);\r\n    \r\n        \r\n        if(complain.photo != null) {\r\n            Axios.post(\"http://localhost:3001/add/complain\", {\r\n            \"tag\":complain.tag,\r\n            \"description\":complain.description,\r\n            \"photo\":complain.photo,\r\n            \"timestamp\":tm,\r\n            \"std_reg\":complain.std_reg,\r\n        }).then( ()=> {\r\n            console.log(\"look it works!!\");\r\n        }).catch((e)=>{\r\n            alert(e);\r\n            console.log(\"hoilona\");\r\n        });\r\n        }\r\n        else alert(\"select imag!\");\r\n\r\n\r\n      };\r\n\r\n\r\n    return(\r\n        <>\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid lightGray\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"30px\"\r\n        }} >\r\n        {JSON.stringify(complain)}\r\n            <Form>\r\n            <Form.Group className=\"mb-3\">\r\n            <Form.Label>Tag</Form.Label>\r\n            <Form.Select onChange={(event) => {\r\n                const value = event.currentTarget.value;\r\n                setComplain({ ...complain, tag: value })\r\n                let msg = \"\";\r\n                if (value.length === 0)\r\n                    msg = \"* field is required\";\r\n                setError({ ...error, tag: msg });\r\n                }}>\r\n                <option>Select Type</option>\r\n                <option value=\"11\" >Cleaning</option>\r\n                <option value=\"12\">Seat</option>\r\n                <option value=\"13\">Kitchen</option>\r\n            </Form.Select>\r\n            <span className=\"text-danger\">{error.tag}</span>\r\n            </Form.Group>\r\n\r\n\r\n\r\n            <Form.Group className=\"mb-3\" >\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} placeholder=\"Details complain...\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setComplain({ ...complain, description: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            setError({ ...error, description: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.description}</span>\r\n                    </Form.Group>\r\n\r\n                    <input className=\"mb-3\" type=\"file\" fileName=\"complainPhoto\" onChange={(event)=>{\r\n                        event.preventDefault();\r\n                        setFiles(event.target.files[0]);\r\n                    }}/>\r\n\r\n                    \r\n                \r\n            \r\n            </Form><Button variant=\"primary\" type=\"submit\" onClick={uploadImage}>\r\n                        Submit\r\n                    </Button>\r\n        \r\n        \r\n        </div></>\r\n    )\r\n}","D:\\final\\Hostel-Management\\client\\src\\pages\\Login.js",["184","185","186","187","188"],[],"D:\\final\\Hostel-Management\\client\\src\\components\\AddHostel.js",["189"],[],"import React, { useState, useContext } from 'react'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport Axios from 'axios';\r\n\r\n//import { PublicContex } from './PublicContext';\r\n\r\nexport default function AddHostel() {\r\n    //const [publicData, setPublicData] = useContext(PublicContex);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [hostel, setHostel] = useState({\r\n        id: \"-1\",\r\n        type: \"\",\r\n        name: \"\",\r\n        address: \"\",\r\n        contact: \"\",\r\n        total_seats: 0,\r\n    })\r\n\r\n    const [error, setError] = useState({\r\n        id: \"\",\r\n        type: \"* field is required\",\r\n        name: \"* field is required\",\r\n        address: \"* field is required\",\r\n        contact: \"* field is required\",\r\n        total_seats: \"* field is required\",\r\n    })\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        console.log(\"now in handlesubmit\");\r\n        event.preventDefault();\r\n//         const value = 1 + publicData.hostel.length;\r\n//         setHostel({ ...hostel, id: value });\r\n\r\n        //check erro?\r\n        const isEmpty = Object.values(error).every(x => x === null || x === \"\");\r\n        console.log(isEmpty);\r\n        if (isEmpty) {\r\n            Axios.post(\"http://localhost:3001/add/hostel\", {\r\n                hostel_id: hostel.id,\r\n                name: hostel.name,\r\n                type: hostel.type,\r\n                address: hostel.address,\r\n                contact: hostel.contact,\r\n                total_seats: hostel.total_seats,\r\n                occupied_seats: 0,\r\n            }).then(() => {\r\n                setShow(true);\r\n                //alert(\"hostel added\");\r\n                console.log(\"hostel added\");\r\n            }).catch((e) => alert(e));\r\n        }\r\n        console.log(hostel);\r\n\r\n    };\r\n\r\n    //hostel ID auto increment hobe.\r\n    //1+hostelListArray readOnly dewa takbe\r\n    return (\r\n        <>\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid lightGray\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        }} >\r\n            <Alert show={show} variant=\"success\">\r\n                <Alert.Heading>How's it going?!</Alert.Heading>\r\n                <p>\r\n                    Hostel Added successfully...\r\n                </p>\r\n                <hr />\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button onClick={() => { setShow(false); window.location.reload(); }} variant=\"outline-success\">\r\n                        Close!\r\n                    </Button>\r\n                </div>\r\n            </Alert>\r\n\r\n            {!show && (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelID\">\r\n                        <Form.Label>Hostel ID</Form.Label>\r\n                        <Form.Control type=\"number\" value={420} onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, id: value });\r\n                        }} readOnly />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelName\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Hostel Name\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, name: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length < 2)\r\n                                msg = \"Too short!\";\r\n                            setError({ ...error, name: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.name}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelType\">\r\n                        <Form.Label>Type</Form.Label>\r\n                        <Form.Select onChange={(event) => {\r\n                            const value = event.currentTarget.value;\r\n                            setHostel({ ...hostel, type: value })\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            setError({ ...error, type: msg });\r\n                        }}>\r\n                            <option>Select Type</option>\r\n                            <option value=\"male\" >Male</option>\r\n                            <option value=\"female\">Female</option>\r\n                        </Form.Select>\r\n                        <span className=\"text-danger\">{error.type}</span>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelSeats\">\r\n                        <Form.Label>Total Seats</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder='Total number of seats' onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, total_seats: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (Number(value) <= 0)\r\n                                msg = \"Total number of seats must be greater than zero!\";\r\n                            else if (!Number.isInteger(Number(value)))\r\n                                msg = \"Invalid number!\"\r\n                            setError({ ...error, total_seats: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.total_seats}</span>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelAddress\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} placeholder=\"Address...\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, address: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            setError({ ...error, address: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.address}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelContact\">\r\n                        <Form.Label>Contact</Form.Label>\r\n                        <Form.Control type=\"tel\" placeholder=\"Office contact number: 01....\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, contact: value });\r\n                            let msg = \"\";\r\n\r\n                            const regex = /^[0][1][0-9]{9}$/i;\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length !== 11)\r\n                                msg = \"Mobile Number must have to be 11 Digits\";\r\n                            else if (!regex.test(value))\r\n                                msg = \"Invalid format!\";\r\n\r\n                            setError({ ...error, contact: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.contact}</span>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Add Hostel\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n\r\n        </div>\r\n        <br/><br/>\r\n        </>\r\n    )\r\n}\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\RoomDetails.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\SingleHostel.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\StudentSidebar.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\AdministrationSidebar.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\pages\\Register.js",["190","191","192","193","194","195","196"],[],"D:\\final\\Hostel-Management\\client\\src\\components\\GetHostelData.js",["197","198"],[],"import React, { useState, useContext } from 'react'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport Axios from 'axios';\r\n\r\nimport UpdateHostel from './UpdateHostel';\r\n\r\n//import { PublicContex } from './PublicContext';\r\n\r\nexport default function GetHostelData() {\r\n    //const [publicData, setPublicData] = useContext(PublicContex);\r\n\r\n    const [update, setUpdate] = useState(false);\r\n    const [hostelData, setHostelData] = useState(null);\r\n    const [id, setId] = useState();\r\n\r\n    const [error, setError] = useState({\r\n        id: \"* field is required\",\r\n    })\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const isEmpty = Object.values(error).every(x => x === null || x === \"\");\r\n        console.log(isEmpty);\r\n\r\n        if (isEmpty) {\r\n            console.log(\"dukse\"+ id);\r\n            Axios.get(\"http://localhost:3001/getData/hostel\", { params: { hostel_id: id } }).then((response) => {\r\n                if(response.data === \"error\"){\r\n                    setError({ ...error, id: \"You have entered an Invalid id!!...\" });\r\n                } else {\r\n                    let data = JSON.stringify(response.data[0]);\r\n                    console.log(\"res data\");\r\n                    console.log(data);\r\n                    setHostelData(data);\r\n                    console.log(\"hostel data\");\r\n                    console.log(hostelData);\r\n\r\n                    setUpdate(true);\r\n                }\r\n            }).catch((e) => alert(e));\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid lightGray\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        }} >\r\n\r\n            {!update && (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelID\">\r\n                        <Form.Label>Hostel ID</Form.Label>\r\n                        <Form.Control type=\"number\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            console.log(\"dhur baal\"+value);\r\n                            setId(value);\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (Number(value) <= 0 || !Number.isInteger(Number(value)))\r\n                                msg = \"Invalid hostel ID!\"\r\n                                console.log(\"msg = \"+msg);\r\n                            setError({ ...error, id: msg });\r\n                        }}  />\r\n                        <span className=\"text-danger\">{error.id}</span>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Select Hostel\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n\r\n        </div>\r\n        {update && (<UpdateHostel hostel={hostelData} />)}\r\n        <br/><br/>\r\n        </>\r\n    )\r\n}\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\SwapManual.js",["199","200","201","202","203"],[],"import React, { useEffect, useState } from 'react'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport Axios from 'axios';\r\n\r\n//import { PublicContex } from './PublicContext';\r\n\r\nexport default function SawpManual() {\r\n    //const [publicData, setPublicData] = useContext(PublicContex);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [finalMsg, setFinalMsg] = useState(\"\");\r\n\r\n    const [reg, setReg] = useState({\r\n        reg1: 0,\r\n        reg2: 0,\r\n    })\r\n\r\n    const [info, setInfo] = useState({\r\n        \r\n        hostel1: null,\r\n        room1: null,\r\n        hostel2: null,\r\n        room2: null\r\n        \r\n    })\r\n\r\n    const [ready, setReady] = useState(true);\r\n    const [user1, setUser1] = useState(null);\r\n    const [user2, setUser2] = useState(null);\r\n\r\n    const [error, setError] = useState({\r\n        reg1: \"* field is required\",\r\n        reg2: \"* field is required\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log(\"effect... loading\");\r\n        console.log(info);\r\n\r\n        const isOk = Object.values(info).every(x => x !== null);\r\n\r\n        if(isOk && ready && reg.reg1 && reg.reg2){\r\n            console.log(\"Ready to swap\");\r\n            setReady(false);\r\n            console.log(info);\r\n            setReg1();\r\n        }\r\n        \r\n\r\n    }, [info]);\r\n\r\n    const setReg2 = async () => {\r\n        console.log(\"set reg 2 aise\");\r\n        setInfo(latestInfoState => { return {...latestInfoState} });\r\n        try{\r\n                await Axios.put(\"http://localhost:3001/update/students\", {\r\n                    reg: reg.reg2,\r\n                    hostel_id: info.hostel1,\r\n                    room_id: info.room1,\r\n\r\n                }).then((response) => {\r\n\r\n                    if(response.data === \"error\"){\r\n                        setFinalMsg(\"Something Error!!\");\r\n                    } else {\r\n                        setFinalMsg(\"Room Updated successfully...\\n\"+reg.reg1+\" is assigned to Hostel: \"+info.hostel2+\", Room: \"+info.room2+\". \\n\"+reg.reg2+\" is assigned to Hostel: \"+info.hostel1+\", Room: \"+info.room1);\r\n                    }\r\n                    setShow(true);\r\n                }).catch((e) => alert(e));\r\n        } \r\n        catch(err) {\r\n            console.log('err:  '+ err );\r\n        }\r\n    }\r\n\r\n    const setReg1 = async () => {\r\n        console.log(\"set reg 1 o dukse\");\r\n        setInfo(latestInfoState => { return {...latestInfoState} });\r\n        console.log(info);\r\n\r\n        try{\r\n                await Axios.put(\"http://localhost:3001/update/students\", {\r\n                    reg: reg.reg1,\r\n                    hostel_id: info.hostel2,\r\n                    room_id: info.room2,\r\n\r\n                }).then((response) => {\r\n                    if(response.data === \"error\"){\r\n                        setFinalMsg(\"Something Error!!\");\r\n                    } else {\r\n                        setReg2();\r\n                    }\r\n                }).catch((e) => alert(e));\r\n        } \r\n        catch(err) {            \r\n            console.log('err:  '+ err );\r\n        }\r\n    }\r\n    \r\n    const checkReg2 = async (reg2) => {\r\n        try {\r\n                await Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg2 } }).then( (response)=>{\r\n\r\n                    if(response.data === \"error\"){\r\n                        alert(\"Something error!!\");\r\n                    } else if (response.data === \"notRegistered\"){\r\n                        setError({ ...error, reg2: \"Reg2 is not registered!!\" });\r\n                    } else {\r\n                        //let data = JSON.stringify(response.data[0]);\r\n                        let data = response.data[0];\r\n                        console.log(\"res2 data\");\r\n                        console.log(data);\r\n                        setInfo(latestInfoState => { return {...latestInfoState, hostel2: data.Hostel_ID, room2: data.Room_ID } });\r\n                        \r\n                       // setInfo({ ...info, hostel2: data.Hostel_ID, room2: data.Room_ID});\r\n                    \r\n                        //setUser2(data);\r\n                        //setReg1();\r\n                        console.log(\"ok??????\");\r\n                    }\r\n\r\n                });\r\n                \r\n        }\r\n        catch(err) {\r\n            console.log('err:  '+ err );\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit =  (event) => {\r\n\r\n        event.preventDefault();\r\n        //check erro?\r\n        const isEmpty = Object.values(error).every(x => x === null || x === \"\");\r\n        console.log(isEmpty);\r\n        console.log(error);\r\n        \r\n        if (isEmpty) {\r\n\r\n            try {\r\n                Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg1 } }).then((response) =>{\r\n                    if(response.data === \"error\"){\r\n                        alert(\"Something error!!\");\r\n                    } else if (response.data === \"notRegistered\"){\r\n                        setError({ ...error, reg1: \"Reg1 is not registered!!\" });\r\n                    } else {\r\n                        //let data = JSON.stringify(response.data[0]);\r\n                        let data = response.data[0];\r\n                        console.log(\"res1 data\");\r\n                        console.log(data);\r\n                        setInfo(latestInfoState => { return {...latestInfoState, hostel1: data.Hostel_ID, room1: data.Room_ID } });\r\n\r\n                        //setInfo({ ...info, room1: data.Room_ID, hostel1: data.Hostel_ID});\r\n                        //setInfo({ ...info, hostel1: data.Hostel_ID});\r\n                        \r\n                        //setUser1(data);\r\n\r\n                        checkReg2(reg.reg2);\r\n                    }\r\n                });\r\n\r\n\r\n                \r\n       } catch(err) {\r\n            console.log('err:  '+ err );\r\n       }\r\n\r\n        //     try {\r\n        //         const response = await Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg1 } });\r\n        //         if(response.data === \"error\"){\r\n        //             alert(\"Something error!!\");\r\n        //         } else if (response.data === \"notRegistered\"){\r\n        //             setError({ ...error, reg1: \"Reg1 is not registered!!\" });\r\n        //         } else {\r\n        //             //let data = JSON.stringify(response.data[0]);\r\n        //             let data = response.data[0];\r\n        //             console.log(\"res data\");\r\n        //             console.log(data);\r\n        //             console.log(\"baaal: \"+ JSON.stringify(data.Hostel_ID) + \" ?? \"+ data.Room_ID);\r\n        //             console.log(typeof data);\r\n        //             console.log(typeof JSON.stringify(data.Hostel_ID));\r\n        //             console.log(typeof data.Room_ID);\r\n        //             console.log(typeof info.hostel1);\r\n        //             setInfo({ ...info, hostel1: JSON.stringify(data.Hostel_ID) });\r\n        //             setInfo({ ...info, room1: data.Room_ID });\r\n\r\n        //             hostel1 = data.Hostel_ID;\r\n        //             room1 = data.Room_ID;\r\n\r\n        //             console.log(\"check: \"+hostel1+\" --- \"+room1);\r\n\r\n        //             console.log(\"here \"+ info);\r\n\r\n        //             setOkReg1(true);\r\n        //         }\r\n        //    } catch(err) {\r\n        //         console.log('err:  '+ err );\r\n        //    }\r\n\r\n\r\n            // Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg1 } }).then((response) => {\r\n            //     if(response.data === \"error\"){\r\n            //         alert(\"Something error!!\");\r\n            //     } else if (response.data === \"notRegistered\"){\r\n            //         setError({ ...error, reg1: \"Reg1 is not registered!!\" });\r\n            //     } else {\r\n            //         //let data = JSON.stringify(response.data[0]);\r\n            //         let data = response.data[0];\r\n            //         console.log(\"res data\");\r\n            //         console.log(data);\r\n            //         console.log(\"baaal: \"+ JSON.stringify(data.Hostel_ID) + \" ?? \"+ data.Room_ID);\r\n            //         console.log(typeof data);\r\n            //         console.log(typeof JSON.stringify(data.Hostel_ID));\r\n            //         console.log(typeof data.Room_ID);\r\n            //         console.log(typeof info.hostel1);\r\n            //         setInfo({ ...info, hostel1: JSON.stringify(data.Hostel_ID) });\r\n            //         setInfo({ ...info, room1: data.Room_ID });\r\n\r\n            //         hostel1 = data.Hostel_ID;\r\n            //         room1 = data.Room_ID;\r\n\r\n            //         console.log(\"check: \"+hostel1+\" --- \"+room1);\r\n\r\n            //         console.log(\"here \"+ info);\r\n\r\n            //         setOkReg1(true);\r\n            //     }\r\n            // }).catch((e) => alert(e));\r\n\r\n\r\n            // console.log(OkReg1 + \" ... \"+ OkReg2);\r\n            // //if(OkReg1){\r\n            //     const response2 = await Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg2 } });\r\n            //     if(response2.data === \"error\"){\r\n            //         alert(\"Something error!!\");\r\n            //     } else if (response2.data === \"notRegistered\"){\r\n            //         setError({ ...error, reg2: \"Reg2 is not registered!!\" });\r\n            //     } else {\r\n            //         let data = response2.data[0];\r\n            //         hostel2 = data.Hostel_ID;\r\n            //         room2 = data.Room_ID;\r\n\r\n            //         console.log(\"check2: \"+hostel2+\" --- \"+room2);\r\n\r\n            //         setOkReg2(true);\r\n            //         setShow(true);\r\n            //     }\r\n                \r\n                // Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg2 } }).then((response) => {\r\n                //     if(response.data === \"error\"){\r\n                //         alert(\"Something error!!\");\r\n                //     } else if (response.data === \"notRegistered\"){\r\n                //         setError({ ...error, reg2: \"Reg2 is not registered!!\" });\r\n                //     } else {\r\n                //         let data = response.data[0];\r\n                //         hostel2 = data.Hostel_ID;\r\n                //         room2 = data.Room_ID;\r\n\r\n                //         console.log(\"check2: \"+hostel2+\" --- \"+room2);\r\n\r\n                //         setOkReg2(true);\r\n                //         setShow(true);\r\n                //     }\r\n                // }).catch((e) => alert(e));\r\n            //}\r\n\r\n\r\n                // Axios.put(\"http://localhost:3001/update/hostel\", {\r\n                //     hostel_id: hostel.id,\r\n                //     type: hostel.type,\r\n                //     name: hostel.name,\r\n                //     address: hostel.address,\r\n                //     contact: hostel.contact,\r\n                //     occupied_seats: hostel.occupied_seats,\r\n                //     total_seats: hostel.total_seats,\r\n        \r\n                // }).then((response) => {\r\n                //     if(response.data === \"error\"){\r\n                //         console.log(\"baaal error\");\r\n                //         setFinalMsg(\"Something Error!!\");\r\n                //     } else {\r\n                //         setFinalMsg(\"Hostel Updated successfully...\");\r\n                //     }\r\n                //     setShow(true);\r\n                // }).catch((e) => alert(e));\r\n                \r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid lightGray\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        }} >\r\n            <Alert show={show} variant=\"success\">\r\n                <Alert.Heading>How's it going?!</Alert.Heading>\r\n                <p>\r\n                    {finalMsg}\r\n                </p>\r\n                <hr />\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button onClick={() => { setShow(false); window.location.reload(); }} variant=\"outline-success\">\r\n                        Close!\r\n                    </Button>\r\n                </div>\r\n            </Alert>\r\n\r\n            {!show && (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelName\">\r\n                        <Form.Label>Reg of std 1</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"Registration number of std 1\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setReg({ ...reg, reg1: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length < 10)\r\n                                msg = \"Too short! Registration number must be 10 digits.\";\r\n                            else if (value.length > 10)\r\n                                msg = \"Too long!\";\r\n                            setError({ ...error, reg1: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.reg1}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelName\">\r\n                        <Form.Label>Reg of std 2</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"Registration number of std 2\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setReg({ ...reg, reg2: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length < 10)\r\n                                msg = \"Too short! Registration number must be 10 digits.\";\r\n                            else if (value.length > 10)\r\n                                msg = \"Too long!\";\r\n                            setError({ ...error, reg2: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.reg2}</span>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Swap Room\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n        </div>\r\n        <br/><br/>\r\n        </>\r\n    )\r\n}\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\firebase.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\SidebarItem.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\UpdateHostel.js",["204"],[],"import React, { useEffect, useState } from 'react'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport Axios from 'axios';\r\n\r\n//import { PublicContex } from './PublicContext';\r\n\r\nexport default function UpdateHostel(props) {\r\n    //const [publicData, setPublicData] = useContext(PublicContex);\r\n\r\n    const hostelData = JSON.parse(props.hostel);\r\n    console.log(\"here hostel data::\");\r\n    console.log(hostelData);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [finalMsg, setFinalMsg] = useState(\"\");\r\n\r\n    const [hostel, setHostel] = useState({\r\n        id: JSON.stringify(hostelData.Hostel_ID),\r\n        type: hostelData.Type,\r\n        name: hostelData.Name,\r\n        address: hostelData.Address,\r\n        contact: hostelData.Contact,\r\n        occupied_seats: hostelData.Occupied_Seats,\r\n        total_seats: hostelData.Total_Seats,\r\n    })\r\n\r\n    const [error, setError] = useState({\r\n        id: \"\",\r\n        type: \"\",\r\n        name: \"\",\r\n        address: \"\",\r\n        contact: \"\",\r\n        total_seats: \"\",\r\n    })\r\n\r\n    console.log(\"set: \");\r\n    console.log(hostel);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"effect.. in update hostel.\");\r\n        \r\n    //     const hostelData = JSON.parse(props.hostel);\r\n    //     console.log(\"here hostel data::\");\r\n    //     console.log(hostelData);\r\n    //     console.log(JSON.stringify(hostelData.Hostel_ID));\r\n    //     console.log(hostelData.Type);\r\n\r\n    //     setHostel({ ...hostel, id : JSON.stringify(hostelData.Hostel_ID) });\r\n    //     setHostel({ ...hostel, type: hostelData.Type });\r\n    //     setHostel({ ...hostel, name: hostelData.Name });\r\n    //     setHostel({ ...hostel, address: hostelData.Address });\r\n    //     setHostel({ ...hostel, contact: hostelData.Contact });\r\n    //     setHostel({ ...hostel, occupied_seats: hostelData.Occupied_Seats });\r\n    //     setHostel({ ...hostel, total_seats: hostelData.Total_Seats });\r\n\r\n    //     console.log(\"set: \");\r\n    //     console.log(hostel);\r\n    // },[]);\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        console.log(\"now in handlesubmit2\");\r\n        event.preventDefault();\r\n        //check erro?\r\n        const isEmpty = Object.values(error).every(x => x === null || x === \"\");\r\n        console.log(isEmpty);\r\n        console.log(error);\r\n        \r\n        if (isEmpty) {\r\n                Axios.put(\"http://localhost:3001/update/hostel\", {\r\n                    hostel_id: hostel.id,\r\n                    type: hostel.type,\r\n                    name: hostel.name,\r\n                    address: hostel.address,\r\n                    contact: hostel.contact,\r\n                    occupied_seats: hostel.occupied_seats,\r\n                    total_seats: hostel.total_seats,\r\n        \r\n                }).then((response) => {\r\n                    if(response.data === \"error\"){\r\n                        console.log(\"baaal error\");\r\n                        setFinalMsg(\"Something Error!!\");\r\n                    } else {\r\n                        setFinalMsg(\"Hostel Updated successfully...\");\r\n                    }\r\n                    setShow(true);\r\n                }).catch((e) => alert(e));\r\n                \r\n        }\r\n        console.log(hostel);\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid lightGray\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        }} >\r\n            <Alert show={show} variant=\"success\">\r\n                <Alert.Heading>How's it going?!</Alert.Heading>\r\n                <p>\r\n                    {finalMsg}\r\n                </p>\r\n                <hr />\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button onClick={() => { setShow(false); window.location.reload(); }} variant=\"outline-success\">\r\n                        Close!\r\n                    </Button>\r\n                </div>\r\n            </Alert>\r\n\r\n            {!show && (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelID\">\r\n                        <Form.Label>Hostel ID</Form.Label>\r\n                        <Form.Control type=\"number\" value={hostel.id} readOnly />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelName\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Hostel Name\" value = {hostel.name} onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, name: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length < 2)\r\n                                msg = \"Too short!\";\r\n                            setError({ ...error, name: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.name}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelType\">\r\n                        <Form.Label>Type</Form.Label>\r\n                        <Form.Select value = {hostel.type} onChange={(event) => {\r\n                            const value = event.currentTarget.value;\r\n                            setHostel({ ...hostel, type: value })\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            setError({ ...error, type: msg });\r\n                        }}>\r\n                            <option value=\"male\" >Male</option>\r\n                            <option value=\"female\">Female</option>\r\n                        </Form.Select>\r\n                        <span className=\"text-danger\">{error.type}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"Occupied_Seats\">\r\n                        <Form.Label>Occupied Seats</Form.Label>\r\n                        <Form.Control type=\"number\" value={hostel.occupied_seats} readOnly />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelSeats\">\r\n                        <Form.Label>Total Seats</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder='Total number of seats' value = {hostel.total_seats} onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, total_seats: value });\r\n                            //console.log(Number(value) + \" ??? \"+ Number(hostel.occupied_seats));\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (Number(value) <= 0)\r\n                                msg = \"Total number of seats must be greater than zero!\";\r\n                            else if (!Number.isInteger(Number(value)))\r\n                                msg = \"Invalid number!\"\r\n                            else if (Number(value) < Number(hostel.occupied_seats)){\r\n                                msg = \"Total seats can't be less than occupied seats!\";\r\n                                //console.log(Number.isInteger(Number(value)) + \" ??? \"+ Number(hostel.occupied_seats))\r\n                            }\r\n                            setError({ ...error, total_seats: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.total_seats}</span>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelAddress\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} value = {hostel.address} placeholder=\"Address...\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, address: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            setError({ ...error, address: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.address}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelContact\">\r\n                        <Form.Label>Contact</Form.Label>\r\n                        <Form.Control type=\"tel\" value = {hostel.contact} placeholder=\"Office contact number: 01....\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, contact: value });\r\n                            let msg = \"\";\r\n\r\n                            const regex = /^[0][1][0-9]{9}$/i;\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length !== 11)\r\n                                msg = \"Mobile Number must have to be 11 Digits\";\r\n                            else if (!regex.test(value))\r\n                                msg = \"Invalid format!\";\r\n\r\n                            setError({ ...error, contact: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.contact}</span>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Update Hostel\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n        </div>\r\n        <br/><br/>\r\n        </>\r\n    )\r\n}\r\n",{"ruleId":"205","severity":1,"message":"206","line":22,"column":10,"nodeType":"207","messageId":"208","endLine":22,"endColumn":13},{"ruleId":"209","severity":1,"message":"210","line":38,"column":8,"nodeType":"211","endLine":38,"endColumn":10,"suggestions":"212"},{"ruleId":"209","severity":1,"message":"213","line":36,"column":6,"nodeType":"211","endLine":36,"endColumn":10,"suggestions":"214"},{"ruleId":"205","severity":1,"message":"215","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"205","severity":1,"message":"216","line":2,"column":8,"nodeType":"207","messageId":"208","endLine":2,"endColumn":13},{"ruleId":"205","severity":1,"message":"217","line":5,"column":10,"nodeType":"207","messageId":"208","endLine":5,"endColumn":16},{"ruleId":"205","severity":1,"message":"218","line":8,"column":8,"nodeType":"207","messageId":"208","endLine":8,"endColumn":17},{"ruleId":"205","severity":1,"message":"219","line":12,"column":19,"nodeType":"207","messageId":"208","endLine":12,"endColumn":27},{"ruleId":"205","severity":1,"message":"218","line":10,"column":8,"nodeType":"207","messageId":"208","endLine":10,"endColumn":17},{"ruleId":"205","severity":1,"message":"220","line":11,"column":8,"nodeType":"207","messageId":"208","endLine":11,"endColumn":21},{"ruleId":"205","severity":1,"message":"221","line":16,"column":17,"nodeType":"207","messageId":"208","endLine":16,"endColumn":23},{"ruleId":"205","severity":1,"message":"222","line":17,"column":18,"nodeType":"207","messageId":"208","endLine":17,"endColumn":25},{"ruleId":"205","severity":1,"message":"223","line":18,"column":18,"nodeType":"207","messageId":"208","endLine":18,"endColumn":25},{"ruleId":"205","severity":1,"message":"224","line":19,"column":19,"nodeType":"207","messageId":"208","endLine":19,"endColumn":27},{"ruleId":"205","severity":1,"message":"225","line":20,"column":19,"nodeType":"207","messageId":"208","endLine":20,"endColumn":27},{"ruleId":"205","severity":1,"message":"226","line":21,"column":23,"nodeType":"207","messageId":"208","endLine":21,"endColumn":35},{"ruleId":"205","severity":1,"message":"227","line":22,"column":21,"nodeType":"207","messageId":"208","endLine":22,"endColumn":31},{"ruleId":"205","severity":1,"message":"228","line":23,"column":19,"nodeType":"207","messageId":"208","endLine":23,"endColumn":27},{"ruleId":"205","severity":1,"message":"229","line":24,"column":12,"nodeType":"207","messageId":"208","endLine":24,"endColumn":19},{"ruleId":"205","severity":1,"message":"230","line":24,"column":21,"nodeType":"207","messageId":"208","endLine":24,"endColumn":31},{"ruleId":"205","severity":1,"message":"231","line":25,"column":22,"nodeType":"207","messageId":"208","endLine":25,"endColumn":33},{"ruleId":"205","severity":1,"message":"219","line":28,"column":19,"nodeType":"207","messageId":"208","endLine":28,"endColumn":27},{"ruleId":"205","severity":1,"message":"232","line":30,"column":14,"nodeType":"207","messageId":"208","endLine":30,"endColumn":28},{"ruleId":"205","severity":1,"message":"233","line":57,"column":11,"nodeType":"207","messageId":"208","endLine":57,"endColumn":28},{"ruleId":"205","severity":1,"message":"234","line":68,"column":11,"nodeType":"207","messageId":"208","endLine":68,"endColumn":24},{"ruleId":"205","severity":1,"message":"235","line":1,"column":37,"nodeType":"207","messageId":"208","endLine":1,"endColumn":47},{"ruleId":"205","severity":1,"message":"236","line":2,"column":24,"nodeType":"207","messageId":"208","endLine":2,"endColumn":29},{"ruleId":"205","severity":1,"message":"237","line":33,"column":15,"nodeType":"207","messageId":"208","endLine":33,"endColumn":23},{"ruleId":"205","severity":1,"message":"238","line":34,"column":17,"nodeType":"207","messageId":"208","endLine":34,"endColumn":20},{"ruleId":"209","severity":1,"message":"210","line":44,"column":9,"nodeType":"211","endLine":44,"endColumn":11,"suggestions":"239"},{"ruleId":"205","severity":1,"message":"215","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"205","severity":1,"message":"235","line":1,"column":27,"nodeType":"207","messageId":"208","endLine":1,"endColumn":37},{"ruleId":"205","severity":1,"message":"235","line":1,"column":27,"nodeType":"207","messageId":"208","endLine":1,"endColumn":37},{"ruleId":"205","severity":1,"message":"236","line":2,"column":24,"nodeType":"207","messageId":"208","endLine":2,"endColumn":29},{"ruleId":"205","severity":1,"message":"240","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":17},{"ruleId":"205","severity":1,"message":"241","line":7,"column":8,"nodeType":"207","messageId":"208","endLine":7,"endColumn":22},{"ruleId":"205","severity":1,"message":"236","line":7,"column":10,"nodeType":"207","messageId":"208","endLine":7,"endColumn":15},{"ruleId":"205","severity":1,"message":"242","line":7,"column":34,"nodeType":"207","messageId":"208","endLine":7,"endColumn":40},{"ruleId":"205","severity":1,"message":"243","line":8,"column":8,"nodeType":"207","messageId":"208","endLine":8,"endColumn":13},{"ruleId":"205","severity":1,"message":"244","line":19,"column":11,"nodeType":"207","messageId":"208","endLine":19,"endColumn":22},{"ruleId":"205","severity":1,"message":"245","line":52,"column":10,"nodeType":"207","messageId":"208","endLine":52,"endColumn":20},{"ruleId":"205","severity":1,"message":"235","line":1,"column":27,"nodeType":"207","messageId":"208","endLine":1,"endColumn":37},{"ruleId":"205","severity":1,"message":"246","line":2,"column":17,"nodeType":"207","messageId":"208","endLine":2,"endColumn":26},{"ruleId":"205","severity":1,"message":"236","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":15},{"ruleId":"205","severity":1,"message":"242","line":3,"column":34,"nodeType":"207","messageId":"208","endLine":3,"endColumn":40},{"ruleId":"205","severity":1,"message":"247","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":20},{"ruleId":"205","severity":1,"message":"248","line":40,"column":13,"nodeType":"207","messageId":"208","endLine":40,"endColumn":15},{"ruleId":"205","severity":1,"message":"237","line":44,"column":15,"nodeType":"207","messageId":"208","endLine":44,"endColumn":23},{"ruleId":"205","severity":1,"message":"238","line":45,"column":17,"nodeType":"207","messageId":"208","endLine":45,"endColumn":20},{"ruleId":"205","severity":1,"message":"235","line":1,"column":27,"nodeType":"207","messageId":"208","endLine":1,"endColumn":37},{"ruleId":"205","severity":1,"message":"236","line":2,"column":24,"nodeType":"207","messageId":"208","endLine":2,"endColumn":29},{"ruleId":"205","severity":1,"message":"249","line":28,"column":12,"nodeType":"207","messageId":"208","endLine":28,"endColumn":17},{"ruleId":"205","severity":1,"message":"250","line":28,"column":19,"nodeType":"207","messageId":"208","endLine":28,"endColumn":27},{"ruleId":"205","severity":1,"message":"251","line":29,"column":12,"nodeType":"207","messageId":"208","endLine":29,"endColumn":17},{"ruleId":"205","severity":1,"message":"252","line":29,"column":19,"nodeType":"207","messageId":"208","endLine":29,"endColumn":27},{"ruleId":"209","severity":1,"message":"253","line":50,"column":8,"nodeType":"211","endLine":50,"endColumn":14,"suggestions":"254"},{"ruleId":"205","severity":1,"message":"246","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":26},"no-unused-vars","'msg' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getHostels'. Either include it or remove the dependency array.","ArrayExpression",["255"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["256"],"'useState' is defined but never used.","'Axios' is defined but never used.","'Navbar' is defined but never used.","'AddHostel' is defined but never used.","'setQuery' is assigned a value but never used.","'GetHostelData' is defined but never used.","'setReg' is assigned a value but never used.","'setName' is assigned a value but never used.","'setDept' is assigned a value but never used.","'setMerit' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setHostel_ID' is assigned a value but never used.","'setRoom_ID' is assigned a value but never used.","'setPhone' is assigned a value but never used.","'role_id' is assigned a value but never used.","'setRole_ID' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'addStudentInfo' is defined but never used.","'updateStudentInfo' is assigned a value but never used.","'deleteStudent' is assigned a value but never used.","'useContext' is defined but never used.","'Alert' is defined but never used.","'response' is assigned a value but never used.","'tmp' is assigned a value but never used.",["257"],"'validator' is defined but never used.","'StudentSidebar' is defined but never used.","'Button' is defined but never used.","'axios' is defined but never used.","'LoginStatus' is assigned a value but never used.","'demoMethod' is assigned a value but never used.","'useEffect' is defined but never used.","'SingleHostel' is defined but never used.","'mp' is assigned a value but never used.","'user1' is assigned a value but never used.","'setUser1' is assigned a value but never used.","'user2' is assigned a value but never used.","'setUser2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ready', 'reg.reg1', 'reg.reg2', and 'setReg1'. Either include them or remove the dependency array.",["258"],{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"259","fix":"263"},{"desc":"264","fix":"265"},"Update the dependencies array to be: [getHostels]",{"range":"266","text":"267"},"Update the dependencies array to be: [getData, id]",{"range":"268","text":"269"},{"range":"270","text":"267"},"Update the dependencies array to be: [info, ready, reg.reg1, reg.reg2, setReg1]",{"range":"271","text":"272"},[1208,1210],"[getHostels]",[1072,1076],"[getData, id]",[1273,1275],[1291,1297],"[info, ready, reg.reg1, reg.reg2, setReg1]"]