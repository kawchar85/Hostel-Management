[{"D:\\final\\Hostel-Management\\client\\src\\index.js":"1","D:\\final\\Hostel-Management\\client\\src\\App.js":"2","D:\\final\\Hostel-Management\\client\\src\\components\\Profile.js":"3","D:\\final\\Hostel-Management\\client\\src\\components\\Signup.js":"4","D:\\final\\Hostel-Management\\client\\src\\components\\Logout.js":"5","D:\\final\\Hostel-Management\\client\\src\\components\\Room.js":"6","D:\\final\\Hostel-Management\\client\\src\\components\\ForgotPass.js":"7","D:\\final\\Hostel-Management\\client\\src\\components\\StudentHome.js":"8","D:\\final\\Hostel-Management\\client\\src\\components\\Home.js":"9","D:\\final\\Hostel-Management\\client\\src\\components\\Error.js":"10","D:\\final\\Hostel-Management\\client\\src\\components\\Complain.js":"11","D:\\final\\Hostel-Management\\client\\src\\components\\NavBar.js":"12","D:\\final\\Hostel-Management\\client\\src\\components\\Hostel.js":"13","D:\\final\\Hostel-Management\\client\\src\\components\\Administration.js":"14","D:\\final\\Hostel-Management\\client\\src\\components\\AdminReg.js":"15","D:\\final\\Hostel-Management\\client\\src\\components\\PublicContext.js":"16","D:\\final\\Hostel-Management\\client\\src\\pages\\Login.js":"17","D:\\final\\Hostel-Management\\client\\src\\components\\StudentSidebar.js":"18","D:\\final\\Hostel-Management\\client\\src\\components\\AddHostel.js":"19","D:\\final\\Hostel-Management\\client\\src\\pages\\Register.js":"20","D:\\final\\Hostel-Management\\client\\src\\components\\firebase.js":"21","D:\\final\\Hostel-Management\\client\\src\\components\\AdministrationSidebar.js":"22","D:\\final\\Hostel-Management\\client\\src\\components\\GetHostelData.js":"23","D:\\final\\Hostel-Management\\client\\src\\components\\SwapManual.js":"24","D:\\final\\Hostel-Management\\client\\src\\components\\SingleHostel.js":"25","D:\\final\\Hostel-Management\\client\\src\\components\\RoomDetails.js":"26","D:\\final\\Hostel-Management\\client\\src\\components\\NoticeList.js":"27","D:\\final\\Hostel-Management\\client\\src\\components\\AddNotice.js":"28","D:\\final\\Hostel-Management\\client\\src\\components\\SidebarItem.js":"29","D:\\final\\Hostel-Management\\client\\src\\components\\UpdateHostel.js":"30","D:\\final\\Hostel-Management\\client\\src\\components\\UpdateNotice.js":"31","D:\\final\\Hostel-Management\\client\\src\\components\\SingleStudent.js":"32"},{"size":299,"mtime":1660031992676,"results":"33","hashOfConfig":"34"},{"size":3111,"mtime":1660215239211,"results":"35","hashOfConfig":"34"},{"size":10914,"mtime":1660219301200,"results":"36","hashOfConfig":"34"},{"size":144,"mtime":1660031992674,"results":"37","hashOfConfig":"34"},{"size":108,"mtime":1660031992673,"results":"38","hashOfConfig":"34"},{"size":268,"mtime":1660031992673,"results":"39","hashOfConfig":"34"},{"size":143,"mtime":1660031992672,"results":"40","hashOfConfig":"34"},{"size":899,"mtime":1660031992674,"results":"41","hashOfConfig":"34"},{"size":1867,"mtime":1660031992672,"results":"42","hashOfConfig":"34"},{"size":1223,"mtime":1660031992671,"results":"43","hashOfConfig":"34"},{"size":4311,"mtime":1660031992671,"results":"44","hashOfConfig":"34"},{"size":3023,"mtime":1660185253366,"results":"45","hashOfConfig":"34"},{"size":6765,"mtime":1660185253365,"results":"46","hashOfConfig":"34"},{"size":3087,"mtime":1660185253362,"results":"47","hashOfConfig":"34"},{"size":8661,"mtime":1660185253361,"results":"48","hashOfConfig":"34"},{"size":80,"mtime":1660185253369,"results":"49","hashOfConfig":"34"},{"size":7557,"mtime":1660209839682,"results":"50","hashOfConfig":"34"},{"size":300,"mtime":1660031992674,"results":"51","hashOfConfig":"34"},{"size":7954,"mtime":1660031992670,"results":"52","hashOfConfig":"34"},{"size":16674,"mtime":1660211767355,"results":"53","hashOfConfig":"34"},{"size":707,"mtime":1660031992675,"results":"54","hashOfConfig":"34"},{"size":315,"mtime":1660031992671,"results":"55","hashOfConfig":"34"},{"size":3071,"mtime":1660031992672,"results":"56","hashOfConfig":"34"},{"size":14411,"mtime":1660031992675,"results":"57","hashOfConfig":"34"},{"size":283,"mtime":1660185253372,"results":"58","hashOfConfig":"34"},{"size":2322,"mtime":1660185253371,"results":"59","hashOfConfig":"34"},{"size":3322,"mtime":1660185253368,"results":"60","hashOfConfig":"34"},{"size":5707,"mtime":1660185253360,"results":"61","hashOfConfig":"34"},{"size":904,"mtime":1660031992674,"results":"62","hashOfConfig":"34"},{"size":8931,"mtime":1660185253375,"results":"63","hashOfConfig":"34"},{"size":6485,"mtime":1660185253376,"results":"64","hashOfConfig":"34"},{"size":1218,"mtime":1660185253373,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1g62r68",{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"69"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"69"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"69"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"69"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"69"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"69"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"69"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"69"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"69"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"69"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"69"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"69"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"69"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"D:\\final\\Hostel-Management\\client\\src\\index.js",[],[],[],"D:\\final\\Hostel-Management\\client\\src\\App.js",["180","181","182"],[],"import { useState , useEffect} from \"react\";\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nimport NavBar from \"./components/NavBar\";\r\nimport Home from \"./components/Home\";\r\nimport Profile from \"./components/Profile\";\r\nimport Hostel from './components/Hostel';\r\nimport Login from './pages/Login';\r\nimport Logout from \"./components/Logout\";\r\nimport Signup from \"./components/Signup\";\r\nimport Error from \"./components/Error\";\r\nimport Room from \"./components/Room\";\r\nimport Administration from \"./components/Administration\";\r\nimport StudentHome from \"./components/StudentHome\";\r\nimport AdminReg from \"./components/AdminReg\";\r\nimport ForgotPass from \"./components/ForgotPass\";\r\nimport Complain from \"./components/Complain\";\r\n\r\nimport { PublicContex } from \"./components/PublicContext\";\r\n\r\n//how to use public data?\r\n//import {useContext } from 'react'\r\n//import { PublicContex } from './PublicContext';\r\n//const [publicData, setPublicData] = useContext(PublicContex);\r\nfunction App() {\r\n\r\n  const [hostelList, setHostelList] = useState([]);\r\n  const [user, setUser] = useState(\r\n    {\r\n      rule_id: -1,\r\n      email: \"c@gmail.com\"\r\n    }\r\n  );\r\n\r\n  //get Hostel list from Database\r\n  const getHostels = () => {\r\n    Axios.get(\"http://localhost:3001/getData/\", { params: { table: \"hostel\" } }).then((response) => {\r\n      setHostelList(response.data);\r\n      //console.log(response.data);\r\n      setPublicData({...publicData,hostel:response.data});\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getHostels();\r\n  },[]);\r\n\r\n\r\n  const [msg, setMsg] = useState(\"Hello World!\");\r\n  //getting info from NavBar.js\r\n  const getData = (info) => {\r\n    setMsg(info);\r\n  };\r\n\r\n\r\n\r\n\r\n  const [publicData, setPublicData] = useState(\r\n    {\r\n      user: user,\r\n      hostel: hostelList,\r\n      refresh : false,\r\n      modalShow: []\r\n    }\r\n  );\r\n\r\n\r\n  return (\r\n\r\n    <PublicContex.Provider value={[publicData, setPublicData]}>\r\n      {console.log(\"Public data: \")}\r\n      {console.log(publicData)}\r\n      <div className=\"App\">\r\n        <NavBar info={getData} />\r\n        <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/home\" element={<Home />} />\r\n          <Route path=\"/profile\" element={<Profile />} />\r\n          <Route path=\"/hostel/:id\" element={<Hostel />} />\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/logout\" element={<Logout />} />\r\n          <Route path=\"/signup\" element={<Signup />} />\r\n          <Route path=\"/complain\" element={<Complain />} />\r\n          <Route path=\"/adminreg\" element={<AdminReg />} />\r\n          <Route path=\"/forgotpass\" element={<ForgotPass/>} />\r\n          <Route path=\"/hostel/:hostelId/room/:roomId\" element={<Room />} />\r\n          <Route path=\"/administration\" element={<Administration />} />\r\n          <Route path=\"/studenthome\" element={<StudentHome />} />\r\n\r\n\r\n          <Route path=\"*\" element={<Error />} />\r\n\r\n        </Routes>\r\n        </BrowserRouter>\r\n\r\n      </div>\r\n    </PublicContex.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\Profile.js",["183","184","185","186","187","188"],[],"D:\\final\\Hostel-Management\\client\\src\\components\\Signup.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\Logout.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\Room.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\ForgotPass.js",["189","190"],[],"import React, { useState, useContext } from 'react';\r\n\r\nexport default function ForgotPass() {\r\n    return(\r\n        <div>hello</div>\r\n    )\r\n}","D:\\final\\Hostel-Management\\client\\src\\components\\StudentHome.js",["191","192","193","194","195"],[],"import React, { useState } from 'react'\r\nimport Axios from 'axios';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nimport '../index.css';\r\nimport AddHostel from './AddHostel';\r\nimport StudentSidebar from './StudentSidebar';\r\n\r\nexport default function StudentHome() {\r\n    const [query, setQuery] = useSearchParams();\r\n    const myStyle = {\r\n        align: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\"\r\n    }\r\n    return(\r\n        <div id= \"side\">\r\n            <div className='main'>\r\n                <StudentSidebar/>\r\n                <div className=\"container\">\r\n                    <div style={myStyle} >\r\n                    <h2>{query.get(\"action\")}  {query.get(\"section\")}</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\final\\Hostel-Management\\client\\src\\components\\Home.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\Error.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\Complain.js",["196","197","198","199"],[],"import React, { useState, useContext } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport validator from 'validator';\r\nimport Axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../index.css';\r\nimport StudentSidebar from './StudentSidebar'\r\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\r\nimport { storage } from './firebase';\r\n\r\n\r\nexport default function Complain() {\r\n\r\n    const [error, setError] = useState({\r\n        tag: \"* field is required\",\r\n        description: \"* field is required\",\r\n        image: \"* field is required\",\r\n        contact: \"* field is required\",\r\n        total_seats: \"* field is required\",\r\n    });\r\n    const [complain, setComplain] = useState({\r\n        tag:0,\r\n        description:\"\",\r\n        timestamp:\"\",\r\n        photo:\"\",\r\n        std_reg:\"2018331008\"\r\n\r\n    });\r\n    const [files, setFiles] = useState([]);\r\n\r\n\r\n    const uploadImage = () => {\r\n        if (files.length !== 0) {\r\n          const imageRef = ref(storage, `banner/${Date.now()}`);\r\n          uploadBytes(imageRef, files).then((snapshot) => {\r\n            getDownloadURL(snapshot.ref).then(async (url) => {\r\n            console.log(url);\r\n            complain.photo=url;\r\n            console.log(complain.photo);\r\n    \r\n             \r\n            });\r\n          });\r\n        } else return;\r\n\r\n        console.log(\"kaj korche\");\r\n        const tm= Date.now();\r\n        console.log(tm);\r\n    \r\n        \r\n        if(complain.photo != null) {\r\n            Axios.post(\"http://localhost:3001/add/complain\", {\r\n            \"tag\":complain.tag,\r\n            \"description\":complain.description,\r\n            \"photo\":complain.photo,\r\n            \"timestamp\":tm,\r\n            \"std_reg\":complain.std_reg,\r\n        }).then( ()=> {\r\n            console.log(\"look it works!!\");\r\n        }).catch((e)=>{\r\n            alert(e);\r\n            console.log(\"hoilona\");\r\n        });\r\n        }\r\n        else alert(\"select imag!\");\r\n\r\n\r\n      };\r\n\r\n\r\n    return(\r\n        <>\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid lightGray\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"30px\"\r\n        }} >\r\n        {JSON.stringify(complain)}\r\n            <Form>\r\n            <Form.Group className=\"mb-3\">\r\n            <Form.Label>Tag</Form.Label>\r\n            <Form.Select onChange={(event) => {\r\n                const value = event.currentTarget.value;\r\n                setComplain({ ...complain, tag: value })\r\n                let msg = \"\";\r\n                if (value.length === 0)\r\n                    msg = \"* field is required\";\r\n                setError({ ...error, tag: msg });\r\n                }}>\r\n                <option>Select Type</option>\r\n                <option value=\"11\" >Cleaning</option>\r\n                <option value=\"12\">Seat</option>\r\n                <option value=\"13\">Kitchen</option>\r\n            </Form.Select>\r\n            <span className=\"text-danger\">{error.tag}</span>\r\n            </Form.Group>\r\n\r\n\r\n\r\n            <Form.Group className=\"mb-3\" >\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} placeholder=\"Details complain...\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setComplain({ ...complain, description: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            setError({ ...error, description: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.description}</span>\r\n                    </Form.Group>\r\n\r\n                    <input className=\"mb-3\" type=\"file\" fileName=\"complainPhoto\" onChange={(event)=>{\r\n                        event.preventDefault();\r\n                        setFiles(event.target.files[0]);\r\n                    }}/>\r\n\r\n                    \r\n                \r\n            \r\n            </Form><Button variant=\"primary\" type=\"submit\" onClick={uploadImage}>\r\n                        Submit\r\n                    </Button>\r\n        \r\n        \r\n        </div></>\r\n    )\r\n}","D:\\final\\Hostel-Management\\client\\src\\components\\NavBar.js",["200","201","202","203"],[],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { Navbar, Nav, Container, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\nimport SingleHostel from './SingleHostel';\r\n\r\nimport { PublicContex } from './PublicContext';\r\n\r\nexport default function NavBar(props) {\r\n\r\n    const [publicData, setPublicData] = useContext(PublicContex);\r\n    \r\n    const handleClick = (selectedKey) => {\r\n        //alert(`selected ${selectedKey}`);\r\n        const msg = \"You are in \" + selectedKey;\r\n        props.info(msg); //passing data to App.js\r\n    }\r\n\r\n    function isLogged() {\r\n        return false;\r\n    }\r\n    function isAdministration() {\r\n        return true;\r\n    }\r\n\r\n    let page1, page2;\r\n    if (isLogged()) {\r\n        page1 = \"Profile\";\r\n        page2 = \"Logout\";\r\n    }\r\n    else {\r\n        page1 = \"Login\";\r\n        page2 = \"Signup\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\">\r\n                <Container fluid>\r\n                    <Navbar.Brand ><b>Hostel Management</b></Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n                    <Navbar.Collapse id=\"navbarScroll\">\r\n                        <Nav\r\n                            className=\"me-auto my-2 my-lg-0\"\r\n                            style={{ maxHeight: '100px' }}\r\n                            navbarScroll\r\n                            onSelect={handleClick}\r\n                        >\r\n                            <Nav.Link href=\"/home\">Home</Nav.Link>\r\n\r\n                            <NavDropdown title=\"Hostels\" id=\"navbarScrollingDropdown\">\r\n                                {publicData.hostel.map((val, idx) => {\r\n                                    return <SingleHostel Hostel_ID={val.Hostel_ID} Name={val.Name} key={idx} />\r\n                                }\r\n                                )}\r\n\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item href=\"/hostel/420\">Custom Test</NavDropdown.Item>\r\n\r\n                            </NavDropdown>\r\n\r\n\r\n                            <Nav.Link href={\"/\" + page1}>{page1}</Nav.Link>\r\n                            <Nav.Link href={\"/\" + page2}>{page2}</Nav.Link>\r\n                            {isAdministration()&&(<Nav.Link href=\"/administration\">Administration</Nav.Link>)}                            \r\n\r\n                        </Nav>\r\n                        <Form className=\"d-flex\">\r\n                            <FormControl\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                className=\"me-2\"\r\n                                aria-label=\"Search\"\r\n                            />\r\n                            <Button variant=\"outline-success\">Search</Button>\r\n                        </Form>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\Hostel.js",["204","205"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport Axios from 'axios';\r\nimport { useParams } from 'react-router-dom'\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nimport { PublicContex } from './PublicContext';\r\nimport RoomDetails from './RoomDetails';\r\n\r\n\r\nexport default function Hostel() {\r\n\r\n  const [publicData, setPublicData] = useContext(PublicContex);\r\n\r\n  const {id} = useParams();\r\n  const [modalShow, setModalShow] = React.useState([]);\r\n  const [hostelData, setHostelData] = useState({\r\n    Hostel_ID: 0,\r\n    Type: \"Loading...\",\r\n    Name: \"Hostel Name Loading...\",\r\n    Address: \"Loading...\",\r\n    Contact: \"Loading...\",\r\n    Total_Seats: 0,\r\n    Occupied_Seats: 0,\r\n});\r\n\r\nconst [rooms, setRooms] = useState([]);\r\nconst [roomID, setRoomID] = useState(0);\r\n\r\n  const getData = async () => {\r\n\r\n    await Axios.get(\"http://localhost:3001/getData/hostel\", { params: { hostel_id: id } }).then((response) => {\r\n        if(response.data === \"error\"){\r\n            alert(\"Invalid Hostel ID!!!\");\r\n        } else {\r\n              let data = response.data[0];\r\n              console.log(\"res data\");\r\n              console.log(data);\r\n              setHostelData({...hostelData,Hostel_ID: data.Hostel_ID, Type:data.Type, Name: data.Name, Address: data.Address, Contact: data.Contact, Total_Seats: data.Total_Seats, Occupied_Seats: data.Occupied_Seats});\r\n        }\r\n    }).catch((e) => alert(e));\r\n\r\n  };\r\n  \r\n    const getRooms = async () => {\r\n    await Axios.get(\"http://localhost:3001/getData/rooms\", { params: { hostel_id: id } }).then((response) => {\r\n          if(response.data === \"error\"){\r\n              alert(\"Something Error\");\r\n          } else {\r\n              setRooms(response.data);\r\n              const arr = Array(response.data.length).fill(false);\r\n              console.log(\"length ----> \");\r\n              console.log(arr);\r\n              setModalShow(arr);\r\n              setPublicData({...publicData,modalShow: arr});\r\n\r\n          }\r\n        }).catch((e) => alert(e));\r\n    };\r\n  \r\n  useEffect(() => {\r\n    console.log(\"data loading\");\r\n    getData();\r\n    getRooms();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Loaded data\");\r\n    console.log(hostelData);\r\n    console.log(rooms)\r\n  }, [hostelData,rooms]);\r\n\r\n  const handleClick = e => {\r\n    e.preventDefault();\r\n    const id = e.target.id;\r\n    setRoomID(rooms[id].Room_ID);\r\n    const arr = modalShow;\r\n    arr[id] = true;\r\n    setModalShow(arr);\r\n    setPublicData({...publicData,modalShow: arr});\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div style={{\r\n            textShadow: \"#f9fafb 0px 1px 0px, #0d6efd 3px 3px 3px\",\r\n            textAlign: \"center\",\r\n            color: \"#666\",\r\n            margin: \"0 0 30px 0\",\r\n            letterSpacing: \"4px\",\r\n            font: \"normal 30px/2 Segoe Print,Verdana, Helvetica\",\r\n            position: \"relative\",\r\n        }} >          \r\n          \r\n          {hostelData.Name}\r\n        </div>\r\n\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid #d3e5ff\",\r\n            borderRadius: \"10px\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginBottom: \"50px\",\r\n        }} > \r\n\r\n            <div style={{\r\n                color: \"#666\",\r\n                letterSpacing: \"4px\",\r\n                font: \"normal 30px/1 Gabriola,Verdana, Helvetica\",\r\n                fontWeight: 'bold',\r\n            }}>\r\n                <Spinner animation=\"grow\" variant=\"info\" />\r\n                Summary \r\n            </div>\r\n\r\n            <hr style={{ backgroundColor: 'green', height: 2.2, }} />\r\n            \r\n            <div style={{\r\n                color: \"#666\",\r\n                letterSpacing: \"4px\",\r\n                font: \"normal 20px/1 Comic Sans MS,Verdana, Helvetica\",\r\n            }}>\r\n              Total Seats : {hostelData.Total_Seats} <br/>\r\n              Occupied Seats : {hostelData.Occupied_Seats} <br/>\r\n              Type : {hostelData.Type} <br/>\r\n              Provost : ???(different card?)<br/> \r\n              Office : {hostelData.Address} <br/>\r\n              Contact : {hostelData.Contact}\r\n\r\n                \r\n            </div>\r\n        \r\n        </div>\r\n\r\n\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid #d3e5ff\",\r\n            borderRadius: \"10px\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginBottom: \"50px\",\r\n        }} > \r\n\r\n            <div style={{\r\n                color: \"#666\",\r\n                letterSpacing: \"4px\",\r\n                font: \"normal 30px/1 Gabriola,Verdana, Helvetica\",\r\n                fontWeight: 'bold',\r\n            }}>\r\n                <Spinner animation=\"grow\" variant=\"primary\" />\r\n                Rooms \r\n            </div>\r\n\r\n            <hr style={{ backgroundColor: '#16d59a', height: 2.2, }} />\r\n            \r\n            <div style={{\r\n                color: \"#666\",\r\n                letterSpacing: \"4px\",\r\n                font: \"normal 20px/1 Comic Sans MS,Verdana, Helvetica\",\r\n            }}>\r\n\r\n              {rooms.map((val, idx) => {\r\n                  return <React.Fragment key={idx}>\r\n                          <Button id={idx} key={idx} variant=\"link\" onClick={e => handleClick(e)} >{val.Room_ID}, </Button>\r\n                          <RoomDetails \r\n                              id={idx}\r\n                              room_id = {val.Room_ID}\r\n                              hostel_id = {id}\r\n                          />\r\n                        </React.Fragment>\r\n                }\r\n              )}\r\n\r\n              \r\n              \r\n            </div>\r\n        \r\n        </div>\r\n\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid #d3e5ff\",\r\n            borderRadius: \"10px\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginBottom: \"50px\",\r\n        }} > \r\n            <div style={{\r\n                color: \"#666\",\r\n                letterSpacing: \"4px\",\r\n                font: \"normal 30px/1 Gabriola,Verdana, Helvetica\",\r\n                fontWeight: 'bold',\r\n            }}>\r\n                <Spinner animation=\"grow\" variant=\"warning\" />\r\n                Seat Available in Room(s) \r\n            </div>\r\n\r\n            <hr style={{ backgroundColor: '#786017', height: 2.2, }} />\r\n            \r\n            <div style={{\r\n                color: \"#666\",\r\n                letterSpacing: \"4px\",\r\n                font: \"normal 20px/1 Comic Sans MS,Verdana, Helvetica\",\r\n            }}>\r\n              1, 2, 4, 6 <br/>\r\n              8, 10, 12<br/>\r\n              \r\n            </div>\r\n\r\n        </div>\r\n    </>\r\n\r\n\r\n  )\r\n}\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\Administration.js",["206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225"],[],"//for test \r\n\r\n\r\nimport React, { useState, useContext } from 'react'\r\nimport Axios from 'axios';\r\nimport AdministrationSidebar from './AdministrationSidebar';\r\n\r\nimport '../index.css';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport AddHostel from './AddHostel';\r\nimport GetHostelData from './GetHostelData';\r\nimport SwapManual from './SwapManual';\r\nimport AddNotice from './AddNotice';\r\nimport NoticeList from './NoticeList';\r\n\r\nimport { PublicContex } from './PublicContext';\r\n\r\nexport default function Administration() {\r\n\r\n    const [publicData, setPublicData] = useContext(PublicContex);\r\n    // console.log(publicData);\r\n    // setPublicData({...publicData,refrash: true});\r\n    // console.log(publicData);\r\n\r\n    const [reg, setReg] = useState(0);\r\n    const [name, setName] = useState(\"\");\r\n    const [dept, setDept] = useState(\"\");\r\n    const [merit, setMerit] = useState(0);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [hostel_id, setHostel_ID] = useState(-1);\r\n    const [room_id, setRoom_ID] = useState(-1);\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [role_id, setRole_ID] = useState(2);\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n\r\n    const [query, setQuery] = useSearchParams();\r\n\r\n    function addStudentInfo() {\r\n        Axios.post(\"http://localhost:3001/add/students\", {\r\n            name: name,\r\n            reg: reg,\r\n            dept: dept,\r\n            merit: merit,\r\n            email: email,\r\n            phone: phone,\r\n            hostel_id: hostel_id,\r\n            room_id: room_id,\r\n            role_id: 2,\r\n        }).then(() => {\r\n            alert(\"student added\");\r\n            console.log(\"std added\");\r\n        });\r\n\r\n        Axios.post(\"http://localhost:3001/add/login\", {\r\n            email: email,\r\n            role_id: 2,\r\n            password: password,\r\n        }).then(() => {\r\n            alert(\"login info added\");\r\n            console.log(\"login added\");\r\n\r\n        });\r\n    }\r\n\r\n    const updateStudentInfo = () => {\r\n        Axios.put(\"http://localhost:3001/update/students\", {\r\n            reg: \"2018331099\",\r\n            hostel_id: \"55\",\r\n            room_id: \"605\",\r\n\r\n        }).then(() => {\r\n            console.log(\"std updated\");\r\n        });\r\n    }\r\n\r\n    const deleteStudent = (reg) => {\r\n        Axios.delete(`http://localhost:3001/delete/students/${reg}`).then(() => {\r\n            console.log(\"std deleted\");\r\n        });\r\n    };\r\n\r\n    const myStyle = {\r\n        align: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\"\r\n    }\r\n\r\n    //will send current users' role id in sidebar\r\n    return (\r\n        <div id=\"side\">\r\n            <div className=\"main\">\r\n                <AdministrationSidebar />\r\n                <div className=\"container\">\r\n                    <div style={myStyle} >\r\n                    <h2>{query.get(\"action\")}  {query.get(\"section\")}</h2>\r\n                    </div>\r\n\r\n                    \r\n                    <NoticeList />\r\n                    <AddNotice />\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\AdminReg.js",["226","227","228","229","230"],[],"import React, { useState,useEffect, useContext } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport validator from 'validator';\r\nimport Axios from 'axios';\r\n\r\nexport default function AdminReg () {\r\n\r\n    const [admin, setAdmin] = useState({\r\n        name: \"\",\r\n        password:\"\",\r\n        phone:\"\",\r\n        email:\"\",\r\n        hostel_id:\"\",\r\n        designation:\"\",\r\n        role_id: \"\"\r\n    });\r\n\r\n    const [error, setError] = useState({\r\n        name: \"* field is required\",\r\n        pass: \"* field is required\",\r\n        phone: \"* field is required\",\r\n        mail: \"* field is required\",\r\n        hostel: \"* field is required\",\r\n        designation: \"* field is required\",\r\n        role: \"* field is required\",\r\n    });\r\n    const [hostel, setHostel] = useState({\r\n        hostels : []\r\n    })\r\n\r\n\r\n    const getHostels = async() => {\r\n        const response= await Axios.get(\"http://localhost:3001/getData/\", { params: { table: \"hostel\" } }).then((response) => {\r\n            let tmp = {hostels : response.data};\r\n            setHostel({hostels : response.data} , ()=>{\r\n                console.log(hostel.hostels);\r\n            });\r\n        });\r\n    };\r\n\r\n    useEffect( ()=>{\r\n        console.log(\"hi\");\r\n        getHostels();\r\n     }, [] );\r\n\r\n    const addAdmin =()=> {\r\n\r\n        Axios.get(\"http://localhost:3001/getData/login\", { params: { mail: admin.email } }).then((response) => {\r\n            console.log(\"Amar nam preity\");\r\n            console.log(response.data);\r\n            if(response.data === \"notRegistered\")\r\n            {\r\n                const isEmpty = Object.values(error).every(x => x === null || x === \"\");\r\n                if(isEmpty) {\r\n                Axios.post(\"http://localhost:3001/add/administration\", {\r\n                \"name\":admin.name,\r\n                \"phone\":admin.phone,\r\n                \"email\":admin.email,\r\n                \"hostel_id\":admin.hostel_id,\r\n                \"designation\":admin.designation,\r\n                \"role_id\":admin.role_id,\r\n            }).then( ()=> {\r\n                console.log(\"look it works!!\");\r\n            }).catch((e)=>{\r\n                alert(\"Something went wrong, try again\");\r\n                console.log(e);\r\n            });\r\n            Axios.post(\"http://localhost:3001/add/login\", {\r\n                \"password\":admin.password,\r\n                \"role_id\": admin.role_id,\r\n                \"email\": admin.email\r\n            }).then(()=> {\r\n                console.log(\"login added\")\r\n            } ); \r\n            }\r\n            else alert(\"No field can remain empty\");\r\n            }\r\n            else if(response.data === \"Registered\") {\r\n                alert(\"This registration number is in use!\");\r\n            }\r\n            else {\r\n                alert(\"Something went wrong, try again!\");\r\n            }\r\n        }).catch((e) => alert(e));\r\n        console.log(\"now in handlesubmit\");\r\n    };\r\n\r\n    return(\r\n        <>\r\n        {JSON.stringify(admin)}\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid lightGray\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"30px\",\r\n        }} >\r\n\r\n        \r\n\r\n        <Form onSubmit={addAdmin}>\r\n            <Form.Group className=\"mb-3\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Name\" onChange={(event) => {\r\n                const value = event.target.value;\r\n                setAdmin({ ...admin, name: value });\r\n                let msg = \"\";\r\n                if (value.length === 0)\r\n                    msg = \"* field is required\";\r\n                else if (value.length < 2)\r\n                    msg = \"Too short!\";\r\n                setError({...error, name: msg });\r\n            }} />\r\n            <span className=\"text-danger\">{error.name}</span>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n            <Form.Label>Contact</Form.Label>\r\n            <Form.Control type=\"tel\" placeholder=\"Contact number: 01....\" onChange={(event) => {\r\n            const value = event.target.value;\r\n            setAdmin({ ...admin, phone: value });\r\n            let msg = \"\";\r\n            const regex = /^[0][1][0-9]{9}$/i;\r\n            if (value.length === 0)\r\n                msg = \"* field is required\";\r\n            else if (value.length !== 11)\r\n                msg = \"Mobile Number must have to be 11 Digits\";\r\n            else if (!regex.test(value))\r\n                msg = \"Invalid format!\";\r\n                setError({ ...error, phone: msg });\r\n            }} />\r\n            <span className=\"text-danger\">{error.phone}</span>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"example@something.com\" onChange={(event) => {\r\n            const value = event.target.value;\r\n            setAdmin({ ...admin, email: value });\r\n            let msg = \"\";\r\n    \r\n            if (value.length === 0)\r\n                msg = \"* field is required\";\r\n            else if(!validator.isEmail(value))\r\n                msg = \"Invalid format!\";\r\n                setError({ ...error, mail: msg });\r\n            }} />\r\n            <span className=\"text-danger\">{error.mail}</span>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"password\" onChange={(event) => {\r\n                const value = event.target.value;\r\n                setAdmin({ ...admin, password: value });\r\n                let msg = \"\";\r\n        \r\n                if (value.length === 0)\r\n                    msg = \"* field is required\";\r\n                else if(value.length < 5)\r\n                    msg = \"Password should be at least 5 digit long!\";\r\n                    setError({ ...error, pass: msg });\r\n                }}/>\r\n            <span className=\"text-danger\">{error.pass}</span>\r\n            </Form.Group>\r\n        \r\n        </Form>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n            <Form.Label>Hostel</Form.Label>\r\n            <Form.Select onChange={(event) => {\r\n            const value = event.currentTarget.value;\r\n            setAdmin({ ...admin, hostel_id: value })\r\n            let msg = \"\";\r\n            if (value.length === 0)\r\n            msg = \"* field is required\";\r\n            setError({ ...error, hostel: msg });\r\n            }}>\r\n            {hostel.hostels.map((option, index) => (\r\n                <option key={index} value={option.Hostel_ID}>\r\n                    {option.Name}\r\n                </option>\r\n            ))}\r\n            </Form.Select>\r\n            <span className=\"text-danger\">{error.hostel}</span>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n            <Form.Label>Designation</Form.Label>\r\n            <Form.Select onChange={(event) => {\r\n            const value = event.currentTarget.value;\r\n            setAdmin({ ...admin, designation: value })\r\n            let msg = \"\";\r\n            if (value.length === 0)\r\n            msg = \"* field is required\";\r\n            setError({ ...error, designation: msg });\r\n            }}>\r\n            <option>Select designation</option>\r\n                <option value=\"1\" >Provost</option>\r\n                <option value=\"2\">Assistant Provost</option>\r\n                <option value=\"3\">Supervisor</option>\r\n            </Form.Select>\r\n            <span className=\"text-danger\">{error.designation}</span>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n            <Form.Label>Role</Form.Label>\r\n            <Form.Select onChange={(event) => {\r\n            const value = event.currentTarget.value;\r\n            setAdmin({ ...admin, role_id: value })\r\n            let msg = \"\";\r\n            if (value.length === 0)\r\n            msg = \"* field is required\";\r\n            setError({ ...error, role: msg });\r\n            }}>\r\n            <option>Select designation</option>\r\n                <option value=\"1\" >Cleaning</option>\r\n                <option value=\"2\">Seat Allocation</option>\r\n                <option value=\"3\">Supervison</option>\r\n            </Form.Select>\r\n            <span className=\"text-danger\">{error.role}</span>\r\n        </Form.Group>\r\n\r\n\r\n        <Button variant=\"primary\" type=\"submit\" onClick={addAdmin}>\r\n                        Submit\r\n                    </Button>\r\n                    <p className=\"text-right my-4\">\r\n                                <a href=\"http://localhost:3000/Signup\">Not an admin??</a>\r\n                            </p>\r\n\r\n        </div>\r\n\r\n        </>\r\n    )\r\n\r\n}","D:\\final\\Hostel-Management\\client\\src\\components\\PublicContext.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\pages\\Login.js",["231","232","233","234","235","236"],[],"\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport React from \"react\";\r\nimport {useState, useEffect, useContext} from \"react\";\r\nimport validator from 'validator';\r\nimport Axios from 'axios';\r\n\r\nimport { Alert, Container, Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { PublicContex } from './../components/PublicContext';\r\n\r\nfunction Login() {\r\n    const [publicData, setPublicData] = useContext(PublicContex);\r\n    const [LoginState, setLoginState] = useState({\r\n        email: \"\",\r\n        email_err: \"* field can not be empty\",\r\n        password: \"\",\r\n        password_err: \"* field can not be empty\",\r\n        ck: false\r\n\r\n    });\r\n    const[LoginStatus, setLoginStatus] = useState(false);\r\n    \r\n/*\r\n    const auth =()=> {\r\n        \r\n        Axios.get(\"http://localhost:3001/loginCred\", {\r\n            params: { table: \"login\", email:\"'\"+LoginState.email+\"'\" },\r\n            \r\n            \r\n        }).then((response)=> {\r\n            console.log(\"yeeeee loginer kaj korche\");\r\n            const len = response.data.length;\r\n            if(len==0) {\r\n                alert(\"Invalid Email\");\r\n            }\r\n            else \r\n            {\r\n                console.log(response.data[0]);\r\n                const {Email,RoleID,Password} = response.data[0];\r\n                console.log(Email);\r\n                if(LoginState.password == Password) {\r\n                    alert(\"Login successful\");\r\n                }\r\n                else \r\n                {\r\n                    alert(\"Wrong Password\");\r\n                }\r\n            }\r\n            \r\n            \r\n        } );\r\n    }\r\n    */\r\n   const demoMethod =()=>{\r\n        Axios.get(\"http://localhost:3001/isAuth\",{\r\n            \"headers\" : {\r\n                \"x-access-token\": localStorage.getItem(\"token\"),\r\n            },\r\n        }).then((response)=>{\r\n            console.log(response);\r\n        });\r\n   };\r\n\r\n\r\n    const auth =() => {\r\n        Axios.post(\"http://localhost:3001/authMail\", {\r\n            \"email\":LoginState.email,\r\n        }).then((response)=> {\r\n            console.log(response);\r\n            if(response.data.length > 0)\r\n            {\r\n                Axios.post(\"http://localhost:3001/auth\", {\r\n                    \"email\":LoginState.email,\r\n                    \"password\":LoginState.password\r\n                }).then((response)=> {\r\n                    if(response.data.result.length > 0)\r\n                    {\r\n                        console.log(response.data.result[0].Email);\r\n                        let obj = publicData.user;\r\n                        obj.email= response.data.result[0].Email;\r\n                        obj.rule_id= response.data.result[0].Role_ID;\r\n                        setPublicData({...publicData, user: obj });\r\n                        console.log(publicData.user);\r\n                        setLoginStatus(true);\r\n                        localStorage.setItem(\"token\",response.data.token);\r\n                        alert(\"Logged in!\");\r\n                    }\r\n                    else\r\n                    {\r\n                        alert(\"Wrong password!\");\r\n                        setLoginStatus(false);\r\n                    } \r\n                });\r\n            }\r\n            else \r\n            {\r\n                setLoginStatus(false);\r\n                alert(\"Invalid mail address\");\r\n            }\r\n        });\r\n    }\r\n\r\n    return(\r\n        <Container className=\"my-5\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center align-items-center\">\r\n                    <h4>Login</h4>\r\n                    \r\n                    <div className=\"shadow p-4\" style={{\r\n                        width: \"60%\",\r\n                        border: \"3px solid lightGray\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight: \"auto\",\r\n                    }} >\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"email\" onChange={(event) => {\r\n                                const value = event.target.value;\r\n                                let msg = \"\";\r\n                                if(validator.isEmail(value))\r\n                                {\r\n                                    try{\r\n                                        setLoginState({...LoginState,email:value,email_err: msg});\r\n                                    }\r\n                                    catch(e) \r\n                                    {\r\n                                        console.log(e);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    if(value.length === 0) msg=\"* field is required\";\r\n                                    else msg=\"Invalid Mail!!\"\r\n                                    setLoginState({...LoginState,email_err:msg});\r\n                                    console.log(value);\r\n                                }\r\n                            }} />\r\n                            <span className=\"text-danger\">{LoginState.email_err}</span>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"password\" onChange={(event) => {\r\n                                    const value = event.target.value;\r\n                                    let msg = \"\";\r\n                                    if(value.length === 0) msg=\"* field is required\";\r\n                                    setLoginState({...LoginState, password:value, password_err:msg});\r\n                                \r\n                            }} />\r\n                            <span className=\"text-danger\">{LoginState.password_err}</span>\r\n                        </Form.Group>\r\n                            \r\n                        <div className=\"my-4\">\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"ckbox\"\r\n                                    onChange={(event)=> {\r\n                                        const value = event.target.checked;\r\n                                        setLoginState({...LoginState,ck:value})\r\n                                    } }\r\n                                />\r\n                                <label className=\"custom-control-label\" for=\"ckbox\">\r\n                                    Remember me\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-grid\">\r\n                            <button \r\n                                type=\"submit\" \r\n                                className=\"btn btn-primary\"\r\n                                disabled= {!LoginState.email || !LoginState.password}\r\n                                onClick={auth}\r\n                            >\r\n                                Submit\r\n                            </button>\r\n                            \r\n                        </div>\r\n                        \r\n                           \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Login;","D:\\final\\Hostel-Management\\client\\src\\components\\StudentSidebar.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\AddHostel.js",["237"],[],"import React, { useState, useContext } from 'react'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport Axios from 'axios';\r\n\r\n//import { PublicContex } from './PublicContext';\r\n\r\nexport default function AddHostel() {\r\n    //const [publicData, setPublicData] = useContext(PublicContex);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [hostel, setHostel] = useState({\r\n        id: \"-1\",\r\n        type: \"\",\r\n        name: \"\",\r\n        address: \"\",\r\n        contact: \"\",\r\n        total_seats: 0,\r\n    })\r\n\r\n    const [error, setError] = useState({\r\n        id: \"\",\r\n        type: \"* field is required\",\r\n        name: \"* field is required\",\r\n        address: \"* field is required\",\r\n        contact: \"* field is required\",\r\n        total_seats: \"* field is required\",\r\n    })\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        console.log(\"now in handlesubmit\");\r\n        event.preventDefault();\r\n//         const value = 1 + publicData.hostel.length;\r\n//         setHostel({ ...hostel, id: value });\r\n\r\n        //check erro?\r\n        const isEmpty = Object.values(error).every(x => x === null || x === \"\");\r\n        console.log(isEmpty);\r\n        if (isEmpty) {\r\n            Axios.post(\"http://localhost:3001/add/hostel\", {\r\n                hostel_id: hostel.id,\r\n                name: hostel.name,\r\n                type: hostel.type,\r\n                address: hostel.address,\r\n                contact: hostel.contact,\r\n                total_seats: hostel.total_seats,\r\n                occupied_seats: 0,\r\n            }).then(() => {\r\n                setShow(true);\r\n                //alert(\"hostel added\");\r\n                console.log(\"hostel added\");\r\n            }).catch((e) => alert(e));\r\n        }\r\n        console.log(hostel);\r\n\r\n    };\r\n\r\n    //hostel ID auto increment hobe.\r\n    //1+hostelListArray readOnly dewa takbe\r\n    return (\r\n        <>\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid lightGray\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        }} >\r\n            <Alert show={show} variant=\"success\">\r\n                <Alert.Heading>How's it going?!</Alert.Heading>\r\n                <p>\r\n                    Hostel Added successfully...\r\n                </p>\r\n                <hr />\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button onClick={() => { setShow(false); window.location.reload(); }} variant=\"outline-success\">\r\n                        Close!\r\n                    </Button>\r\n                </div>\r\n            </Alert>\r\n\r\n            {!show && (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelID\">\r\n                        <Form.Label>Hostel ID</Form.Label>\r\n                        <Form.Control type=\"number\" value={420} onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, id: value });\r\n                        }} readOnly />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelName\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Hostel Name\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, name: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length < 2)\r\n                                msg = \"Too short!\";\r\n                            setError({ ...error, name: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.name}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelType\">\r\n                        <Form.Label>Type</Form.Label>\r\n                        <Form.Select onChange={(event) => {\r\n                            const value = event.currentTarget.value;\r\n                            setHostel({ ...hostel, type: value })\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            setError({ ...error, type: msg });\r\n                        }}>\r\n                            <option>Select Type</option>\r\n                            <option value=\"male\" >Male</option>\r\n                            <option value=\"female\">Female</option>\r\n                        </Form.Select>\r\n                        <span className=\"text-danger\">{error.type}</span>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelSeats\">\r\n                        <Form.Label>Total Seats</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder='Total number of seats' onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, total_seats: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (Number(value) <= 0)\r\n                                msg = \"Total number of seats must be greater than zero!\";\r\n                            else if (!Number.isInteger(Number(value)))\r\n                                msg = \"Invalid number!\"\r\n                            setError({ ...error, total_seats: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.total_seats}</span>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelAddress\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} placeholder=\"Address...\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, address: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            setError({ ...error, address: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.address}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelContact\">\r\n                        <Form.Label>Contact</Form.Label>\r\n                        <Form.Control type=\"tel\" placeholder=\"Office contact number: 01....\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, contact: value });\r\n                            let msg = \"\";\r\n\r\n                            const regex = /^[0][1][0-9]{9}$/i;\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length !== 11)\r\n                                msg = \"Mobile Number must have to be 11 Digits\";\r\n                            else if (!regex.test(value))\r\n                                msg = \"Invalid format!\";\r\n\r\n                            setError({ ...error, contact: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.contact}</span>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Add Hostel\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n\r\n        </div>\r\n        <br/><br/>\r\n        </>\r\n    )\r\n}\r\n","D:\\final\\Hostel-Management\\client\\src\\pages\\Register.js",["238","239","240","241","242","243"],[],"import 'bootstrap/dist/css/bootstrap.css';\r\nimport React, { useEffect } from \"react\";\r\nimport { Alert, Container, Form, Button } from 'react-bootstrap';\r\nimport validator from 'validator';\r\nimport Axios from 'axios';\r\nimport SingleHostel from '../components/SingleHostel';\r\nimport { Component } from 'react';\r\nclass Register extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            reg: \"\",\r\n            reg_err:\"* field is required\",\r\n            std_name: \"\",\r\n            std_name_err:\"* field is required\",\r\n            password: \"\",\r\n            password_err:\"* field is required\",\r\n            dept: \"\",\r\n            dept_err:\"* field is required\",\r\n            merit: \"\",\r\n            merit_err:\"* field is required\",\r\n            email: \"\",\r\n            email_err:\"* field is required\",\r\n            hostelID: \"\",\r\n            hostelID_err:\"* field is required\",\r\n            roomID: \"\",\r\n            roomID_err:\"* field is required\",\r\n            phone: \"\",\r\n            phone_err:\"* field is required\",\r\n            roleID:\"1\",\r\n            roleTag: \"Student\",\r\n            guardian_name: \"\",\r\n            guardian_name_err:\"* field is required\",\r\n            guardian_address:\"\",\r\n            guardian_address_err:\"* field is required\",\r\n            guardian_phone: \"\",\r\n            guardian_phone_err:\"* field is required\",\r\n            hostels : []\r\n        });\r\n        //get Hostel list from Database\r\n    };\r\n    getHostels = async() => {\r\n        const response= await Axios.get(\"http://localhost:3001/getData/\", { params: { table: \"hostel\" } }).then((response) => {\r\n            let tmp = {hostels : response.data};\r\n            this.setState({hostels : response.data} , ()=>{\r\n                console.log(this.state);\r\n            });\r\n        });\r\n    };\r\n    /* handleChange=(e)=>{\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }*/\r\n    addStudent =()=> {\r\n\r\n        Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: this.state.reg } }).then((response) => {\r\n            if(response.data === \"notRegistered\")\r\n            {\r\n                console.log(\" preityyy  \"+ response.data );\r\n                Axios.post(\"http://localhost:3001/add/students\", {\r\n                    \"reg\":this.state.reg,\r\n                    \"name\":this.state.std_name,\r\n                    \"dept\": this.state.dept,\r\n                    \"merit\": this.state.merit,\r\n                    \"email\": this.state.email,\r\n                    \"hostel_id\": this.state.hostelID,\r\n                    \"room_id\": this.state.roomID,\r\n                    \"phone\": this.state.phone,\r\n                    \"role_id\":this.state.roleID\r\n                }).then(()=> {\r\n                    console.log(\"student added\")\r\n                } );\r\n                Axios.post(\"http://localhost:3001/add/guardian_info\", {\r\n                    \"name\": this.state.guardian_name,\r\n                    \"address\":this.state.guardian_address,\r\n                    \"phone\": this.state.guardian_phone\r\n                }).then(()=> {\r\n                    console.log(\"guardian info added\")\r\n                } ); \r\n                Axios.post(\"http://localhost:3001/add/guardian\", {\r\n                    \"std_reg\":this.state.reg,\r\n                    \"phone\": this.state.guardian_phone\r\n                }).then(()=> {\r\n                    console.log(\"guardian added\")\r\n                } );\r\n                Axios.post(\"http://localhost:3001/add/login\", {\r\n                    \"password\":this.state.password,\r\n                    \"role_id\": this.state.roleID,\r\n                    \"email\": this.state.email\r\n                }).then(()=> {\r\n                    console.log(\"login added\")\r\n                } ); \r\n            }\r\n            else if(response.data === \"Registered\") {\r\n                alert(\"This registration number already exists!\");\r\n            }\r\n            else {\r\n                alert(\"Something went wrong! try again!\");\r\n            }\r\n            console.log(response.data);\r\n        }).catch((e) => alert(e));\r\n\r\n        \r\n        \r\n    };\r\n    componentDidMount(){\r\n        this.getHostels();\r\n    }\r\n    render(){\r\n        return(\r\n            <Container className=\"my-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center align-items-center\">\r\n                        <h4>Register for student</h4>\r\n                        \r\n                        <div className=\"shadow p-4\" style={{\r\n                            width: \"60%\",\r\n                            border: \"3px solid lightGray\",\r\n                            marginLeft: \"auto\",\r\n                            marginRight: \"auto\",\r\n                        }} >\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Registration No</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Reg No\" onChange={(event) => {\r\n                                    const value = event.target.value;\r\n                                    let msg = \"\";\r\n                                    if (value.length === 0)\r\n                                        msg = \"* field is required\";\r\n                                    else if (value.length !==10)\r\n                                        msg = \"Registration number is ten digit!\";\r\n                                        this.setState({...this.state,reg:value, reg_err:msg});\r\n                                }} />\r\n                                <span className=\"text-danger\">{this.state.reg_err}</span>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Password\" onChange={(event) => {\r\n                                    const value = event.target.value;\r\n                                    let msg = \"\";\r\n                                    if (value.length === 0)\r\n                                        msg = \"* field is required\";\r\n                                    else if (value.length < 5)\r\n                                        msg = \"Password should be at least 5 digit!\";\r\n                                        this.setState({...this.state,password:value, password_err:msg});\r\n                                }} />\r\n                                <span className=\"text-danger\">{this.state.password_err}</span>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Name\" onChange={(event) => {\r\n                                    const value = event.target.value;\r\n                                    let msg = \"\";\r\n                                    if (value.length === 0)\r\n                                        msg = \"* field is required\";\r\n                                        this.setState({...this.state,std_name:value, std_name_err:msg});\r\n                                }} />\r\n                                <span className=\"text-danger\">{this.state.std_name_err}</span>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Department</Form.Label>\r\n                                <select className=\"form-select\" onChange={(event)=> {\r\n                                    const value = event.currentTarget.value;\r\n                                    console.log(value);\r\n                                    let msg=\"\";\r\n                                    if(value.length === 0) msg=\"* field is required\";\r\n                                    this.setState({...this.state,dept:value,dept_err: msg});\r\n                                }}>\r\n                                <option selected>Department</option>\r\n                                <option value=\"1\">CSE</option>\r\n                                <option value=\"2\">EEE</option>\r\n                                <option value=\"3\">SWE</option>\r\n                                \r\n                            </select>\r\n                                <span className=\"text-danger\">{this.state.dept_err}</span>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Merit Position</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Merit position\" onChange={(event) => {\r\n                                    const value = event.target.value;\r\n                                    let msg = \"\";\r\n                                    if (value.length === 0)\r\n                                        msg = \"* field is required\";\r\n                                        this.setState({...this.state,merit:value, merit_err:msg});\r\n                                }} />\r\n                                <span className=\"text-danger\">{this.state.merit_err}</span>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Mail address\" onChange={(event) => {\r\n                                    const value = event.target.value;\r\n                                    let msg = \"\";\r\n                                    \r\n                                    if(validator.isEmail(value))\r\n                                        {\r\n                                            try{\r\n                                                this.setState({...this.state,email:value,email_err: msg});\r\n                                            }\r\n                                            catch(e) \r\n                                            {\r\n                                                console.log(e);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            if(value.length === 0) msg=\"* field is required\";\r\n                                            else msg=\"Invalid Mail!!\"\r\n                                            this.setState({...this.state,email_err:msg});\r\n                                            console.log(value);\r\n                                        }\r\n                                }} />\r\n                                <span className=\"text-danger\">{this.state.email_err}</span>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Hostel</Form.Label>\r\n                                <select className=\"form-select\" onChange={(event)=> {\r\n                                    const value = event.currentTarget.value;\r\n                                    console.log(value);\r\n                                    let msg=\"\";\r\n                                    if(value.length ===0) msg= \"* field is required\";\r\n                                    this.setState({...this.state,hostelID:value, hostelID_err: msg});                \r\n                                }}>\r\n                                    {this.state.hostels.map((option, index) => (\r\n                                        <option key={index} value={option.Hostel_ID}>\r\n                                            {option.Name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                <span className=\"text-danger\">{this.state.hostelID_err}</span>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Room Number</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Room\" onChange={(event) => {\r\n                                    const value = event.target.value;\r\n                                    let msg = \"\";\r\n                                    if (value.length === 0)\r\n                                        msg = \"* field is required\";\r\n                                        this.setState({...this.state,roomID:value, roomID_err:msg});\r\n                                }} />\r\n                                <span className=\"text-danger\">{this.state.roomID_err}</span>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Contact Number</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"phone\" onChange={(event) => {\r\n                                    const value = event.target.value;\r\n                                    let msg = \"\";\r\n                                    if(value.length === 0) msg=\"* filed is required\";\r\n                                    if (value.length !== 11)\r\n                                        msg = \"Phone number should be 11 digit!\";\r\n                                        this.setState({...this.state,phone:value, phone_err:msg});\r\n                                }} />\r\n                                <span className=\"text-danger\">{this.state.phone_err}</span>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Guardian name</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"guardian name\" onChange={(event) => {\r\n                                    const value = event.target.value;\r\n                                    let msg = \"\";\r\n                                    if(value.length === 0) msg=\"* filed is required\";\r\n                                    this.setState({...this.state,guardian_name:value, guardian_name_err:msg});\r\n                                }} />\r\n                                <span className=\"text-danger\">{this.state.guardian_name_err}</span>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Guardian address</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"guardian address\" onChange={(event) => {\r\n                                    const value = event.target.value;\r\n                                    let msg = \"\";\r\n                                    if(value.length === 0) msg=\"* filed is required\";    \r\n                                    this.setState({...this.state,guardian_address:value, guardian_address_err:msg});\r\n                                }} />\r\n                                <span className=\"text-danger\">{this.state.guardian_address_err}</span>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Guardian_phone</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"guardian phone\" onChange={(event) => {\r\n                                    const value = event.target.value;\r\n                                    let msg = \"\";\r\n                                    if(value.length === 0) msg=\"* filed is required\";\r\n                                    if (value.length !== 11)\r\n                                        msg = \"Phone number should be 11 digit!\";\r\n                                        this.setState({...this.state,guardian_phone:value, guardian_phone_err:msg});\r\n                                }} />\r\n                                <span className=\"text-danger\">{this.state.guardian_phone_err}</span>\r\n                            </Form.Group>\r\n\r\n                            <button \r\n                                    type=\"submit\" \r\n                                    className=\"btn btn-primary\"\r\n                                    onClick={this.addStudent}\r\n                                >\r\n                                    Submit\r\n                                </button>\r\n                                <p className=\"text-right my-4\">\r\n                                    <a href=\"http://localhost:3000/AdminReg\">Not a student??</a>\r\n                                </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Register;","D:\\final\\Hostel-Management\\client\\src\\components\\firebase.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\AdministrationSidebar.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\GetHostelData.js",["244","245"],[],"import React, { useState, useContext } from 'react'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport Axios from 'axios';\r\n\r\nimport UpdateHostel from './UpdateHostel';\r\n\r\n//import { PublicContex } from './PublicContext';\r\n\r\nexport default function GetHostelData() {\r\n    //const [publicData, setPublicData] = useContext(PublicContex);\r\n\r\n    const [update, setUpdate] = useState(false);\r\n    const [hostelData, setHostelData] = useState(null);\r\n    const [id, setId] = useState();\r\n\r\n    const [error, setError] = useState({\r\n        id: \"* field is required\",\r\n    })\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const isEmpty = Object.values(error).every(x => x === null || x === \"\");\r\n        console.log(isEmpty);\r\n\r\n        if (isEmpty) {\r\n            console.log(\"dukse\"+ id);\r\n            Axios.get(\"http://localhost:3001/getData/hostel\", { params: { hostel_id: id } }).then((response) => {\r\n                if(response.data === \"error\"){\r\n                    setError({ ...error, id: \"You have entered an Invalid id!!...\" });\r\n                } else {\r\n                    let data = JSON.stringify(response.data[0]);\r\n                    console.log(\"res data\");\r\n                    console.log(data);\r\n                    setHostelData(data);\r\n                    console.log(\"hostel data\");\r\n                    console.log(hostelData);\r\n\r\n                    setUpdate(true);\r\n                }\r\n            }).catch((e) => alert(e));\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid lightGray\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        }} >\r\n\r\n            {!update && (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelID\">\r\n                        <Form.Label>Hostel ID</Form.Label>\r\n                        <Form.Control type=\"number\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            console.log(\"dhur baal\"+value);\r\n                            setId(value);\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (Number(value) <= 0 || !Number.isInteger(Number(value)))\r\n                                msg = \"Invalid hostel ID!\"\r\n                                console.log(\"msg = \"+msg);\r\n                            setError({ ...error, id: msg });\r\n                        }}  />\r\n                        <span className=\"text-danger\">{error.id}</span>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Select Hostel\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n\r\n        </div>\r\n        {update && (<UpdateHostel hostel={hostelData} />)}\r\n        <br/><br/>\r\n        </>\r\n    )\r\n}\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\SwapManual.js",["246","247","248","249","250"],[],"import React, { useEffect, useState } from 'react'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport Axios from 'axios';\r\n\r\n//import { PublicContex } from './PublicContext';\r\n\r\nexport default function SawpManual() {\r\n    //const [publicData, setPublicData] = useContext(PublicContex);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [finalMsg, setFinalMsg] = useState(\"\");\r\n\r\n    const [reg, setReg] = useState({\r\n        reg1: 0,\r\n        reg2: 0,\r\n    })\r\n\r\n    const [info, setInfo] = useState({\r\n        \r\n        hostel1: null,\r\n        room1: null,\r\n        hostel2: null,\r\n        room2: null\r\n        \r\n    })\r\n\r\n    const [ready, setReady] = useState(true);\r\n    const [user1, setUser1] = useState(null);\r\n    const [user2, setUser2] = useState(null);\r\n\r\n    const [error, setError] = useState({\r\n        reg1: \"* field is required\",\r\n        reg2: \"* field is required\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log(\"effect... loading\");\r\n        console.log(info);\r\n\r\n        const isOk = Object.values(info).every(x => x !== null);\r\n\r\n        if(isOk && ready && reg.reg1 && reg.reg2){\r\n            console.log(\"Ready to swap\");\r\n            setReady(false);\r\n            console.log(info);\r\n            setReg1();\r\n        }\r\n        \r\n\r\n    }, [info]);\r\n\r\n    const setReg2 = async () => {\r\n        console.log(\"set reg 2 aise\");\r\n        setInfo(latestInfoState => { return {...latestInfoState} });\r\n        try{\r\n                await Axios.put(\"http://localhost:3001/update/students\", {\r\n                    reg: reg.reg2,\r\n                    hostel_id: info.hostel1,\r\n                    room_id: info.room1,\r\n\r\n                }).then((response) => {\r\n\r\n                    if(response.data === \"error\"){\r\n                        setFinalMsg(\"Something Error!!\");\r\n                    } else {\r\n                        setFinalMsg(\"Room Updated successfully...\\n\"+reg.reg1+\" is assigned to Hostel: \"+info.hostel2+\", Room: \"+info.room2+\". \\n\"+reg.reg2+\" is assigned to Hostel: \"+info.hostel1+\", Room: \"+info.room1);\r\n                    }\r\n                    setShow(true);\r\n                }).catch((e) => alert(e));\r\n        } \r\n        catch(err) {\r\n            console.log('err:  '+ err );\r\n        }\r\n    }\r\n\r\n    const setReg1 = async () => {\r\n        console.log(\"set reg 1 o dukse\");\r\n        setInfo(latestInfoState => { return {...latestInfoState} });\r\n        console.log(info);\r\n\r\n        try{\r\n                await Axios.put(\"http://localhost:3001/update/students\", {\r\n                    reg: reg.reg1,\r\n                    hostel_id: info.hostel2,\r\n                    room_id: info.room2,\r\n\r\n                }).then((response) => {\r\n                    if(response.data === \"error\"){\r\n                        setFinalMsg(\"Something Error!!\");\r\n                    } else {\r\n                        setReg2();\r\n                    }\r\n                }).catch((e) => alert(e));\r\n        } \r\n        catch(err) {            \r\n            console.log('err:  '+ err );\r\n        }\r\n    }\r\n    \r\n    const checkReg2 = async (reg2) => {\r\n        try {\r\n                await Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg2 } }).then( (response)=>{\r\n\r\n                    if(response.data === \"error\"){\r\n                        alert(\"Something error!!\");\r\n                    } else if (response.data === \"notRegistered\"){\r\n                        setError({ ...error, reg2: \"Reg2 is not registered!!\" });\r\n                    } else {\r\n                        //let data = JSON.stringify(response.data[0]);\r\n                        let data = response.data[0];\r\n                        console.log(\"res2 data\");\r\n                        console.log(data);\r\n                        setInfo(latestInfoState => { return {...latestInfoState, hostel2: data.Hostel_ID, room2: data.Room_ID } });\r\n                        \r\n                       // setInfo({ ...info, hostel2: data.Hostel_ID, room2: data.Room_ID});\r\n                    \r\n                        //setUser2(data);\r\n                        //setReg1();\r\n                        console.log(\"ok??????\");\r\n                    }\r\n\r\n                });\r\n                \r\n        }\r\n        catch(err) {\r\n            console.log('err:  '+ err );\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit =  (event) => {\r\n\r\n        event.preventDefault();\r\n        //check erro?\r\n        const isEmpty = Object.values(error).every(x => x === null || x === \"\");\r\n        console.log(isEmpty);\r\n        console.log(error);\r\n        \r\n        if (isEmpty) {\r\n\r\n            try {\r\n                Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg1 } }).then((response) =>{\r\n                    if(response.data === \"error\"){\r\n                        alert(\"Something error!!\");\r\n                    } else if (response.data === \"notRegistered\"){\r\n                        setError({ ...error, reg1: \"Reg1 is not registered!!\" });\r\n                    } else {\r\n                        //let data = JSON.stringify(response.data[0]);\r\n                        let data = response.data[0];\r\n                        console.log(\"res1 data\");\r\n                        console.log(data);\r\n                        setInfo(latestInfoState => { return {...latestInfoState, hostel1: data.Hostel_ID, room1: data.Room_ID } });\r\n\r\n                        //setInfo({ ...info, room1: data.Room_ID, hostel1: data.Hostel_ID});\r\n                        //setInfo({ ...info, hostel1: data.Hostel_ID});\r\n                        \r\n                        //setUser1(data);\r\n\r\n                        checkReg2(reg.reg2);\r\n                    }\r\n                });\r\n\r\n\r\n                \r\n       } catch(err) {\r\n            console.log('err:  '+ err );\r\n       }\r\n\r\n        //     try {\r\n        //         const response = await Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg1 } });\r\n        //         if(response.data === \"error\"){\r\n        //             alert(\"Something error!!\");\r\n        //         } else if (response.data === \"notRegistered\"){\r\n        //             setError({ ...error, reg1: \"Reg1 is not registered!!\" });\r\n        //         } else {\r\n        //             //let data = JSON.stringify(response.data[0]);\r\n        //             let data = response.data[0];\r\n        //             console.log(\"res data\");\r\n        //             console.log(data);\r\n        //             console.log(\"baaal: \"+ JSON.stringify(data.Hostel_ID) + \" ?? \"+ data.Room_ID);\r\n        //             console.log(typeof data);\r\n        //             console.log(typeof JSON.stringify(data.Hostel_ID));\r\n        //             console.log(typeof data.Room_ID);\r\n        //             console.log(typeof info.hostel1);\r\n        //             setInfo({ ...info, hostel1: JSON.stringify(data.Hostel_ID) });\r\n        //             setInfo({ ...info, room1: data.Room_ID });\r\n\r\n        //             hostel1 = data.Hostel_ID;\r\n        //             room1 = data.Room_ID;\r\n\r\n        //             console.log(\"check: \"+hostel1+\" --- \"+room1);\r\n\r\n        //             console.log(\"here \"+ info);\r\n\r\n        //             setOkReg1(true);\r\n        //         }\r\n        //    } catch(err) {\r\n        //         console.log('err:  '+ err );\r\n        //    }\r\n\r\n\r\n            // Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg1 } }).then((response) => {\r\n            //     if(response.data === \"error\"){\r\n            //         alert(\"Something error!!\");\r\n            //     } else if (response.data === \"notRegistered\"){\r\n            //         setError({ ...error, reg1: \"Reg1 is not registered!!\" });\r\n            //     } else {\r\n            //         //let data = JSON.stringify(response.data[0]);\r\n            //         let data = response.data[0];\r\n            //         console.log(\"res data\");\r\n            //         console.log(data);\r\n            //         console.log(\"baaal: \"+ JSON.stringify(data.Hostel_ID) + \" ?? \"+ data.Room_ID);\r\n            //         console.log(typeof data);\r\n            //         console.log(typeof JSON.stringify(data.Hostel_ID));\r\n            //         console.log(typeof data.Room_ID);\r\n            //         console.log(typeof info.hostel1);\r\n            //         setInfo({ ...info, hostel1: JSON.stringify(data.Hostel_ID) });\r\n            //         setInfo({ ...info, room1: data.Room_ID });\r\n\r\n            //         hostel1 = data.Hostel_ID;\r\n            //         room1 = data.Room_ID;\r\n\r\n            //         console.log(\"check: \"+hostel1+\" --- \"+room1);\r\n\r\n            //         console.log(\"here \"+ info);\r\n\r\n            //         setOkReg1(true);\r\n            //     }\r\n            // }).catch((e) => alert(e));\r\n\r\n\r\n            // console.log(OkReg1 + \" ... \"+ OkReg2);\r\n            // //if(OkReg1){\r\n            //     const response2 = await Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg2 } });\r\n            //     if(response2.data === \"error\"){\r\n            //         alert(\"Something error!!\");\r\n            //     } else if (response2.data === \"notRegistered\"){\r\n            //         setError({ ...error, reg2: \"Reg2 is not registered!!\" });\r\n            //     } else {\r\n            //         let data = response2.data[0];\r\n            //         hostel2 = data.Hostel_ID;\r\n            //         room2 = data.Room_ID;\r\n\r\n            //         console.log(\"check2: \"+hostel2+\" --- \"+room2);\r\n\r\n            //         setOkReg2(true);\r\n            //         setShow(true);\r\n            //     }\r\n                \r\n                // Axios.get(\"http://localhost:3001/getData/student\", { params: { reg: reg.reg2 } }).then((response) => {\r\n                //     if(response.data === \"error\"){\r\n                //         alert(\"Something error!!\");\r\n                //     } else if (response.data === \"notRegistered\"){\r\n                //         setError({ ...error, reg2: \"Reg2 is not registered!!\" });\r\n                //     } else {\r\n                //         let data = response.data[0];\r\n                //         hostel2 = data.Hostel_ID;\r\n                //         room2 = data.Room_ID;\r\n\r\n                //         console.log(\"check2: \"+hostel2+\" --- \"+room2);\r\n\r\n                //         setOkReg2(true);\r\n                //         setShow(true);\r\n                //     }\r\n                // }).catch((e) => alert(e));\r\n            //}\r\n\r\n\r\n                // Axios.put(\"http://localhost:3001/update/hostel\", {\r\n                //     hostel_id: hostel.id,\r\n                //     type: hostel.type,\r\n                //     name: hostel.name,\r\n                //     address: hostel.address,\r\n                //     contact: hostel.contact,\r\n                //     occupied_seats: hostel.occupied_seats,\r\n                //     total_seats: hostel.total_seats,\r\n        \r\n                // }).then((response) => {\r\n                //     if(response.data === \"error\"){\r\n                //         console.log(\"baaal error\");\r\n                //         setFinalMsg(\"Something Error!!\");\r\n                //     } else {\r\n                //         setFinalMsg(\"Hostel Updated successfully...\");\r\n                //     }\r\n                //     setShow(true);\r\n                // }).catch((e) => alert(e));\r\n                \r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid lightGray\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        }} >\r\n            <Alert show={show} variant=\"success\">\r\n                <Alert.Heading>How's it going?!</Alert.Heading>\r\n                <p>\r\n                    {finalMsg}\r\n                </p>\r\n                <hr />\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button onClick={() => { setShow(false); window.location.reload(); }} variant=\"outline-success\">\r\n                        Close!\r\n                    </Button>\r\n                </div>\r\n            </Alert>\r\n\r\n            {!show && (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelName\">\r\n                        <Form.Label>Reg of std 1</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"Registration number of std 1\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setReg({ ...reg, reg1: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length < 10)\r\n                                msg = \"Too short! Registration number must be 10 digits.\";\r\n                            else if (value.length > 10)\r\n                                msg = \"Too long!\";\r\n                            setError({ ...error, reg1: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.reg1}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelName\">\r\n                        <Form.Label>Reg of std 2</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"Registration number of std 2\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setReg({ ...reg, reg2: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length < 10)\r\n                                msg = \"Too short! Registration number must be 10 digits.\";\r\n                            else if (value.length > 10)\r\n                                msg = \"Too long!\";\r\n                            setError({ ...error, reg2: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.reg2}</span>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Swap Room\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n        </div>\r\n        <br/><br/>\r\n        </>\r\n    )\r\n}\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\SingleHostel.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\RoomDetails.js",["251"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport Axios from 'axios';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport SingleStudent from './SingleStudent';\r\nimport { PublicContex } from './PublicContext';\r\n\r\nexport default function RoomDetails(props) {\r\n\r\n    const [publicData, setPublicData] = useContext(PublicContex);\r\n    const [student, setStudent] = useState([]);\r\n    \r\n    const getData = async () => {\r\n    \r\n        await Axios.get(\"http://localhost:3001/getData/student/room\", { params: { hostel_id: props.hostel_id, room_id: props.room_id } }).then((response) => {\r\n            if(response.data === \"error\"){\r\n                alert(\"Something erroe!!\");\r\n            } else {\r\n                setStudent(response.data);\r\n            }\r\n        }).catch((e) => alert(e));\r\n    \r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"loading room details\");\r\n        \r\n        getData();\r\n\r\n    }, []);\r\n    useEffect(() => {\r\n        console.log(\"data in room details\");\r\n        console.log(student);\r\n    }, [student]);\r\n\r\n    const handleClose = () => {\r\n        console.log(\"closing...\"+props.id);\r\n        const arr = publicData.modalShow;\r\n        arr[props.id] = false;\r\n        setPublicData({...publicData,modalShow: arr});\r\n    };\r\nreturn (\r\n    <React.Fragment key={props.id}>\r\n\r\n        <Modal\r\n            show={publicData.modalShow[props.id]}\r\n            onHide={handleClose}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Room Details\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Room #{props.room_id}</h4>\r\n\r\n                {\r\n                        student.map((val, idx) => {\r\n                            return <SingleStudent data={val} key = {idx} />\r\n                        })\r\n                }\r\n                {!student.length&&(<p>This Room is empty</p>)}\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={handleClose}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n        </React.Fragment>\r\n\r\n)\r\n}\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\NoticeList.js",["252","253","254"],[],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport Axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport UpdateHostel from './UpdateHostel';\r\nimport UpdateNotice from './UpdateNotice';\r\n\r\nexport default function NoticeList() {\r\n\r\n    const [notices, setNotices] = useState([]);\r\n    const [edit, setEdit] = useState(false);\r\n    const [data, setData] = useState(0);\r\n\r\n    const getNotices = () => {\r\n        Axios.get(\"http://localhost:3001/getData/\", { params: { table: \"notice_board\" } }).then((response) => {\r\n            setNotices(response.data);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getNotices();\r\n    }, []);\r\n    useEffect(() => {\r\n        console.log(\"loaded data\");\r\n        console.log(data);\r\n    }, [data,edit]);\r\n    const getLess = (s)=>{\r\n        if(s.length<10) return s;\r\n        else return s.substring(0,7)+\"...\";\r\n    }\r\n\r\n    const handleClick = e => {\r\n        e.preventDefault();\r\n        const id = e.target.id;\r\n        setEdit(true);\r\n        setData(id);\r\n    }\r\n\r\n    const showEditPage = ()=>{\r\n        if(edit) return (<UpdateHostel notice={data}/>);\r\n        else return(<></>);\r\n    }\r\n\r\n    if(!edit)\r\n    return (\r\n        <>\r\n            <div className=\"shadow p-4\" style={{\r\n                width: \"85%\",\r\n                border: \"3px solid lightGray\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n            }} >\r\n\r\n                <Table striped bordered hover>\r\n                    <thead style={{\r\n                        color: \"blue\",\r\n                        letterSpacing: \"2px\",\r\n                        font: \"normal 20px/1 Comic Sans MS,Verdana, Helvetica\",\r\n                    }}>\r\n                        <tr>\r\n                            <th>Date Time</th>\r\n                            <th>Title</th>\r\n                            <th>Hostel ID</th>\r\n                            <th>Priority</th>\r\n                            <th>Description</th>\r\n                            <th>Edit</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {notices.map((val, idx) => {\r\n                            return <React.Fragment key={idx}>\r\n                                    <tr>\r\n                                        <td>{val.DateTime}</td>\r\n                                        <td>{getLess(val.Title)}</td>\r\n                                        <td>{val.Hostel_ID}</td>\r\n                                        <td>{val.Priority}</td>\r\n                                        <td>{getLess(val.Description)}</td>\r\n                                        <td><Button id={idx} key={idx} variant=\"link\" onClick={e => handleClick(e)} >Edit</Button></td>\r\n                                        <td>del</td>\r\n                                    </tr>\r\n                    \r\n                                    </React.Fragment>\r\n                            }\r\n                        )}\r\n                        \r\n                        \r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n            <br /><br />\r\n        </>\r\n    )\r\n    else return (<UpdateNotice notice={notices[data]} />)\r\n}\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\AddNotice.js",["255"],[],"import React, { useState, useContext } from 'react'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport Axios from 'axios';\r\n\r\n//import { PublicContex } from './PublicContext';\r\n\r\nexport default function AddNotice() {\r\n    //const [publicData, setPublicData] = useContext(PublicContex);\r\n    const [show, setShow] = useState(false);\r\n    const [notice, setNotice] = useState({\r\n        title: \"\",\r\n        hostel_id: -1,\r\n        description: \"\",\r\n        priority: 0,\r\n    })\r\n\r\n    const [error, setError] = useState({\r\n        title: \"* field is required\",\r\n        hostel_id: \"* field is required\",\r\n        description: \"* field is required\",\r\n        priority: \"* field is required\",\r\n    })\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        //check erro?\r\n        const isEmpty = Object.values(error).every(x => x === null || x === \"\");\r\n        console.log(isEmpty);\r\n        const tm = Date.now();\r\n        if (isEmpty) {\r\n            Axios.post(\"http://localhost:3001/add/notice\", {\r\n                hostel_id: notice.hostel_id,\r\n                title: notice.title,\r\n                description: notice.description,\r\n                priority: notice.priority,\r\n                date_time: tm,\r\n            }).then(() => {\r\n                setShow(true);\r\n                console.log(\"notice added\");\r\n            }).catch((e) => alert(e));\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid lightGray\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        }} >\r\n            <Alert show={show} variant=\"success\">\r\n                <Alert.Heading>How's it going?!</Alert.Heading>\r\n                <p>\r\n                    Notice Added successfully...\r\n                </p>\r\n                <hr />\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button onClick={() => { setShow(false); window.location.reload(); }} variant=\"outline-success\">\r\n                        Close!\r\n                    </Button>\r\n                </div>\r\n            </Alert>\r\n\r\n            {!show && (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelID\">\r\n                        <Form.Label>Hostel ID</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"put -1 for public notice\"  onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setNotice({ ...notice, hostel_id: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (Number(value) < -1)\r\n                                msg = \"Invalid hostel id!!\";\r\n                            setError({ ...error, hostel_id: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.hostel_id}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"title\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Notice title\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setNotice({ ...notice, title: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length < 2)\r\n                                msg = \"Too short!\";\r\n                            setError({ ...error, title: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.title}</span>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"description\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={4} placeholder=\"Describe...\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setNotice({ ...notice, description: value })\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            setError({ ...error, description: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.description}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"priority\">\r\n                        <Form.Label>Priority</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"Priority of notice...\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setNotice({ ...notice, priority: value })\r\n                            let msg = \"\";\r\n\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n        \r\n                            setError({ ...error, priority: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.priority}</span>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Add Notice\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n\r\n        </div>\r\n        <br/><br/>\r\n        </>\r\n    )\r\n}\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\SidebarItem.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\UpdateHostel.js",["256"],[],"import React, { useEffect, useState } from 'react'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport Axios from 'axios';\r\n\r\n//import { PublicContex } from './PublicContext';\r\n\r\nexport default function UpdateHostel(props) {\r\n    //const [publicData, setPublicData] = useContext(PublicContex);\r\n\r\n    const hostelData = JSON.parse(props.hostel);\r\n    console.log(\"here hostel data::\");\r\n    console.log(hostelData);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [finalMsg, setFinalMsg] = useState(\"\");\r\n\r\n    const [hostel, setHostel] = useState({\r\n        id: JSON.stringify(hostelData.Hostel_ID),\r\n        type: hostelData.Type,\r\n        name: hostelData.Name,\r\n        address: hostelData.Address,\r\n        contact: hostelData.Contact,\r\n        occupied_seats: hostelData.Occupied_Seats,\r\n        total_seats: hostelData.Total_Seats,\r\n    })\r\n\r\n    const [error, setError] = useState({\r\n        id: \"\",\r\n        type: \"\",\r\n        name: \"\",\r\n        address: \"\",\r\n        contact: \"\",\r\n        total_seats: \"\",\r\n    })\r\n\r\n    console.log(\"set: \");\r\n    console.log(hostel);\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        console.log(\"now in handlesubmit2\");\r\n        event.preventDefault();\r\n        //check erro?\r\n        const isEmpty = Object.values(error).every(x => x === null || x === \"\");\r\n        console.log(isEmpty);\r\n        console.log(error);\r\n        \r\n        if (isEmpty) {\r\n                Axios.put(\"http://localhost:3001/update/hostel\", {\r\n                    hostel_id: hostel.id,\r\n                    type: hostel.type,\r\n                    name: hostel.name,\r\n                    address: hostel.address,\r\n                    contact: hostel.contact,\r\n                    occupied_seats: hostel.occupied_seats,\r\n                    total_seats: hostel.total_seats,\r\n        \r\n                }).then((response) => {\r\n                    if(response.data === \"error\"){\r\n                        setFinalMsg(\"Something Error!!\");\r\n                    } else {\r\n                        setFinalMsg(\"Hostel Updated successfully...\");\r\n                    }\r\n                    setShow(true);\r\n                }).catch((e) => alert(e));\r\n                \r\n        }\r\n        console.log(hostel);\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <div className=\"shadow p-4\" style={{\r\n            width: \"60%\",\r\n            border: \"3px solid lightGray\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        }} >\r\n            <Alert show={show} variant=\"success\">\r\n                <Alert.Heading>How's it going?!</Alert.Heading>\r\n                <p>\r\n                    {finalMsg}\r\n                </p>\r\n                <hr />\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button onClick={() => { setShow(false); window.location.reload(); }} variant=\"outline-success\">\r\n                        Close!\r\n                    </Button>\r\n                </div>\r\n            </Alert>\r\n\r\n            {!show && (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelID\">\r\n                        <Form.Label>Hostel ID</Form.Label>\r\n                        <Form.Control type=\"number\" value={hostel.id} readOnly />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelName\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Hostel Name\" value = {hostel.name} onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, name: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length < 2)\r\n                                msg = \"Too short!\";\r\n                            setError({ ...error, name: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.name}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelType\">\r\n                        <Form.Label>Type</Form.Label>\r\n                        <Form.Select value = {hostel.type} onChange={(event) => {\r\n                            const value = event.currentTarget.value;\r\n                            setHostel({ ...hostel, type: value })\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            setError({ ...error, type: msg });\r\n                        }}>\r\n                            <option value=\"male\" >Male</option>\r\n                            <option value=\"female\">Female</option>\r\n                        </Form.Select>\r\n                        <span className=\"text-danger\">{error.type}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"Occupied_Seats\">\r\n                        <Form.Label>Occupied Seats</Form.Label>\r\n                        <Form.Control type=\"number\" value={hostel.occupied_seats} readOnly />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelSeats\">\r\n                        <Form.Label>Total Seats</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder='Total number of seats' value = {hostel.total_seats} onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, total_seats: value });\r\n                            //console.log(Number(value) + \" ??? \"+ Number(hostel.occupied_seats));\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (Number(value) <= 0)\r\n                                msg = \"Total number of seats must be greater than zero!\";\r\n                            else if (!Number.isInteger(Number(value)))\r\n                                msg = \"Invalid number!\"\r\n                            else if (Number(value) < Number(hostel.occupied_seats)){\r\n                                msg = \"Total seats can't be less than occupied seats!\";\r\n                                //console.log(Number.isInteger(Number(value)) + \" ??? \"+ Number(hostel.occupied_seats))\r\n                            }\r\n                            setError({ ...error, total_seats: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.total_seats}</span>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelAddress\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} value = {hostel.address} placeholder=\"Address...\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, address: value });\r\n                            let msg = \"\";\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            setError({ ...error, address: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.address}</span>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"hostelContact\">\r\n                        <Form.Label>Contact</Form.Label>\r\n                        <Form.Control type=\"tel\" value = {hostel.contact} placeholder=\"Office contact number: 01....\" onChange={(event) => {\r\n                            const value = event.target.value;\r\n                            setHostel({ ...hostel, contact: value });\r\n                            let msg = \"\";\r\n\r\n                            const regex = /^[0][1][0-9]{9}$/i;\r\n                            if (value.length === 0)\r\n                                msg = \"* field is required\";\r\n                            else if (value.length !== 11)\r\n                                msg = \"Mobile Number must have to be 11 Digits\";\r\n                            else if (!regex.test(value))\r\n                                msg = \"Invalid format!\";\r\n\r\n                            setError({ ...error, contact: msg });\r\n                        }} />\r\n                        <span className=\"text-danger\">{error.contact}</span>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Update Hostel\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n        </div>\r\n        <br/><br/>\r\n        </>\r\n    )\r\n}\r\n","D:\\final\\Hostel-Management\\client\\src\\components\\UpdateNotice.js",[],[],"D:\\final\\Hostel-Management\\client\\src\\components\\SingleStudent.js",[],[],{"ruleId":"257","severity":1,"message":"258","line":29,"column":16,"nodeType":"259","messageId":"260","endLine":29,"endColumn":23},{"ruleId":"261","severity":1,"message":"262","line":47,"column":5,"nodeType":"263","endLine":47,"endColumn":7,"suggestions":"264"},{"ruleId":"257","severity":1,"message":"265","line":50,"column":10,"nodeType":"259","messageId":"260","endLine":50,"endColumn":13},{"ruleId":"257","severity":1,"message":"266","line":9,"column":9,"nodeType":"259","messageId":"260","endLine":9,"endColumn":17},{"ruleId":"257","severity":1,"message":"267","line":26,"column":20,"nodeType":"259","messageId":"260","endLine":26,"endColumn":33},{"ruleId":"257","severity":1,"message":"268","line":43,"column":7,"nodeType":"259","messageId":"260","endLine":43,"endColumn":13},{"ruleId":"257","severity":1,"message":"269","line":43,"column":15,"nodeType":"259","messageId":"260","endLine":43,"endColumn":24},{"ruleId":"257","severity":1,"message":"270","line":51,"column":11,"nodeType":"259","messageId":"260","endLine":51,"endColumn":19},{"ruleId":"261","severity":1,"message":"271","line":74,"column":7,"nodeType":"263","endLine":74,"endColumn":9,"suggestions":"272"},{"ruleId":"257","severity":1,"message":"273","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":25},{"ruleId":"257","severity":1,"message":"274","line":1,"column":27,"nodeType":"259","messageId":"260","endLine":1,"endColumn":37},{"ruleId":"257","severity":1,"message":"273","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":25},{"ruleId":"257","severity":1,"message":"275","line":2,"column":8,"nodeType":"259","messageId":"260","endLine":2,"endColumn":13},{"ruleId":"257","severity":1,"message":"276","line":5,"column":10,"nodeType":"259","messageId":"260","endLine":5,"endColumn":16},{"ruleId":"257","severity":1,"message":"277","line":8,"column":8,"nodeType":"259","messageId":"260","endLine":8,"endColumn":17},{"ruleId":"257","severity":1,"message":"278","line":12,"column":19,"nodeType":"259","messageId":"260","endLine":12,"endColumn":27},{"ruleId":"257","severity":1,"message":"274","line":1,"column":27,"nodeType":"259","messageId":"260","endLine":1,"endColumn":37},{"ruleId":"257","severity":1,"message":"279","line":2,"column":24,"nodeType":"259","messageId":"260","endLine":2,"endColumn":29},{"ruleId":"257","severity":1,"message":"280","line":3,"column":8,"nodeType":"259","messageId":"260","endLine":3,"endColumn":17},{"ruleId":"257","severity":1,"message":"281","line":7,"column":8,"nodeType":"259","messageId":"260","endLine":7,"endColumn":22},{"ruleId":"257","severity":1,"message":"282","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":26},{"ruleId":"257","severity":1,"message":"273","line":1,"column":28,"nodeType":"259","messageId":"260","endLine":1,"endColumn":36},{"ruleId":"257","severity":1,"message":"275","line":3,"column":8,"nodeType":"259","messageId":"260","endLine":3,"endColumn":13},{"ruleId":"257","severity":1,"message":"267","line":10,"column":24,"nodeType":"259","messageId":"260","endLine":10,"endColumn":37},{"ruleId":"257","severity":1,"message":"283","line":29,"column":8,"nodeType":"259","messageId":"260","endLine":29,"endColumn":14},{"ruleId":"261","severity":1,"message":"284","line":66,"column":6,"nodeType":"263","endLine":66,"endColumn":8,"suggestions":"285"},{"ruleId":"257","severity":1,"message":"277","line":10,"column":8,"nodeType":"259","messageId":"260","endLine":10,"endColumn":17},{"ruleId":"257","severity":1,"message":"286","line":11,"column":8,"nodeType":"259","messageId":"260","endLine":11,"endColumn":21},{"ruleId":"257","severity":1,"message":"287","line":12,"column":8,"nodeType":"259","messageId":"260","endLine":12,"endColumn":18},{"ruleId":"257","severity":1,"message":"288","line":20,"column":12,"nodeType":"259","messageId":"260","endLine":20,"endColumn":22},{"ruleId":"257","severity":1,"message":"267","line":20,"column":24,"nodeType":"259","messageId":"260","endLine":20,"endColumn":37},{"ruleId":"257","severity":1,"message":"289","line":25,"column":17,"nodeType":"259","messageId":"260","endLine":25,"endColumn":23},{"ruleId":"257","severity":1,"message":"290","line":26,"column":18,"nodeType":"259","messageId":"260","endLine":26,"endColumn":25},{"ruleId":"257","severity":1,"message":"291","line":27,"column":18,"nodeType":"259","messageId":"260","endLine":27,"endColumn":25},{"ruleId":"257","severity":1,"message":"292","line":28,"column":19,"nodeType":"259","messageId":"260","endLine":28,"endColumn":27},{"ruleId":"257","severity":1,"message":"293","line":29,"column":19,"nodeType":"259","messageId":"260","endLine":29,"endColumn":27},{"ruleId":"257","severity":1,"message":"294","line":30,"column":23,"nodeType":"259","messageId":"260","endLine":30,"endColumn":35},{"ruleId":"257","severity":1,"message":"295","line":31,"column":21,"nodeType":"259","messageId":"260","endLine":31,"endColumn":31},{"ruleId":"257","severity":1,"message":"296","line":32,"column":19,"nodeType":"259","messageId":"260","endLine":32,"endColumn":27},{"ruleId":"257","severity":1,"message":"297","line":33,"column":12,"nodeType":"259","messageId":"260","endLine":33,"endColumn":19},{"ruleId":"257","severity":1,"message":"298","line":33,"column":21,"nodeType":"259","messageId":"260","endLine":33,"endColumn":31},{"ruleId":"257","severity":1,"message":"299","line":34,"column":22,"nodeType":"259","messageId":"260","endLine":34,"endColumn":33},{"ruleId":"257","severity":1,"message":"278","line":37,"column":19,"nodeType":"259","messageId":"260","endLine":37,"endColumn":27},{"ruleId":"257","severity":1,"message":"300","line":39,"column":14,"nodeType":"259","messageId":"260","endLine":39,"endColumn":28},{"ruleId":"257","severity":1,"message":"301","line":66,"column":11,"nodeType":"259","messageId":"260","endLine":66,"endColumn":28},{"ruleId":"257","severity":1,"message":"302","line":77,"column":11,"nodeType":"259","messageId":"260","endLine":77,"endColumn":24},{"ruleId":"257","severity":1,"message":"274","line":1,"column":37,"nodeType":"259","messageId":"260","endLine":1,"endColumn":47},{"ruleId":"257","severity":1,"message":"279","line":2,"column":24,"nodeType":"259","messageId":"260","endLine":2,"endColumn":29},{"ruleId":"257","severity":1,"message":"270","line":33,"column":15,"nodeType":"259","messageId":"260","endLine":33,"endColumn":23},{"ruleId":"257","severity":1,"message":"303","line":34,"column":17,"nodeType":"259","messageId":"260","endLine":34,"endColumn":20},{"ruleId":"261","severity":1,"message":"262","line":44,"column":9,"nodeType":"263","endLine":44,"endColumn":11,"suggestions":"304"},{"ruleId":"257","severity":1,"message":"282","line":4,"column":19,"nodeType":"259","messageId":"260","endLine":4,"endColumn":28},{"ruleId":"257","severity":1,"message":"279","line":8,"column":10,"nodeType":"259","messageId":"260","endLine":8,"endColumn":15},{"ruleId":"257","severity":1,"message":"305","line":8,"column":34,"nodeType":"259","messageId":"260","endLine":8,"endColumn":40},{"ruleId":"257","severity":1,"message":"306","line":9,"column":8,"nodeType":"259","messageId":"260","endLine":9,"endColumn":13},{"ruleId":"257","severity":1,"message":"307","line":22,"column":11,"nodeType":"259","messageId":"260","endLine":22,"endColumn":22},{"ruleId":"257","severity":1,"message":"308","line":55,"column":10,"nodeType":"259","messageId":"260","endLine":55,"endColumn":20},{"ruleId":"257","severity":1,"message":"274","line":1,"column":27,"nodeType":"259","messageId":"260","endLine":1,"endColumn":37},{"ruleId":"257","severity":1,"message":"282","line":2,"column":17,"nodeType":"259","messageId":"260","endLine":2,"endColumn":26},{"ruleId":"257","severity":1,"message":"279","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":15},{"ruleId":"257","severity":1,"message":"305","line":3,"column":34,"nodeType":"259","messageId":"260","endLine":3,"endColumn":40},{"ruleId":"257","severity":1,"message":"309","line":6,"column":8,"nodeType":"259","messageId":"260","endLine":6,"endColumn":20},{"ruleId":"257","severity":1,"message":"270","line":43,"column":15,"nodeType":"259","messageId":"260","endLine":43,"endColumn":23},{"ruleId":"257","severity":1,"message":"303","line":44,"column":17,"nodeType":"259","messageId":"260","endLine":44,"endColumn":20},{"ruleId":"257","severity":1,"message":"274","line":1,"column":27,"nodeType":"259","messageId":"260","endLine":1,"endColumn":37},{"ruleId":"257","severity":1,"message":"279","line":2,"column":24,"nodeType":"259","messageId":"260","endLine":2,"endColumn":29},{"ruleId":"257","severity":1,"message":"310","line":28,"column":12,"nodeType":"259","messageId":"260","endLine":28,"endColumn":17},{"ruleId":"257","severity":1,"message":"311","line":28,"column":19,"nodeType":"259","messageId":"260","endLine":28,"endColumn":27},{"ruleId":"257","severity":1,"message":"312","line":29,"column":12,"nodeType":"259","messageId":"260","endLine":29,"endColumn":17},{"ruleId":"257","severity":1,"message":"313","line":29,"column":19,"nodeType":"259","messageId":"260","endLine":29,"endColumn":27},{"ruleId":"261","severity":1,"message":"314","line":50,"column":8,"nodeType":"263","endLine":50,"endColumn":14,"suggestions":"315"},{"ruleId":"261","severity":1,"message":"316","line":31,"column":8,"nodeType":"263","endLine":31,"endColumn":10,"suggestions":"317"},{"ruleId":"257","severity":1,"message":"318","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":14},{"ruleId":"257","severity":1,"message":"279","line":2,"column":24,"nodeType":"259","messageId":"260","endLine":2,"endColumn":29},{"ruleId":"257","severity":1,"message":"319","line":39,"column":11,"nodeType":"259","messageId":"260","endLine":39,"endColumn":23},{"ruleId":"257","severity":1,"message":"274","line":1,"column":27,"nodeType":"259","messageId":"260","endLine":1,"endColumn":37},{"ruleId":"257","severity":1,"message":"282","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":26},"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getHostels'. Either include it or remove the dependency array.","ArrayExpression",["320"],"'msg' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'setPublicData' is assigned a value but never used.","'hostel' is assigned a value but never used.","'setHostel' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getStudent'. Either include it or remove the dependency array.",["321"],"'useState' is defined but never used.","'useContext' is defined but never used.","'Axios' is defined but never used.","'Navbar' is defined but never used.","'AddHostel' is defined but never used.","'setQuery' is assigned a value but never used.","'Alert' is defined but never used.","'validator' is defined but never used.","'StudentSidebar' is defined but never used.","'useEffect' is defined but never used.","'roomID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData' and 'getRooms'. Either include them or remove the dependency array.",["322"],"'GetHostelData' is defined but never used.","'SwapManual' is defined but never used.","'publicData' is assigned a value but never used.","'setReg' is assigned a value but never used.","'setName' is assigned a value but never used.","'setDept' is assigned a value but never used.","'setMerit' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setHostel_ID' is assigned a value but never used.","'setRoom_ID' is assigned a value but never used.","'setPhone' is assigned a value but never used.","'role_id' is assigned a value but never used.","'setRole_ID' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'addStudentInfo' is defined but never used.","'updateStudentInfo' is assigned a value but never used.","'deleteStudent' is assigned a value but never used.","'tmp' is assigned a value but never used.",["323"],"'Button' is defined but never used.","'axios' is defined but never used.","'LoginStatus' is assigned a value but never used.","'demoMethod' is assigned a value but never used.","'SingleHostel' is defined but never used.","'user1' is assigned a value but never used.","'setUser1' is assigned a value but never used.","'user2' is assigned a value but never used.","'setUser2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ready', 'reg.reg1', 'reg.reg2', and 'setReg1'. Either include them or remove the dependency array.",["324"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["325"],"'Form' is defined but never used.","'showEditPage' is assigned a value but never used.",{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"326","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},"Update the dependencies array to be: [getHostels]",{"range":"337","text":"338"},"Update the dependencies array to be: [getStudent]",{"range":"339","text":"340"},"Update the dependencies array to be: [getData, getRooms]",{"range":"341","text":"342"},{"range":"343","text":"338"},"Update the dependencies array to be: [info, ready, reg.reg1, reg.reg2, setReg1]",{"range":"344","text":"345"},"Update the dependencies array to be: [getData]",{"range":"346","text":"347"},[1558,1560],"[getHostels]",[2087,2089],"[getStudent]",[2178,2180],"[getData, getRooms]",[1273,1275],[1291,1297],"[info, ready, reg.reg1, reg.reg2, setReg1]",[982,984],"[getData]"]